// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package c2functions

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// GetPayloadsQueryPayload includes the requested fields of the GraphQL type payload.
// The GraphQL type's documentation follows.
//
// columns and relationships of "payload"
type GetPayloadsQueryPayload struct {
	// An array relationship
	C2profileparametersinstances []GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance `json:"c2profileparametersinstances"`
}

// GetC2profileparametersinstances returns GetPayloadsQueryPayload.C2profileparametersinstances, and is useful for accessing the field via an interface.
func (v *GetPayloadsQueryPayload) GetC2profileparametersinstances() []GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance {
	return v.C2profileparametersinstances
}

// GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance includes the requested fields of the GraphQL type c2profileparametersinstance.
// The GraphQL type's documentation follows.
//
// columns and relationships of "c2profileparametersinstance"
type GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance struct {
	Value string `json:"value"`
	// An object relationship
	C2profileparameter GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstanceC2profileparameterC2profileparameters `json:"c2profileparameter"`
}

// GetValue returns GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance.Value, and is useful for accessing the field via an interface.
func (v *GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance) GetValue() string {
	return v.Value
}

// GetC2profileparameter returns GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance.C2profileparameter, and is useful for accessing the field via an interface.
func (v *GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstance) GetC2profileparameter() GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstanceC2profileparameterC2profileparameters {
	return v.C2profileparameter
}

// GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstanceC2profileparameterC2profileparameters includes the requested fields of the GraphQL type c2profileparameters.
// The GraphQL type's documentation follows.
//
// columns and relationships of "c2profileparameters"
type GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstanceC2profileparameterC2profileparameters struct {
	Name string `json:"name"`
}

// GetName returns GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstanceC2profileparameterC2profileparameters.Name, and is useful for accessing the field via an interface.
func (v *GetPayloadsQueryPayloadC2profileparametersinstancesC2profileparametersinstanceC2profileparameterC2profileparameters) GetName() string {
	return v.Name
}

// GetPayloadsQueryResponse is returned by GetPayloadsQuery on success.
type GetPayloadsQueryResponse struct {
	// fetch data from the table: "payload"
	Payload []GetPayloadsQueryPayload `json:"payload"`
}

// GetPayload returns GetPayloadsQueryResponse.Payload, and is useful for accessing the field via an interface.
func (v *GetPayloadsQueryResponse) GetPayload() []GetPayloadsQueryPayload { return v.Payload }

// The query or mutation executed by GetPayloadsQuery.
const GetPayloadsQuery_Operation = `
query GetPayloadsQuery {
	payload(where: {build_phase:{_eq:"success"},deleted:{_eq:false},c2profileparametersinstances:{c2profile:{name:{_eq:"httpx"}}}}) {
		c2profileparametersinstances(where: {c2profile:{name:{_eq:"httpx"}}}) {
			value
			c2profileparameter {
				name
			}
		}
	}
}
`

func GetPayloadsQuery(
	ctx_ context.Context,
	client_ graphql.Client,
) (*GetPayloadsQueryResponse, error) {
	req_ := &graphql.Request{
		OpName: "GetPayloadsQuery",
		Query:  GetPayloadsQuery_Operation,
	}
	var err_ error

	var data_ GetPayloadsQueryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
