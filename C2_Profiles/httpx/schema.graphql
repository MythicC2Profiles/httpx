schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

type BulkDownloadOutput {
  error: String
  file_id: String
  status: String!
}

type BypassOutput {
  error: String
  status: String!
}

type C2SampleMessageOutput {
  error: String
  output: String
  status: String!
}

type CallbackgraphedgeAddOutput {
  error: String
  status: String!
}

type CallbackgraphedgeRemoveOutput {
  error: String
  status: String!
}

type ConfigCheckOutput {
  error: String
  output: String
  status: String!
}

type ContainerFile {
  data: String
  error: String
  filename: String
  status: String!
  version: String
}

type GetIOCOutput {
  error: String
  output: String
  status: String!
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

input OperatorInput {
  bot: Boolean
  password: String
  username: String!
}

type OperatorOutput {
  account_type: String
  active: Boolean
  admin: Boolean
  creation_time: String
  current_operation: String
  current_operation_id: Int
  deleted: Boolean
  error: String
  failed_login_count: Int
  id: Int
  last_failed_login_timestamp: String
  last_login: String
  status: String!
  ui_config: String
  username: String
  view_utc_time: Boolean
}

type PayloadConfig {
  config: String
  error: String
  status: String!
}

type ProfileOutput {
  error: String
  output: String
  status: String!
  version: String
}

type ReissueTaskHandlerOutput {
  error: String
  status: String!
}

type ReissueTaskOutput {
  error: String
  status: String!
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_array_comparison_exp {
  """is the array contained in the given array value"""
  _contained_in: [String!]

  """does the array contain the given value"""
  _contains: [String!]
  _eq: [String!]
  _gt: [String!]
  _gte: [String!]
  _in: [[String!]!]
  _is_null: Boolean
  _lt: [String!]
  _lte: [String!]
  _neq: [String!]
  _nin: [[String!]!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

type addAttackToTaskOutput {
  error: String
  status: String!
}

"""
columns and relationships of "apitokens"
"""
type apitokens {
  active: Boolean!
  created_by: Int

  """An object relationship"""
  created_by_operator: operator
  creation_time: timestamp!

  """An array relationship"""
  credentials(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """An aggregate relationship"""
  credentials_aggregate(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): credential_aggregate!
  deleted: Boolean!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  id: Int!

  """An array relationship"""
  keylogs(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): [keylog!]!

  """An aggregate relationship"""
  keylogs_aggregate(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): keylog_aggregate!

  """An array relationship"""
  loadedcommands(
    """distinct select on columns"""
    distinct_on: [loadedcommands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [loadedcommands_order_by!]

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!

  """An array relationship"""
  mythictrees(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """An aggregate relationship"""
  mythictrees_aggregate(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): mythictree_aggregate!
  name: String!

  """An array relationship"""
  operationeventlogs(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): [operationeventlog!]!

  """An aggregate relationship"""
  operationeventlogs_aggregate(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): operationeventlog_aggregate!

  """An array relationship"""
  operations(
    """distinct select on columns"""
    distinct_on: [operation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operation_order_by!]

    """filter the rows returned"""
    where: operation_bool_exp
  ): [operation!]!

  """An object relationship"""
  operator: operator!
  operator_id: Int!

  """An array relationship"""
  operatoroperations(
    """distinct select on columns"""
    distinct_on: [operatoroperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operatoroperation_order_by!]

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!

  """An array relationship"""
  operators(
    """distinct select on columns"""
    distinct_on: [operator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operator_order_by!]

    """filter the rows returned"""
    where: operator_bool_exp
  ): [operator!]!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """An array relationship"""
  responses(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """An aggregate relationship"""
  responses_aggregate(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): response_aggregate!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An array relationship"""
  tagtypes(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): [tagtype!]!

  """An aggregate relationship"""
  tagtypes_aggregate(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): tagtype_aggregate!

  """An object relationship"""
  task: task
  task_id: Int

  """An array relationship"""
  taskartifacts(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """An aggregate relationship"""
  taskartifacts_aggregate(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): taskartifact_aggregate!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  token_type: String!
  token_value: String!
}

"""
order by aggregate values of table "apitokens"
"""
input apitokens_aggregate_order_by {
  avg: apitokens_avg_order_by
  count: order_by
  max: apitokens_max_order_by
  min: apitokens_min_order_by
  stddev: apitokens_stddev_order_by
  stddev_pop: apitokens_stddev_pop_order_by
  stddev_samp: apitokens_stddev_samp_order_by
  sum: apitokens_sum_order_by
  var_pop: apitokens_var_pop_order_by
  var_samp: apitokens_var_samp_order_by
  variance: apitokens_variance_order_by
}

"""
order by avg() on columns of table "apitokens"
"""
input apitokens_avg_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "apitokens". All fields are combined with a logical 'AND'.
"""
input apitokens_bool_exp {
  _and: [apitokens_bool_exp!]
  _not: apitokens_bool_exp
  _or: [apitokens_bool_exp!]
  active: Boolean_comparison_exp
  created_by: Int_comparison_exp
  created_by_operator: operator_bool_exp
  creation_time: timestamp_comparison_exp
  credentials: credential_bool_exp
  credentials_aggregate: credential_aggregate_bool_exp
  deleted: Boolean_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  id: Int_comparison_exp
  keylogs: keylog_bool_exp
  keylogs_aggregate: keylog_aggregate_bool_exp
  loadedcommands: loadedcommands_bool_exp
  mythictrees: mythictree_bool_exp
  mythictrees_aggregate: mythictree_aggregate_bool_exp
  name: String_comparison_exp
  operationeventlogs: operationeventlog_bool_exp
  operationeventlogs_aggregate: operationeventlog_aggregate_bool_exp
  operations: operation_bool_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  operatoroperations: operatoroperation_bool_exp
  operators: operator_bool_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  responses: response_bool_exp
  responses_aggregate: response_aggregate_bool_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  tagtypes: tagtype_bool_exp
  tagtypes_aggregate: tagtype_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  taskartifacts: taskartifact_bool_exp
  taskartifacts_aggregate: taskartifact_aggregate_bool_exp
  tasks: task_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  token_type: String_comparison_exp
  token_value: String_comparison_exp
}

"""
order by max() on columns of table "apitokens"
"""
input apitokens_max_order_by {
  created_by: order_by
  creation_time: order_by
  eventstepinstance_id: order_by
  id: order_by
  name: order_by
  operator_id: order_by
  task_id: order_by
  token_type: order_by
  token_value: order_by
}

"""
order by min() on columns of table "apitokens"
"""
input apitokens_min_order_by {
  created_by: order_by
  creation_time: order_by
  eventstepinstance_id: order_by
  id: order_by
  name: order_by
  operator_id: order_by
  task_id: order_by
  token_type: order_by
  token_value: order_by
}

"""
response of any mutation on the table "apitokens"
"""
type apitokens_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [apitokens!]!
}

"""Ordering options when selecting data from "apitokens"."""
input apitokens_order_by {
  active: order_by
  created_by: order_by
  created_by_operator: operator_order_by
  creation_time: order_by
  credentials_aggregate: credential_aggregate_order_by
  deleted: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  id: order_by
  keylogs_aggregate: keylog_aggregate_order_by
  loadedcommands_aggregate: loadedcommands_aggregate_order_by
  mythictrees_aggregate: mythictree_aggregate_order_by
  name: order_by
  operationeventlogs_aggregate: operationeventlog_aggregate_order_by
  operations_aggregate: operation_aggregate_order_by
  operator: operator_order_by
  operator_id: order_by
  operatoroperations_aggregate: operatoroperation_aggregate_order_by
  operators_aggregate: operator_aggregate_order_by
  payloads_aggregate: payload_aggregate_order_by
  responses_aggregate: response_aggregate_order_by
  tags_aggregate: tag_aggregate_order_by
  tagtypes_aggregate: tagtype_aggregate_order_by
  task: task_order_by
  task_id: order_by
  taskartifacts_aggregate: taskartifact_aggregate_order_by
  tasks_aggregate: task_aggregate_order_by
  token_type: order_by
  token_value: order_by
}

"""primary key columns input for table: apitokens"""
input apitokens_pk_columns_input {
  id: Int!
}

"""
select columns of table "apitokens"
"""
enum apitokens_select_column {
  """column name"""
  active

  """column name"""
  created_by

  """column name"""
  creation_time

  """column name"""
  deleted

  """column name"""
  eventstepinstance_id

  """column name"""
  id

  """column name"""
  name

  """column name"""
  operator_id

  """column name"""
  task_id

  """column name"""
  token_type

  """column name"""
  token_value
}

"""
input type for updating data in table "apitokens"
"""
input apitokens_set_input {
  active: Boolean
  deleted: Boolean
  name: String
}

"""
order by stddev() on columns of table "apitokens"
"""
input apitokens_stddev_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
order by stddev_pop() on columns of table "apitokens"
"""
input apitokens_stddev_pop_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
order by stddev_samp() on columns of table "apitokens"
"""
input apitokens_stddev_samp_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "apitokens"
"""
input apitokens_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: apitokens_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input apitokens_stream_cursor_value_input {
  active: Boolean
  created_by: Int
  creation_time: timestamp
  deleted: Boolean
  eventstepinstance_id: Int
  id: Int
  name: String
  operator_id: Int
  task_id: Int
  token_type: String
  token_value: String
}

"""
order by sum() on columns of table "apitokens"
"""
input apitokens_sum_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

input apitokens_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: apitokens_set_input

  """filter the rows which have to be updated"""
  where: apitokens_bool_exp!
}

"""
order by var_pop() on columns of table "apitokens"
"""
input apitokens_var_pop_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
order by var_samp() on columns of table "apitokens"
"""
input apitokens_var_samp_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
order by variance() on columns of table "apitokens"
"""
input apitokens_variance_order_by {
  created_by: order_by
  eventstepinstance_id: order_by
  id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
columns and relationships of "attack"
"""
type attack {
  """An array relationship"""
  attackcommands(
    """distinct select on columns"""
    distinct_on: [attackcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attackcommand_order_by!]

    """filter the rows returned"""
    where: attackcommand_bool_exp
  ): [attackcommand!]!

  """An array relationship"""
  attacktasks(
    """distinct select on columns"""
    distinct_on: [attacktask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attacktask_order_by!]

    """filter the rows returned"""
    where: attacktask_bool_exp
  ): [attacktask!]!
  id: Int!
  name: String!
  os: String!
  t_num: String!
  tactic: String!
}

"""
Boolean expression to filter rows from the table "attack". All fields are combined with a logical 'AND'.
"""
input attack_bool_exp {
  _and: [attack_bool_exp!]
  _not: attack_bool_exp
  _or: [attack_bool_exp!]
  attackcommands: attackcommand_bool_exp
  attacktasks: attacktask_bool_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  os: String_comparison_exp
  t_num: String_comparison_exp
  tactic: String_comparison_exp
}

"""Ordering options when selecting data from "attack"."""
input attack_order_by {
  attackcommands_aggregate: attackcommand_aggregate_order_by
  attacktasks_aggregate: attacktask_aggregate_order_by
  id: order_by
  name: order_by
  os: order_by
  t_num: order_by
  tactic: order_by
}

"""
select columns of table "attack"
"""
enum attack_select_column {
  """column name"""
  id

  """column name"""
  name

  """column name"""
  os

  """column name"""
  t_num

  """column name"""
  tactic
}

"""
Streaming cursor of the table "attack"
"""
input attack_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: attack_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input attack_stream_cursor_value_input {
  id: Int
  name: String
  os: String
  t_num: String
  tactic: String
}

"""
columns and relationships of "attackcommand"
"""
type attackcommand {
  """An object relationship"""
  attack: attack!
  attack_id: Int!

  """An object relationship"""
  command: command!
  command_id: Int!
  id: Int!
}

"""
order by aggregate values of table "attackcommand"
"""
input attackcommand_aggregate_order_by {
  avg: attackcommand_avg_order_by
  count: order_by
  max: attackcommand_max_order_by
  min: attackcommand_min_order_by
  stddev: attackcommand_stddev_order_by
  stddev_pop: attackcommand_stddev_pop_order_by
  stddev_samp: attackcommand_stddev_samp_order_by
  sum: attackcommand_sum_order_by
  var_pop: attackcommand_var_pop_order_by
  var_samp: attackcommand_var_samp_order_by
  variance: attackcommand_variance_order_by
}

"""
order by avg() on columns of table "attackcommand"
"""
input attackcommand_avg_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "attackcommand". All fields are combined with a logical 'AND'.
"""
input attackcommand_bool_exp {
  _and: [attackcommand_bool_exp!]
  _not: attackcommand_bool_exp
  _or: [attackcommand_bool_exp!]
  attack: attack_bool_exp
  attack_id: Int_comparison_exp
  command: command_bool_exp
  command_id: Int_comparison_exp
  id: Int_comparison_exp
}

"""
order by max() on columns of table "attackcommand"
"""
input attackcommand_max_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
order by min() on columns of table "attackcommand"
"""
input attackcommand_min_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""Ordering options when selecting data from "attackcommand"."""
input attackcommand_order_by {
  attack: attack_order_by
  attack_id: order_by
  command: command_order_by
  command_id: order_by
  id: order_by
}

"""
select columns of table "attackcommand"
"""
enum attackcommand_select_column {
  """column name"""
  attack_id

  """column name"""
  command_id

  """column name"""
  id
}

"""
order by stddev() on columns of table "attackcommand"
"""
input attackcommand_stddev_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "attackcommand"
"""
input attackcommand_stddev_pop_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "attackcommand"
"""
input attackcommand_stddev_samp_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "attackcommand"
"""
input attackcommand_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: attackcommand_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input attackcommand_stream_cursor_value_input {
  attack_id: Int
  command_id: Int
  id: Int
}

"""
order by sum() on columns of table "attackcommand"
"""
input attackcommand_sum_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
order by var_pop() on columns of table "attackcommand"
"""
input attackcommand_var_pop_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "attackcommand"
"""
input attackcommand_var_samp_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
order by variance() on columns of table "attackcommand"
"""
input attackcommand_variance_order_by {
  attack_id: order_by
  command_id: order_by
  id: order_by
}

"""
columns and relationships of "attacktask"
"""
type attacktask {
  """An object relationship"""
  attack: attack!
  attack_id: Int!
  id: Int!

  """An object relationship"""
  task: task!
  task_id: Int!
}

"""
order by aggregate values of table "attacktask"
"""
input attacktask_aggregate_order_by {
  avg: attacktask_avg_order_by
  count: order_by
  max: attacktask_max_order_by
  min: attacktask_min_order_by
  stddev: attacktask_stddev_order_by
  stddev_pop: attacktask_stddev_pop_order_by
  stddev_samp: attacktask_stddev_samp_order_by
  sum: attacktask_sum_order_by
  var_pop: attacktask_var_pop_order_by
  var_samp: attacktask_var_samp_order_by
  variance: attacktask_variance_order_by
}

"""
order by avg() on columns of table "attacktask"
"""
input attacktask_avg_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "attacktask". All fields are combined with a logical 'AND'.
"""
input attacktask_bool_exp {
  _and: [attacktask_bool_exp!]
  _not: attacktask_bool_exp
  _or: [attacktask_bool_exp!]
  attack: attack_bool_exp
  attack_id: Int_comparison_exp
  id: Int_comparison_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
}

"""
order by max() on columns of table "attacktask"
"""
input attacktask_max_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
order by min() on columns of table "attacktask"
"""
input attacktask_min_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
response of any mutation on the table "attacktask"
"""
type attacktask_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [attacktask!]!
}

"""Ordering options when selecting data from "attacktask"."""
input attacktask_order_by {
  attack: attack_order_by
  attack_id: order_by
  id: order_by
  task: task_order_by
  task_id: order_by
}

"""
select columns of table "attacktask"
"""
enum attacktask_select_column {
  """column name"""
  attack_id

  """column name"""
  id

  """column name"""
  task_id
}

"""
order by stddev() on columns of table "attacktask"
"""
input attacktask_stddev_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
order by stddev_pop() on columns of table "attacktask"
"""
input attacktask_stddev_pop_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
order by stddev_samp() on columns of table "attacktask"
"""
input attacktask_stddev_samp_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "attacktask"
"""
input attacktask_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: attacktask_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input attacktask_stream_cursor_value_input {
  attack_id: Int
  id: Int
  task_id: Int
}

"""
order by sum() on columns of table "attacktask"
"""
input attacktask_sum_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
order by var_pop() on columns of table "attacktask"
"""
input attacktask_var_pop_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
order by var_samp() on columns of table "attacktask"
"""
input attacktask_var_samp_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

"""
order by variance() on columns of table "attacktask"
"""
input attacktask_variance_order_by {
  attack_id: order_by
  id: order_by
  task_id: order_by
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
columns and relationships of "browserscript"
"""
type browserscript {
  active: Boolean!
  author: String!

  """An array relationship"""
  browserscriptoperations(
    """distinct select on columns"""
    distinct_on: [browserscriptoperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscriptoperation_order_by!]

    """filter the rows returned"""
    where: browserscriptoperation_bool_exp
  ): [browserscriptoperation!]!

  """An object relationship"""
  command: command!
  command_id: Int!
  container_version: String!
  container_version_author: String!
  creation_time: timestamp!
  for_new_ui: Boolean!
  id: Int!

  """An object relationship"""
  operator: operator
  operator_id: Int
  payload_type_id: Int!

  """An object relationship"""
  payloadtype: payloadtype!
  script: String!
  user_modified: Boolean!
}

"""
order by aggregate values of table "browserscript"
"""
input browserscript_aggregate_order_by {
  avg: browserscript_avg_order_by
  count: order_by
  max: browserscript_max_order_by
  min: browserscript_min_order_by
  stddev: browserscript_stddev_order_by
  stddev_pop: browserscript_stddev_pop_order_by
  stddev_samp: browserscript_stddev_samp_order_by
  sum: browserscript_sum_order_by
  var_pop: browserscript_var_pop_order_by
  var_samp: browserscript_var_samp_order_by
  variance: browserscript_variance_order_by
}

"""
order by avg() on columns of table "browserscript"
"""
input browserscript_avg_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
Boolean expression to filter rows from the table "browserscript". All fields are combined with a logical 'AND'.
"""
input browserscript_bool_exp {
  _and: [browserscript_bool_exp!]
  _not: browserscript_bool_exp
  _or: [browserscript_bool_exp!]
  active: Boolean_comparison_exp
  author: String_comparison_exp
  browserscriptoperations: browserscriptoperation_bool_exp
  command: command_bool_exp
  command_id: Int_comparison_exp
  container_version: String_comparison_exp
  container_version_author: String_comparison_exp
  creation_time: timestamp_comparison_exp
  for_new_ui: Boolean_comparison_exp
  id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  payload_type_id: Int_comparison_exp
  payloadtype: payloadtype_bool_exp
  script: String_comparison_exp
  user_modified: Boolean_comparison_exp
}

"""
unique or primary key constraints on table "browserscript"
"""
enum browserscript_constraint {
  """
  unique or primary key constraint on columns "command_id", "operator_id", "for_new_ui"
  """
  browserscript_command_id_operator_id_for_new_ui

  """
  unique or primary key constraint on columns "id"
  """
  browserscript_pkey
}

"""
input type for incrementing numeric columns in table "browserscript"
"""
input browserscript_inc_input {
  command_id: Int
  payload_type_id: Int
}

"""
input type for inserting data into table "browserscript"
"""
input browserscript_insert_input {
  active: Boolean
  author: String
  browserscriptoperations: browserscriptoperation_arr_rel_insert_input
  command_id: Int
  payload_type_id: Int
  script: String
}

"""
order by max() on columns of table "browserscript"
"""
input browserscript_max_order_by {
  author: order_by
  command_id: order_by
  container_version: order_by
  container_version_author: order_by
  creation_time: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
  script: order_by
}

"""
order by min() on columns of table "browserscript"
"""
input browserscript_min_order_by {
  author: order_by
  command_id: order_by
  container_version: order_by
  container_version_author: order_by
  creation_time: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
  script: order_by
}

"""
response of any mutation on the table "browserscript"
"""
type browserscript_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [browserscript!]!
}

"""
input type for inserting object relation for remote table "browserscript"
"""
input browserscript_obj_rel_insert_input {
  data: browserscript_insert_input!

  """upsert condition"""
  on_conflict: browserscript_on_conflict
}

"""
on_conflict condition type for table "browserscript"
"""
input browserscript_on_conflict {
  constraint: browserscript_constraint!
  update_columns: [browserscript_update_column!]! = []
  where: browserscript_bool_exp
}

"""Ordering options when selecting data from "browserscript"."""
input browserscript_order_by {
  active: order_by
  author: order_by
  browserscriptoperations_aggregate: browserscriptoperation_aggregate_order_by
  command: command_order_by
  command_id: order_by
  container_version: order_by
  container_version_author: order_by
  creation_time: order_by
  for_new_ui: order_by
  id: order_by
  operator: operator_order_by
  operator_id: order_by
  payload_type_id: order_by
  payloadtype: payloadtype_order_by
  script: order_by
  user_modified: order_by
}

"""primary key columns input for table: browserscript"""
input browserscript_pk_columns_input {
  id: Int!
}

"""
select columns of table "browserscript"
"""
enum browserscript_select_column {
  """column name"""
  active

  """column name"""
  author

  """column name"""
  command_id

  """column name"""
  container_version

  """column name"""
  container_version_author

  """column name"""
  creation_time

  """column name"""
  for_new_ui

  """column name"""
  id

  """column name"""
  operator_id

  """column name"""
  payload_type_id

  """column name"""
  script

  """column name"""
  user_modified
}

"""
input type for updating data in table "browserscript"
"""
input browserscript_set_input {
  active: Boolean
  author: String
  command_id: Int
  payload_type_id: Int
  script: String
  user_modified: Boolean
}

"""
order by stddev() on columns of table "browserscript"
"""
input browserscript_stddev_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
order by stddev_pop() on columns of table "browserscript"
"""
input browserscript_stddev_pop_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
order by stddev_samp() on columns of table "browserscript"
"""
input browserscript_stddev_samp_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
Streaming cursor of the table "browserscript"
"""
input browserscript_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: browserscript_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input browserscript_stream_cursor_value_input {
  active: Boolean
  author: String
  command_id: Int
  container_version: String
  container_version_author: String
  creation_time: timestamp
  for_new_ui: Boolean
  id: Int
  operator_id: Int
  payload_type_id: Int
  script: String
  user_modified: Boolean
}

"""
order by sum() on columns of table "browserscript"
"""
input browserscript_sum_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
update columns of table "browserscript"
"""
enum browserscript_update_column {
  """column name"""
  active

  """column name"""
  author

  """column name"""
  command_id

  """column name"""
  payload_type_id

  """column name"""
  script

  """column name"""
  user_modified
}

input browserscript_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: browserscript_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: browserscript_set_input

  """filter the rows which have to be updated"""
  where: browserscript_bool_exp!
}

"""
order by var_pop() on columns of table "browserscript"
"""
input browserscript_var_pop_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
order by var_samp() on columns of table "browserscript"
"""
input browserscript_var_samp_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
order by variance() on columns of table "browserscript"
"""
input browserscript_variance_order_by {
  command_id: order_by
  id: order_by
  operator_id: order_by
  payload_type_id: order_by
}

"""
columns and relationships of "browserscriptoperation"
"""
type browserscriptoperation {
  """An object relationship"""
  browserscript: browserscript!
  browserscript_id: Int!
  id: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!
}

"""
order by aggregate values of table "browserscriptoperation"
"""
input browserscriptoperation_aggregate_order_by {
  avg: browserscriptoperation_avg_order_by
  count: order_by
  max: browserscriptoperation_max_order_by
  min: browserscriptoperation_min_order_by
  stddev: browserscriptoperation_stddev_order_by
  stddev_pop: browserscriptoperation_stddev_pop_order_by
  stddev_samp: browserscriptoperation_stddev_samp_order_by
  sum: browserscriptoperation_sum_order_by
  var_pop: browserscriptoperation_var_pop_order_by
  var_samp: browserscriptoperation_var_samp_order_by
  variance: browserscriptoperation_variance_order_by
}

"""
input type for inserting array relation for remote table "browserscriptoperation"
"""
input browserscriptoperation_arr_rel_insert_input {
  data: [browserscriptoperation_insert_input!]!

  """upsert condition"""
  on_conflict: browserscriptoperation_on_conflict
}

"""
order by avg() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_avg_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
Boolean expression to filter rows from the table "browserscriptoperation". All fields are combined with a logical 'AND'.
"""
input browserscriptoperation_bool_exp {
  _and: [browserscriptoperation_bool_exp!]
  _not: browserscriptoperation_bool_exp
  _or: [browserscriptoperation_bool_exp!]
  browserscript: browserscript_bool_exp
  browserscript_id: Int_comparison_exp
  id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
}

"""
unique or primary key constraints on table "browserscriptoperation"
"""
enum browserscriptoperation_constraint {
  """
  unique or primary key constraint on columns "operation_id", "browserscript_id"
  """
  browserscriptoperation_browserscript_id_operation_id

  """
  unique or primary key constraint on columns "id"
  """
  browserscriptoperation_pkey
}

"""
input type for inserting data into table "browserscriptoperation"
"""
input browserscriptoperation_insert_input {
  browserscript: browserscript_obj_rel_insert_input
  browserscript_id: Int
}

"""
order by max() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_max_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by min() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_min_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
response of any mutation on the table "browserscriptoperation"
"""
type browserscriptoperation_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [browserscriptoperation!]!
}

"""
on_conflict condition type for table "browserscriptoperation"
"""
input browserscriptoperation_on_conflict {
  constraint: browserscriptoperation_constraint!
  update_columns: [browserscriptoperation_update_column!]! = []
  where: browserscriptoperation_bool_exp
}

"""Ordering options when selecting data from "browserscriptoperation"."""
input browserscriptoperation_order_by {
  browserscript: browserscript_order_by
  browserscript_id: order_by
  id: order_by
  operation: operation_order_by
  operation_id: order_by
}

"""
select columns of table "browserscriptoperation"
"""
enum browserscriptoperation_select_column {
  """column name"""
  browserscript_id

  """column name"""
  id

  """column name"""
  operation_id
}

"""
order by stddev() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_stddev_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by stddev_pop() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_stddev_pop_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by stddev_samp() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_stddev_samp_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
Streaming cursor of the table "browserscriptoperation"
"""
input browserscriptoperation_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: browserscriptoperation_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input browserscriptoperation_stream_cursor_value_input {
  browserscript_id: Int
  id: Int
  operation_id: Int
}

"""
order by sum() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_sum_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
placeholder for update columns of table "browserscriptoperation" (current role has no relevant permissions)
"""
enum browserscriptoperation_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
order by var_pop() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_var_pop_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by var_samp() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_var_samp_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by variance() on columns of table "browserscriptoperation"
"""
input browserscriptoperation_variance_order_by {
  browserscript_id: order_by
  id: order_by
  operation_id: order_by
}

"""
columns and relationships of "buildparameter"
"""
type buildparameter {
  """An array relationship"""
  buildparameterinstances(
    """distinct select on columns"""
    distinct_on: [buildparameterinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameterinstance_order_by!]

    """filter the rows returned"""
    where: buildparameterinstance_bool_exp
  ): [buildparameterinstance!]!
  choices(
    """JSON select path"""
    path: String
  ): jsonb!
  crypto_type: Boolean!
  default_value: String!
  deleted: Boolean!
  description: String!
  format_string: String!
  id: Int!
  name: String!
  parameter_type: String!
  payload_type_id: Int!

  """An object relationship"""
  payloadtype: payloadtype!
  randomize: Boolean!
  required: Boolean!
  verifier_regex: String!
}

"""
order by aggregate values of table "buildparameter"
"""
input buildparameter_aggregate_order_by {
  avg: buildparameter_avg_order_by
  count: order_by
  max: buildparameter_max_order_by
  min: buildparameter_min_order_by
  stddev: buildparameter_stddev_order_by
  stddev_pop: buildparameter_stddev_pop_order_by
  stddev_samp: buildparameter_stddev_samp_order_by
  sum: buildparameter_sum_order_by
  var_pop: buildparameter_var_pop_order_by
  var_samp: buildparameter_var_samp_order_by
  variance: buildparameter_variance_order_by
}

"""
order by avg() on columns of table "buildparameter"
"""
input buildparameter_avg_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
Boolean expression to filter rows from the table "buildparameter". All fields are combined with a logical 'AND'.
"""
input buildparameter_bool_exp {
  _and: [buildparameter_bool_exp!]
  _not: buildparameter_bool_exp
  _or: [buildparameter_bool_exp!]
  buildparameterinstances: buildparameterinstance_bool_exp
  choices: jsonb_comparison_exp
  crypto_type: Boolean_comparison_exp
  default_value: String_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  format_string: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  parameter_type: String_comparison_exp
  payload_type_id: Int_comparison_exp
  payloadtype: payloadtype_bool_exp
  randomize: Boolean_comparison_exp
  required: Boolean_comparison_exp
  verifier_regex: String_comparison_exp
}

"""
order by max() on columns of table "buildparameter"
"""
input buildparameter_max_order_by {
  default_value: order_by
  description: order_by
  format_string: order_by
  id: order_by
  name: order_by
  parameter_type: order_by
  payload_type_id: order_by
  verifier_regex: order_by
}

"""
order by min() on columns of table "buildparameter"
"""
input buildparameter_min_order_by {
  default_value: order_by
  description: order_by
  format_string: order_by
  id: order_by
  name: order_by
  parameter_type: order_by
  payload_type_id: order_by
  verifier_regex: order_by
}

"""Ordering options when selecting data from "buildparameter"."""
input buildparameter_order_by {
  buildparameterinstances_aggregate: buildparameterinstance_aggregate_order_by
  choices: order_by
  crypto_type: order_by
  default_value: order_by
  deleted: order_by
  description: order_by
  format_string: order_by
  id: order_by
  name: order_by
  parameter_type: order_by
  payload_type_id: order_by
  payloadtype: payloadtype_order_by
  randomize: order_by
  required: order_by
  verifier_regex: order_by
}

"""
select columns of table "buildparameter"
"""
enum buildparameter_select_column {
  """column name"""
  choices

  """column name"""
  crypto_type

  """column name"""
  default_value

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  format_string

  """column name"""
  id

  """column name"""
  name

  """column name"""
  parameter_type

  """column name"""
  payload_type_id

  """column name"""
  randomize

  """column name"""
  required

  """column name"""
  verifier_regex
}

"""
order by stddev() on columns of table "buildparameter"
"""
input buildparameter_stddev_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
order by stddev_pop() on columns of table "buildparameter"
"""
input buildparameter_stddev_pop_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
order by stddev_samp() on columns of table "buildparameter"
"""
input buildparameter_stddev_samp_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
Streaming cursor of the table "buildparameter"
"""
input buildparameter_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: buildparameter_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input buildparameter_stream_cursor_value_input {
  choices: jsonb
  crypto_type: Boolean
  default_value: String
  deleted: Boolean
  description: String
  format_string: String
  id: Int
  name: String
  parameter_type: String
  payload_type_id: Int
  randomize: Boolean
  required: Boolean
  verifier_regex: String
}

"""
order by sum() on columns of table "buildparameter"
"""
input buildparameter_sum_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
order by var_pop() on columns of table "buildparameter"
"""
input buildparameter_var_pop_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
order by var_samp() on columns of table "buildparameter"
"""
input buildparameter_var_samp_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
order by variance() on columns of table "buildparameter"
"""
input buildparameter_variance_order_by {
  id: order_by
  payload_type_id: order_by
}

"""
columns and relationships of "buildparameterinstance"
"""
type buildparameterinstance {
  build_parameter_id: Int!

  """An object relationship"""
  buildparameter: buildparameter!
  dec_key: bytea

  """
  A computed field, executes function "buildparameterinstance_deckey"
  """
  dec_key_base64: String
  enc_key: bytea

  """
  A computed field, executes function "buildparameterinstance_enckey"
  """
  enc_key_base64: String
  id: Int!

  """An object relationship"""
  payload: payload!
  payload_id: Int!
  value: String!
}

"""
order by aggregate values of table "buildparameterinstance"
"""
input buildparameterinstance_aggregate_order_by {
  avg: buildparameterinstance_avg_order_by
  count: order_by
  max: buildparameterinstance_max_order_by
  min: buildparameterinstance_min_order_by
  stddev: buildparameterinstance_stddev_order_by
  stddev_pop: buildparameterinstance_stddev_pop_order_by
  stddev_samp: buildparameterinstance_stddev_samp_order_by
  sum: buildparameterinstance_sum_order_by
  var_pop: buildparameterinstance_var_pop_order_by
  var_samp: buildparameterinstance_var_samp_order_by
  variance: buildparameterinstance_variance_order_by
}

"""
order by avg() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_avg_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
Boolean expression to filter rows from the table "buildparameterinstance". All fields are combined with a logical 'AND'.
"""
input buildparameterinstance_bool_exp {
  _and: [buildparameterinstance_bool_exp!]
  _not: buildparameterinstance_bool_exp
  _or: [buildparameterinstance_bool_exp!]
  build_parameter_id: Int_comparison_exp
  buildparameter: buildparameter_bool_exp
  dec_key: bytea_comparison_exp
  dec_key_base64: String_comparison_exp
  enc_key: bytea_comparison_exp
  enc_key_base64: String_comparison_exp
  id: Int_comparison_exp
  payload: payload_bool_exp
  payload_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
order by max() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_max_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
  value: order_by
}

"""
order by min() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_min_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
  value: order_by
}

"""Ordering options when selecting data from "buildparameterinstance"."""
input buildparameterinstance_order_by {
  build_parameter_id: order_by
  buildparameter: buildparameter_order_by
  dec_key: order_by
  dec_key_base64: order_by
  enc_key: order_by
  enc_key_base64: order_by
  id: order_by
  payload: payload_order_by
  payload_id: order_by
  value: order_by
}

"""
select columns of table "buildparameterinstance"
"""
enum buildparameterinstance_select_column {
  """column name"""
  build_parameter_id

  """column name"""
  dec_key

  """column name"""
  enc_key

  """column name"""
  id

  """column name"""
  payload_id

  """column name"""
  value
}

"""
order by stddev() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_stddev_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by stddev_pop() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_stddev_pop_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by stddev_samp() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_stddev_samp_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
Streaming cursor of the table "buildparameterinstance"
"""
input buildparameterinstance_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: buildparameterinstance_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input buildparameterinstance_stream_cursor_value_input {
  build_parameter_id: Int
  dec_key: bytea
  enc_key: bytea
  id: Int
  payload_id: Int
  value: String
}

"""
order by sum() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_sum_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by var_pop() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_var_pop_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by var_samp() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_var_samp_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by variance() on columns of table "buildparameterinstance"
"""
input buildparameterinstance_variance_order_by {
  build_parameter_id: order_by
  id: order_by
  payload_id: order_by
}

scalar bytea

"""
Boolean expression to compare columns of type "bytea". All fields are combined with logical 'AND'.
"""
input bytea_comparison_exp {
  _eq: bytea
  _gt: bytea
  _gte: bytea
  _in: [bytea!]
  _is_null: Boolean
  _lt: bytea
  _lte: bytea
  _neq: bytea
  _nin: [bytea!]
}

type c2HostFileOutput {
  error: String
  status: String!
}

type c2ProfileListFilesOutput {
  error: String
  files: [String]
  status: String!
}

"""
columns and relationships of "c2profile"
"""
type c2profile {
  author: String!

  """An array relationship"""
  c2profileparameters(
    """distinct select on columns"""
    distinct_on: [c2profileparameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparameters_order_by!]

    """filter the rows returned"""
    where: c2profileparameters_bool_exp
  ): [c2profileparameters!]!

  """An array relationship"""
  c2profileparametersinstances(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!

  """An array relationship"""
  callbackc2profiles(
    """distinct select on columns"""
    distinct_on: [callbackc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackc2profiles_order_by!]

    """filter the rows returned"""
    where: callbackc2profiles_bool_exp
  ): [callbackc2profiles!]!

  """An array relationship"""
  callbackgraphedges(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """An aggregate relationship"""
  callbackgraphedges_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): callbackgraphedge_aggregate!
  container_running: Boolean!
  creation_time: timestamp!
  deleted: Boolean!
  description: String!
  id: Int!
  is_p2p: Boolean!
  is_server_routed: Boolean!
  name: String!

  """An array relationship"""
  payloadc2profiles(
    """distinct select on columns"""
    distinct_on: [payloadc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadc2profiles_order_by!]

    """filter the rows returned"""
    where: payloadc2profiles_bool_exp
  ): [payloadc2profiles!]!

  """An array relationship"""
  payloadtypec2profiles(
    """distinct select on columns"""
    distinct_on: [payloadtypec2profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtypec2profile_order_by!]

    """filter the rows returned"""
    where: payloadtypec2profile_bool_exp
  ): [payloadtypec2profile!]!
  running: Boolean!
}

"""
Boolean expression to filter rows from the table "c2profile". All fields are combined with a logical 'AND'.
"""
input c2profile_bool_exp {
  _and: [c2profile_bool_exp!]
  _not: c2profile_bool_exp
  _or: [c2profile_bool_exp!]
  author: String_comparison_exp
  c2profileparameters: c2profileparameters_bool_exp
  c2profileparametersinstances: c2profileparametersinstance_bool_exp
  callbackc2profiles: callbackc2profiles_bool_exp
  callbackgraphedges: callbackgraphedge_bool_exp
  callbackgraphedges_aggregate: callbackgraphedge_aggregate_bool_exp
  container_running: Boolean_comparison_exp
  creation_time: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  is_p2p: Boolean_comparison_exp
  is_server_routed: Boolean_comparison_exp
  name: String_comparison_exp
  payloadc2profiles: payloadc2profiles_bool_exp
  payloadtypec2profiles: payloadtypec2profile_bool_exp
  running: Boolean_comparison_exp
}

"""
response of any mutation on the table "c2profile"
"""
type c2profile_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [c2profile!]!
}

"""Ordering options when selecting data from "c2profile"."""
input c2profile_order_by {
  author: order_by
  c2profileparameters_aggregate: c2profileparameters_aggregate_order_by
  c2profileparametersinstances_aggregate: c2profileparametersinstance_aggregate_order_by
  callbackc2profiles_aggregate: callbackc2profiles_aggregate_order_by
  callbackgraphedges_aggregate: callbackgraphedge_aggregate_order_by
  container_running: order_by
  creation_time: order_by
  deleted: order_by
  description: order_by
  id: order_by
  is_p2p: order_by
  is_server_routed: order_by
  name: order_by
  payloadc2profiles_aggregate: payloadc2profiles_aggregate_order_by
  payloadtypec2profiles_aggregate: payloadtypec2profile_aggregate_order_by
  running: order_by
}

"""primary key columns input for table: c2profile"""
input c2profile_pk_columns_input {
  id: Int!
}

"""
select columns of table "c2profile"
"""
enum c2profile_select_column {
  """column name"""
  author

  """column name"""
  container_running

  """column name"""
  creation_time

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  id

  """column name"""
  is_p2p

  """column name"""
  is_server_routed

  """column name"""
  name

  """column name"""
  running
}

"""
input type for updating data in table "c2profile"
"""
input c2profile_set_input {
  deleted: Boolean
}

"""
Streaming cursor of the table "c2profile"
"""
input c2profile_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: c2profile_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input c2profile_stream_cursor_value_input {
  author: String
  container_running: Boolean
  creation_time: timestamp
  deleted: Boolean
  description: String
  id: Int
  is_p2p: Boolean
  is_server_routed: Boolean
  name: String
  running: Boolean
}

input c2profile_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: c2profile_set_input

  """filter the rows which have to be updated"""
  where: c2profile_bool_exp!
}

"""
columns and relationships of "c2profileparameters"
"""
type c2profileparameters {
  c2_profile_id: Int!

  """An object relationship"""
  c2profile: c2profile!

  """An array relationship"""
  c2profileparametersinstances(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!
  choices(
    """JSON select path"""
    path: String
  ): jsonb!
  crypto_type: Boolean!
  default_value: String!
  deleted: Boolean!
  description: String!
  format_string: String!
  id: Int!
  name: String!
  parameter_type: String!
  randomize: Boolean!
  required: Boolean!
  verifier_regex: String!
}

"""
order by aggregate values of table "c2profileparameters"
"""
input c2profileparameters_aggregate_order_by {
  avg: c2profileparameters_avg_order_by
  count: order_by
  max: c2profileparameters_max_order_by
  min: c2profileparameters_min_order_by
  stddev: c2profileparameters_stddev_order_by
  stddev_pop: c2profileparameters_stddev_pop_order_by
  stddev_samp: c2profileparameters_stddev_samp_order_by
  sum: c2profileparameters_sum_order_by
  var_pop: c2profileparameters_var_pop_order_by
  var_samp: c2profileparameters_var_samp_order_by
  variance: c2profileparameters_variance_order_by
}

"""
order by avg() on columns of table "c2profileparameters"
"""
input c2profileparameters_avg_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "c2profileparameters". All fields are combined with a logical 'AND'.
"""
input c2profileparameters_bool_exp {
  _and: [c2profileparameters_bool_exp!]
  _not: c2profileparameters_bool_exp
  _or: [c2profileparameters_bool_exp!]
  c2_profile_id: Int_comparison_exp
  c2profile: c2profile_bool_exp
  c2profileparametersinstances: c2profileparametersinstance_bool_exp
  choices: jsonb_comparison_exp
  crypto_type: Boolean_comparison_exp
  default_value: String_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  format_string: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  parameter_type: String_comparison_exp
  randomize: Boolean_comparison_exp
  required: Boolean_comparison_exp
  verifier_regex: String_comparison_exp
}

"""
order by max() on columns of table "c2profileparameters"
"""
input c2profileparameters_max_order_by {
  c2_profile_id: order_by
  default_value: order_by
  description: order_by
  format_string: order_by
  id: order_by
  name: order_by
  parameter_type: order_by
  verifier_regex: order_by
}

"""
order by min() on columns of table "c2profileparameters"
"""
input c2profileparameters_min_order_by {
  c2_profile_id: order_by
  default_value: order_by
  description: order_by
  format_string: order_by
  id: order_by
  name: order_by
  parameter_type: order_by
  verifier_regex: order_by
}

"""Ordering options when selecting data from "c2profileparameters"."""
input c2profileparameters_order_by {
  c2_profile_id: order_by
  c2profile: c2profile_order_by
  c2profileparametersinstances_aggregate: c2profileparametersinstance_aggregate_order_by
  choices: order_by
  crypto_type: order_by
  default_value: order_by
  deleted: order_by
  description: order_by
  format_string: order_by
  id: order_by
  name: order_by
  parameter_type: order_by
  randomize: order_by
  required: order_by
  verifier_regex: order_by
}

"""
select columns of table "c2profileparameters"
"""
enum c2profileparameters_select_column {
  """column name"""
  c2_profile_id

  """column name"""
  choices

  """column name"""
  crypto_type

  """column name"""
  default_value

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  format_string

  """column name"""
  id

  """column name"""
  name

  """column name"""
  parameter_type

  """column name"""
  randomize

  """column name"""
  required

  """column name"""
  verifier_regex
}

"""
order by stddev() on columns of table "c2profileparameters"
"""
input c2profileparameters_stddev_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "c2profileparameters"
"""
input c2profileparameters_stddev_pop_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "c2profileparameters"
"""
input c2profileparameters_stddev_samp_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "c2profileparameters"
"""
input c2profileparameters_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: c2profileparameters_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input c2profileparameters_stream_cursor_value_input {
  c2_profile_id: Int
  choices: jsonb
  crypto_type: Boolean
  default_value: String
  deleted: Boolean
  description: String
  format_string: String
  id: Int
  name: String
  parameter_type: String
  randomize: Boolean
  required: Boolean
  verifier_regex: String
}

"""
order by sum() on columns of table "c2profileparameters"
"""
input c2profileparameters_sum_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
order by var_pop() on columns of table "c2profileparameters"
"""
input c2profileparameters_var_pop_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "c2profileparameters"
"""
input c2profileparameters_var_samp_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
order by variance() on columns of table "c2profileparameters"
"""
input c2profileparameters_variance_order_by {
  c2_profile_id: order_by
  id: order_by
}

"""
columns and relationships of "c2profileparametersinstance"
"""
type c2profileparametersinstance {
  c2_profile_id: Int!
  c2_profile_parameters_id: Int!

  """An object relationship"""
  c2profile: c2profile!

  """An object relationship"""
  c2profileparameter: c2profileparameters!

  """An object relationship"""
  callback: callback
  callback_id: Int
  dec_key: bytea

  """
  A computed field, executes function "c2profileparametersinstance_deckey"
  """
  dec_key_base64: String
  enc_key: bytea

  """
  A computed field, executes function "c2profileparametersinstance_enckey"
  """
  enc_key_base64: String
  id: Int!
  instance_name: String

  """An object relationship"""
  operation: operation
  operation_id: Int

  """An object relationship"""
  payload: payload
  payload_id: Int
  value: String!
}

"""
order by aggregate values of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_aggregate_order_by {
  avg: c2profileparametersinstance_avg_order_by
  count: order_by
  max: c2profileparametersinstance_max_order_by
  min: c2profileparametersinstance_min_order_by
  stddev: c2profileparametersinstance_stddev_order_by
  stddev_pop: c2profileparametersinstance_stddev_pop_order_by
  stddev_samp: c2profileparametersinstance_stddev_samp_order_by
  sum: c2profileparametersinstance_sum_order_by
  var_pop: c2profileparametersinstance_var_pop_order_by
  var_samp: c2profileparametersinstance_var_samp_order_by
  variance: c2profileparametersinstance_variance_order_by
}

"""
order by avg() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_avg_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
Boolean expression to filter rows from the table "c2profileparametersinstance". All fields are combined with a logical 'AND'.
"""
input c2profileparametersinstance_bool_exp {
  _and: [c2profileparametersinstance_bool_exp!]
  _not: c2profileparametersinstance_bool_exp
  _or: [c2profileparametersinstance_bool_exp!]
  c2_profile_id: Int_comparison_exp
  c2_profile_parameters_id: Int_comparison_exp
  c2profile: c2profile_bool_exp
  c2profileparameter: c2profileparameters_bool_exp
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  dec_key: bytea_comparison_exp
  dec_key_base64: String_comparison_exp
  enc_key: bytea_comparison_exp
  enc_key_base64: String_comparison_exp
  id: Int_comparison_exp
  instance_name: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  payload: payload_bool_exp
  payload_id: Int_comparison_exp
  value: String_comparison_exp
}

"""
order by max() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_max_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  instance_name: order_by
  operation_id: order_by
  payload_id: order_by
  value: order_by
}

"""
order by min() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_min_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  instance_name: order_by
  operation_id: order_by
  payload_id: order_by
  value: order_by
}

"""
response of any mutation on the table "c2profileparametersinstance"
"""
type c2profileparametersinstance_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [c2profileparametersinstance!]!
}

"""
Ordering options when selecting data from "c2profileparametersinstance".
"""
input c2profileparametersinstance_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  c2profile: c2profile_order_by
  c2profileparameter: c2profileparameters_order_by
  callback: callback_order_by
  callback_id: order_by
  dec_key: order_by
  dec_key_base64: order_by
  enc_key: order_by
  enc_key_base64: order_by
  id: order_by
  instance_name: order_by
  operation: operation_order_by
  operation_id: order_by
  payload: payload_order_by
  payload_id: order_by
  value: order_by
}

"""primary key columns input for table: c2profileparametersinstance"""
input c2profileparametersinstance_pk_columns_input {
  id: Int!
}

"""
select columns of table "c2profileparametersinstance"
"""
enum c2profileparametersinstance_select_column {
  """column name"""
  c2_profile_id

  """column name"""
  c2_profile_parameters_id

  """column name"""
  callback_id

  """column name"""
  dec_key

  """column name"""
  enc_key

  """column name"""
  id

  """column name"""
  instance_name

  """column name"""
  operation_id

  """column name"""
  payload_id

  """column name"""
  value
}

"""
input type for updating data in table "c2profileparametersinstance"
"""
input c2profileparametersinstance_set_input {
  instance_name: String
  value: String
}

"""
order by stddev() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_stddev_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
order by stddev_pop() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_stddev_pop_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
order by stddev_samp() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_stddev_samp_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
Streaming cursor of the table "c2profileparametersinstance"
"""
input c2profileparametersinstance_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: c2profileparametersinstance_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input c2profileparametersinstance_stream_cursor_value_input {
  c2_profile_id: Int
  c2_profile_parameters_id: Int
  callback_id: Int
  dec_key: bytea
  enc_key: bytea
  id: Int
  instance_name: String
  operation_id: Int
  payload_id: Int
  value: String
}

"""
order by sum() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_sum_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

input c2profileparametersinstance_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: c2profileparametersinstance_set_input

  """filter the rows which have to be updated"""
  where: c2profileparametersinstance_bool_exp!
}

"""
order by var_pop() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_var_pop_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
order by var_samp() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_var_samp_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
order by variance() on columns of table "c2profileparametersinstance"
"""
input c2profileparametersinstance_variance_order_by {
  c2_profile_id: order_by
  c2_profile_parameters_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
}

"""
columns and relationships of "callback"
"""
type callback {
  active: Boolean!
  agent_callback_id: String!
  architecture: String!

  """An array relationship"""
  c2profileparametersinstances(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!

  """An array relationship"""
  callbackc2profiles(
    """distinct select on columns"""
    distinct_on: [callbackc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackc2profiles_order_by!]

    """filter the rows returned"""
    where: callbackc2profiles_bool_exp
  ): [callbackc2profiles!]!

  """An array relationship"""
  callbackgraphedges(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """An array relationship"""
  callbackgraphedgesByDestinationId(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """An aggregate relationship"""
  callbackgraphedgesByDestinationId_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): callbackgraphedge_aggregate!

  """An aggregate relationship"""
  callbackgraphedges_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): callbackgraphedge_aggregate!

  """An array relationship"""
  callbackports(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): [callbackport!]!

  """An aggregate relationship"""
  callbackports_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): callbackport_aggregate!

  """An array relationship"""
  callbacktokens(
    """distinct select on columns"""
    distinct_on: [callbacktoken_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbacktoken_order_by!]

    """filter the rows returned"""
    where: callbacktoken_bool_exp
  ): [callbacktoken!]!
  crypto_type: String!

  """
  A computed field, executes function "current_time"
  """
  current_time: String
  dead: Boolean!
  dec_key: bytea

  """base64 encode decryption key"""
  dec_key_base64: String
  description: String!
  display_id: Int!
  domain: String!
  enc_key: bytea

  """base64 encode the encryption key"""
  enc_key_base64: String

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  external_ip: String!
  extra_info: String!
  host: String!
  id: Int!
  init_callback: timestamp!
  integrity_level: Int!
  ip: String!
  last_checkin: timestamp!

  """An array relationship"""
  loadedcommands(
    """distinct select on columns"""
    distinct_on: [loadedcommands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [loadedcommands_order_by!]

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!
  locked: Boolean!

  """An object relationship"""
  locked_operator: operator
  locked_operator_id: Int
  mythictree_groups: [String!]!

  """
  A computed field, executes function "callback_mythictree_groups"
  """
  mythictree_groups_string: String

  """An array relationship"""
  mythictrees(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """An aggregate relationship"""
  mythictrees_aggregate(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): mythictree_aggregate!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  os: String!

  """An object relationship"""
  payload: payload!
  pid: Int!
  process_name: String!
  registered_payload_id: Int!
  sleep_info: String!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  timestamp: timestamp!
  user: String!
}

"""
aggregated selection of "callback"
"""
type callback_aggregate {
  aggregate: callback_aggregate_fields
  nodes: [callback!]!
}

input callback_aggregate_bool_exp {
  bool_and: callback_aggregate_bool_exp_bool_and
  bool_or: callback_aggregate_bool_exp_bool_or
  count: callback_aggregate_bool_exp_count
}

input callback_aggregate_bool_exp_bool_and {
  arguments: callback_select_column_callback_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: callback_bool_exp
  predicate: Boolean_comparison_exp!
}

input callback_aggregate_bool_exp_bool_or {
  arguments: callback_select_column_callback_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: callback_bool_exp
  predicate: Boolean_comparison_exp!
}

input callback_aggregate_bool_exp_count {
  arguments: [callback_select_column!]
  distinct: Boolean
  filter: callback_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "callback"
"""
type callback_aggregate_fields {
  avg: callback_avg_fields
  count(columns: [callback_select_column!], distinct: Boolean): Int!
  max: callback_max_fields
  min: callback_min_fields
  stddev: callback_stddev_fields
  stddev_pop: callback_stddev_pop_fields
  stddev_samp: callback_stddev_samp_fields
  sum: callback_sum_fields
  var_pop: callback_var_pop_fields
  var_samp: callback_var_samp_fields
  variance: callback_variance_fields
}

"""
order by aggregate values of table "callback"
"""
input callback_aggregate_order_by {
  avg: callback_avg_order_by
  count: order_by
  max: callback_max_order_by
  min: callback_min_order_by
  stddev: callback_stddev_order_by
  stddev_pop: callback_stddev_pop_order_by
  stddev_samp: callback_stddev_samp_order_by
  sum: callback_sum_order_by
  var_pop: callback_var_pop_order_by
  var_samp: callback_var_samp_order_by
  variance: callback_variance_order_by
}

"""aggregate avg on columns"""
type callback_avg_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by avg() on columns of table "callback"
"""
input callback_avg_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""
Boolean expression to filter rows from the table "callback". All fields are combined with a logical 'AND'.
"""
input callback_bool_exp {
  _and: [callback_bool_exp!]
  _not: callback_bool_exp
  _or: [callback_bool_exp!]
  active: Boolean_comparison_exp
  agent_callback_id: String_comparison_exp
  architecture: String_comparison_exp
  c2profileparametersinstances: c2profileparametersinstance_bool_exp
  callbackc2profiles: callbackc2profiles_bool_exp
  callbackgraphedges: callbackgraphedge_bool_exp
  callbackgraphedgesByDestinationId: callbackgraphedge_bool_exp
  callbackgraphedgesByDestinationId_aggregate: callbackgraphedge_aggregate_bool_exp
  callbackgraphedges_aggregate: callbackgraphedge_aggregate_bool_exp
  callbackports: callbackport_bool_exp
  callbackports_aggregate: callbackport_aggregate_bool_exp
  callbacktokens: callbacktoken_bool_exp
  crypto_type: String_comparison_exp
  current_time: String_comparison_exp
  dead: Boolean_comparison_exp
  dec_key: bytea_comparison_exp
  dec_key_base64: String_comparison_exp
  description: String_comparison_exp
  display_id: Int_comparison_exp
  domain: String_comparison_exp
  enc_key: bytea_comparison_exp
  enc_key_base64: String_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  external_ip: String_comparison_exp
  extra_info: String_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  init_callback: timestamp_comparison_exp
  integrity_level: Int_comparison_exp
  ip: String_comparison_exp
  last_checkin: timestamp_comparison_exp
  loadedcommands: loadedcommands_bool_exp
  locked: Boolean_comparison_exp
  locked_operator: operator_bool_exp
  locked_operator_id: Int_comparison_exp
  mythictree_groups: String_array_comparison_exp
  mythictree_groups_string: String_comparison_exp
  mythictrees: mythictree_bool_exp
  mythictrees_aggregate: mythictree_aggregate_bool_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  os: String_comparison_exp
  payload: payload_bool_exp
  pid: Int_comparison_exp
  process_name: String_comparison_exp
  registered_payload_id: Int_comparison_exp
  sleep_info: String_comparison_exp
  tasks: task_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  timestamp: timestamp_comparison_exp
  user: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "callback"
"""
input callback_inc_input {
  integrity_level: Int
  pid: Int
}

"""aggregate max on columns"""
type callback_max_fields {
  agent_callback_id: String
  architecture: String
  crypto_type: String

  """
  A computed field, executes function "current_time"
  """
  current_time: String

  """base64 encode decryption key"""
  dec_key_base64: String
  description: String
  display_id: Int
  domain: String

  """base64 encode the encryption key"""
  enc_key_base64: String
  eventstepinstance_id: Int
  external_ip: String
  extra_info: String
  host: String
  id: Int
  init_callback: timestamp
  integrity_level: Int
  ip: String
  last_checkin: timestamp
  locked_operator_id: Int
  mythictree_groups: [String!]

  """
  A computed field, executes function "callback_mythictree_groups"
  """
  mythictree_groups_string: String
  operation_id: Int
  operator_id: Int
  os: String
  pid: Int
  process_name: String
  registered_payload_id: Int
  sleep_info: String
  timestamp: timestamp
  user: String
}

"""
order by max() on columns of table "callback"
"""
input callback_max_order_by {
  agent_callback_id: order_by
  architecture: order_by
  crypto_type: order_by
  description: order_by
  display_id: order_by
  domain: order_by
  eventstepinstance_id: order_by
  external_ip: order_by
  extra_info: order_by
  host: order_by
  id: order_by
  init_callback: order_by
  integrity_level: order_by
  ip: order_by
  last_checkin: order_by
  locked_operator_id: order_by
  mythictree_groups: order_by
  operation_id: order_by
  operator_id: order_by
  os: order_by
  pid: order_by
  process_name: order_by
  registered_payload_id: order_by
  sleep_info: order_by
  timestamp: order_by
  user: order_by
}

"""aggregate min on columns"""
type callback_min_fields {
  agent_callback_id: String
  architecture: String
  crypto_type: String

  """
  A computed field, executes function "current_time"
  """
  current_time: String

  """base64 encode decryption key"""
  dec_key_base64: String
  description: String
  display_id: Int
  domain: String

  """base64 encode the encryption key"""
  enc_key_base64: String
  eventstepinstance_id: Int
  external_ip: String
  extra_info: String
  host: String
  id: Int
  init_callback: timestamp
  integrity_level: Int
  ip: String
  last_checkin: timestamp
  locked_operator_id: Int
  mythictree_groups: [String!]

  """
  A computed field, executes function "callback_mythictree_groups"
  """
  mythictree_groups_string: String
  operation_id: Int
  operator_id: Int
  os: String
  pid: Int
  process_name: String
  registered_payload_id: Int
  sleep_info: String
  timestamp: timestamp
  user: String
}

"""
order by min() on columns of table "callback"
"""
input callback_min_order_by {
  agent_callback_id: order_by
  architecture: order_by
  crypto_type: order_by
  description: order_by
  display_id: order_by
  domain: order_by
  eventstepinstance_id: order_by
  external_ip: order_by
  extra_info: order_by
  host: order_by
  id: order_by
  init_callback: order_by
  integrity_level: order_by
  ip: order_by
  last_checkin: order_by
  locked_operator_id: order_by
  mythictree_groups: order_by
  operation_id: order_by
  operator_id: order_by
  os: order_by
  pid: order_by
  process_name: order_by
  registered_payload_id: order_by
  sleep_info: order_by
  timestamp: order_by
  user: order_by
}

"""
response of any mutation on the table "callback"
"""
type callback_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [callback!]!
}

"""Ordering options when selecting data from "callback"."""
input callback_order_by {
  active: order_by
  agent_callback_id: order_by
  architecture: order_by
  c2profileparametersinstances_aggregate: c2profileparametersinstance_aggregate_order_by
  callbackc2profiles_aggregate: callbackc2profiles_aggregate_order_by
  callbackgraphedgesByDestinationId_aggregate: callbackgraphedge_aggregate_order_by
  callbackgraphedges_aggregate: callbackgraphedge_aggregate_order_by
  callbackports_aggregate: callbackport_aggregate_order_by
  callbacktokens_aggregate: callbacktoken_aggregate_order_by
  crypto_type: order_by
  current_time: order_by
  dead: order_by
  dec_key: order_by
  dec_key_base64: order_by
  description: order_by
  display_id: order_by
  domain: order_by
  enc_key: order_by
  enc_key_base64: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  external_ip: order_by
  extra_info: order_by
  host: order_by
  id: order_by
  init_callback: order_by
  integrity_level: order_by
  ip: order_by
  last_checkin: order_by
  loadedcommands_aggregate: loadedcommands_aggregate_order_by
  locked: order_by
  locked_operator: operator_order_by
  locked_operator_id: order_by
  mythictree_groups: order_by
  mythictree_groups_string: order_by
  mythictrees_aggregate: mythictree_aggregate_order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  os: order_by
  payload: payload_order_by
  pid: order_by
  process_name: order_by
  registered_payload_id: order_by
  sleep_info: order_by
  tasks_aggregate: task_aggregate_order_by
  timestamp: order_by
  user: order_by
}

"""primary key columns input for table: callback"""
input callback_pk_columns_input {
  id: Int!
}

"""
select columns of table "callback"
"""
enum callback_select_column {
  """column name"""
  active

  """column name"""
  agent_callback_id

  """column name"""
  architecture

  """column name"""
  crypto_type

  """column name"""
  dead

  """column name"""
  dec_key

  """column name"""
  description

  """column name"""
  display_id

  """column name"""
  domain

  """column name"""
  enc_key

  """column name"""
  eventstepinstance_id

  """column name"""
  external_ip

  """column name"""
  extra_info

  """column name"""
  host

  """column name"""
  id

  """column name"""
  init_callback

  """column name"""
  integrity_level

  """column name"""
  ip

  """column name"""
  last_checkin

  """column name"""
  locked

  """column name"""
  locked_operator_id

  """column name"""
  mythictree_groups

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  os

  """column name"""
  pid

  """column name"""
  process_name

  """column name"""
  registered_payload_id

  """column name"""
  sleep_info

  """column name"""
  timestamp

  """column name"""
  user
}

"""
select "callback_aggregate_bool_exp_bool_and_arguments_columns" columns of table "callback"
"""
enum callback_select_column_callback_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  active

  """column name"""
  dead

  """column name"""
  locked
}

"""
select "callback_aggregate_bool_exp_bool_or_arguments_columns" columns of table "callback"
"""
enum callback_select_column_callback_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  active

  """column name"""
  dead

  """column name"""
  locked
}

"""
input type for updating data in table "callback"
"""
input callback_set_input {
  architecture: String
  description: String
  domain: String
  external_ip: String
  extra_info: String
  host: String
  integrity_level: Int
  ip: String
  mythictree_groups: [String!]
  os: String
  pid: Int
  process_name: String
  sleep_info: String
  user: String
}

"""aggregate stddev on columns"""
type callback_stddev_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by stddev() on columns of table "callback"
"""
input callback_stddev_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""aggregate stddev_pop on columns"""
type callback_stddev_pop_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by stddev_pop() on columns of table "callback"
"""
input callback_stddev_pop_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""aggregate stddev_samp on columns"""
type callback_stddev_samp_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by stddev_samp() on columns of table "callback"
"""
input callback_stddev_samp_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""
Streaming cursor of the table "callback"
"""
input callback_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: callback_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input callback_stream_cursor_value_input {
  active: Boolean
  agent_callback_id: String
  architecture: String
  crypto_type: String
  dead: Boolean
  dec_key: bytea
  description: String
  display_id: Int
  domain: String
  enc_key: bytea
  eventstepinstance_id: Int
  external_ip: String
  extra_info: String
  host: String
  id: Int
  init_callback: timestamp
  integrity_level: Int
  ip: String
  last_checkin: timestamp
  locked: Boolean
  locked_operator_id: Int
  mythictree_groups: [String!]
  operation_id: Int
  operator_id: Int
  os: String
  pid: Int
  process_name: String
  registered_payload_id: Int
  sleep_info: String
  timestamp: timestamp
  user: String
}

"""aggregate sum on columns"""
type callback_sum_fields {
  display_id: Int
  eventstepinstance_id: Int
  id: Int
  integrity_level: Int
  locked_operator_id: Int
  operation_id: Int
  operator_id: Int
  pid: Int
  registered_payload_id: Int
}

"""
order by sum() on columns of table "callback"
"""
input callback_sum_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

input callback_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: callback_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: callback_set_input

  """filter the rows which have to be updated"""
  where: callback_bool_exp!
}

"""aggregate var_pop on columns"""
type callback_var_pop_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by var_pop() on columns of table "callback"
"""
input callback_var_pop_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""aggregate var_samp on columns"""
type callback_var_samp_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by var_samp() on columns of table "callback"
"""
input callback_var_samp_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""aggregate variance on columns"""
type callback_variance_fields {
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  integrity_level: Float
  locked_operator_id: Float
  operation_id: Float
  operator_id: Float
  pid: Float
  registered_payload_id: Float
}

"""
order by variance() on columns of table "callback"
"""
input callback_variance_order_by {
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  integrity_level: order_by
  locked_operator_id: order_by
  operation_id: order_by
  operator_id: order_by
  pid: order_by
  registered_payload_id: order_by
}

"""
columns and relationships of "callbackc2profiles"
"""
type callbackc2profiles {
  c2_profile_id: Int!

  """An object relationship"""
  c2profile: c2profile!

  """An object relationship"""
  callback: callback!
  callback_id: Int!
  id: Int!
}

"""
order by aggregate values of table "callbackc2profiles"
"""
input callbackc2profiles_aggregate_order_by {
  avg: callbackc2profiles_avg_order_by
  count: order_by
  max: callbackc2profiles_max_order_by
  min: callbackc2profiles_min_order_by
  stddev: callbackc2profiles_stddev_order_by
  stddev_pop: callbackc2profiles_stddev_pop_order_by
  stddev_samp: callbackc2profiles_stddev_samp_order_by
  sum: callbackc2profiles_sum_order_by
  var_pop: callbackc2profiles_var_pop_order_by
  var_samp: callbackc2profiles_var_samp_order_by
  variance: callbackc2profiles_variance_order_by
}

"""
order by avg() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_avg_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "callbackc2profiles". All fields are combined with a logical 'AND'.
"""
input callbackc2profiles_bool_exp {
  _and: [callbackc2profiles_bool_exp!]
  _not: callbackc2profiles_bool_exp
  _or: [callbackc2profiles_bool_exp!]
  c2_profile_id: Int_comparison_exp
  c2profile: c2profile_bool_exp
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  id: Int_comparison_exp
}

"""
order by max() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_max_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
order by min() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_min_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""Ordering options when selecting data from "callbackc2profiles"."""
input callbackc2profiles_order_by {
  c2_profile_id: order_by
  c2profile: c2profile_order_by
  callback: callback_order_by
  callback_id: order_by
  id: order_by
}

"""
select columns of table "callbackc2profiles"
"""
enum callbackc2profiles_select_column {
  """column name"""
  c2_profile_id

  """column name"""
  callback_id

  """column name"""
  id
}

"""
order by stddev() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_stddev_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_stddev_pop_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_stddev_samp_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "callbackc2profiles"
"""
input callbackc2profiles_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: callbackc2profiles_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input callbackc2profiles_stream_cursor_value_input {
  c2_profile_id: Int
  callback_id: Int
  id: Int
}

"""
order by sum() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_sum_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
order by var_pop() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_var_pop_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_var_samp_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
order by variance() on columns of table "callbackc2profiles"
"""
input callbackc2profiles_variance_order_by {
  c2_profile_id: order_by
  callback_id: order_by
  id: order_by
}

"""
columns and relationships of "callbackgraphedge"
"""
type callbackgraphedge {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  c2_profile_id: Int!

  """An object relationship"""
  c2profile: c2profile!

  """An object relationship"""
  destination: callback!
  destination_id: Int!
  end_timestamp: timestamp
  id: Int!
  metadata: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  source: callback!
  source_id: Int!
  start_timestamp: timestamp!
}

"""
aggregated selection of "callbackgraphedge"
"""
type callbackgraphedge_aggregate {
  aggregate: callbackgraphedge_aggregate_fields
  nodes: [callbackgraphedge!]!
}

input callbackgraphedge_aggregate_bool_exp {
  count: callbackgraphedge_aggregate_bool_exp_count
}

input callbackgraphedge_aggregate_bool_exp_count {
  arguments: [callbackgraphedge_select_column!]
  distinct: Boolean
  filter: callbackgraphedge_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "callbackgraphedge"
"""
type callbackgraphedge_aggregate_fields {
  avg: callbackgraphedge_avg_fields
  count(columns: [callbackgraphedge_select_column!], distinct: Boolean): Int!
  max: callbackgraphedge_max_fields
  min: callbackgraphedge_min_fields
  stddev: callbackgraphedge_stddev_fields
  stddev_pop: callbackgraphedge_stddev_pop_fields
  stddev_samp: callbackgraphedge_stddev_samp_fields
  sum: callbackgraphedge_sum_fields
  var_pop: callbackgraphedge_var_pop_fields
  var_samp: callbackgraphedge_var_samp_fields
  variance: callbackgraphedge_variance_fields
}

"""
order by aggregate values of table "callbackgraphedge"
"""
input callbackgraphedge_aggregate_order_by {
  avg: callbackgraphedge_avg_order_by
  count: order_by
  max: callbackgraphedge_max_order_by
  min: callbackgraphedge_min_order_by
  stddev: callbackgraphedge_stddev_order_by
  stddev_pop: callbackgraphedge_stddev_pop_order_by
  stddev_samp: callbackgraphedge_stddev_samp_order_by
  sum: callbackgraphedge_sum_order_by
  var_pop: callbackgraphedge_var_pop_order_by
  var_samp: callbackgraphedge_var_samp_order_by
  variance: callbackgraphedge_variance_order_by
}

"""aggregate avg on columns"""
type callbackgraphedge_avg_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by avg() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_avg_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""
Boolean expression to filter rows from the table "callbackgraphedge". All fields are combined with a logical 'AND'.
"""
input callbackgraphedge_bool_exp {
  _and: [callbackgraphedge_bool_exp!]
  _not: callbackgraphedge_bool_exp
  _or: [callbackgraphedge_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  c2_profile_id: Int_comparison_exp
  c2profile: c2profile_bool_exp
  destination: callback_bool_exp
  destination_id: Int_comparison_exp
  end_timestamp: timestamp_comparison_exp
  id: Int_comparison_exp
  metadata: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  source: callback_bool_exp
  source_id: Int_comparison_exp
  start_timestamp: timestamp_comparison_exp
}

"""aggregate max on columns"""
type callbackgraphedge_max_fields {
  apitokens_id: Int
  c2_profile_id: Int
  destination_id: Int
  end_timestamp: timestamp
  id: Int
  metadata: String
  operation_id: Int
  source_id: Int
  start_timestamp: timestamp
}

"""
order by max() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_max_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  end_timestamp: order_by
  id: order_by
  metadata: order_by
  operation_id: order_by
  source_id: order_by
  start_timestamp: order_by
}

"""aggregate min on columns"""
type callbackgraphedge_min_fields {
  apitokens_id: Int
  c2_profile_id: Int
  destination_id: Int
  end_timestamp: timestamp
  id: Int
  metadata: String
  operation_id: Int
  source_id: Int
  start_timestamp: timestamp
}

"""
order by min() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_min_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  end_timestamp: order_by
  id: order_by
  metadata: order_by
  operation_id: order_by
  source_id: order_by
  start_timestamp: order_by
}

"""Ordering options when selecting data from "callbackgraphedge"."""
input callbackgraphedge_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  c2_profile_id: order_by
  c2profile: c2profile_order_by
  destination: callback_order_by
  destination_id: order_by
  end_timestamp: order_by
  id: order_by
  metadata: order_by
  operation: operation_order_by
  operation_id: order_by
  source: callback_order_by
  source_id: order_by
  start_timestamp: order_by
}

"""
select columns of table "callbackgraphedge"
"""
enum callbackgraphedge_select_column {
  """column name"""
  apitokens_id

  """column name"""
  c2_profile_id

  """column name"""
  destination_id

  """column name"""
  end_timestamp

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  operation_id

  """column name"""
  source_id

  """column name"""
  start_timestamp
}

"""aggregate stddev on columns"""
type callbackgraphedge_stddev_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by stddev() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_stddev_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""aggregate stddev_pop on columns"""
type callbackgraphedge_stddev_pop_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by stddev_pop() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_stddev_pop_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""aggregate stddev_samp on columns"""
type callbackgraphedge_stddev_samp_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by stddev_samp() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_stddev_samp_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""
Streaming cursor of the table "callbackgraphedge"
"""
input callbackgraphedge_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: callbackgraphedge_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input callbackgraphedge_stream_cursor_value_input {
  apitokens_id: Int
  c2_profile_id: Int
  destination_id: Int
  end_timestamp: timestamp
  id: Int
  metadata: String
  operation_id: Int
  source_id: Int
  start_timestamp: timestamp
}

"""aggregate sum on columns"""
type callbackgraphedge_sum_fields {
  apitokens_id: Int
  c2_profile_id: Int
  destination_id: Int
  id: Int
  operation_id: Int
  source_id: Int
}

"""
order by sum() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_sum_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""aggregate var_pop on columns"""
type callbackgraphedge_var_pop_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by var_pop() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_var_pop_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""aggregate var_samp on columns"""
type callbackgraphedge_var_samp_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by var_samp() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_var_samp_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""aggregate variance on columns"""
type callbackgraphedge_variance_fields {
  apitokens_id: Float
  c2_profile_id: Float
  destination_id: Float
  id: Float
  operation_id: Float
  source_id: Float
}

"""
order by variance() on columns of table "callbackgraphedge"
"""
input callbackgraphedge_variance_order_by {
  apitokens_id: order_by
  c2_profile_id: order_by
  destination_id: order_by
  id: order_by
  operation_id: order_by
  source_id: order_by
}

"""
columns and relationships of "callbackport"
"""
type callbackport {
  bytes_received: bigint!
  bytes_sent: bigint!

  """An object relationship"""
  callback: callback!
  callback_id: Int!
  deleted: Boolean!
  id: Int!
  local_port: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!
  port_type: String!
  remote_ip: String!
  remote_port: Int!

  """An object relationship"""
  task: task!
  task_id: Int!
}

"""
aggregated selection of "callbackport"
"""
type callbackport_aggregate {
  aggregate: callbackport_aggregate_fields
  nodes: [callbackport!]!
}

input callbackport_aggregate_bool_exp {
  bool_and: callbackport_aggregate_bool_exp_bool_and
  bool_or: callbackport_aggregate_bool_exp_bool_or
  count: callbackport_aggregate_bool_exp_count
}

input callbackport_aggregate_bool_exp_bool_and {
  arguments: callbackport_select_column_callbackport_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: callbackport_bool_exp
  predicate: Boolean_comparison_exp!
}

input callbackport_aggregate_bool_exp_bool_or {
  arguments: callbackport_select_column_callbackport_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: callbackport_bool_exp
  predicate: Boolean_comparison_exp!
}

input callbackport_aggregate_bool_exp_count {
  arguments: [callbackport_select_column!]
  distinct: Boolean
  filter: callbackport_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "callbackport"
"""
type callbackport_aggregate_fields {
  avg: callbackport_avg_fields
  count(columns: [callbackport_select_column!], distinct: Boolean): Int!
  max: callbackport_max_fields
  min: callbackport_min_fields
  stddev: callbackport_stddev_fields
  stddev_pop: callbackport_stddev_pop_fields
  stddev_samp: callbackport_stddev_samp_fields
  sum: callbackport_sum_fields
  var_pop: callbackport_var_pop_fields
  var_samp: callbackport_var_samp_fields
  variance: callbackport_variance_fields
}

"""
order by aggregate values of table "callbackport"
"""
input callbackport_aggregate_order_by {
  avg: callbackport_avg_order_by
  count: order_by
  max: callbackport_max_order_by
  min: callbackport_min_order_by
  stddev: callbackport_stddev_order_by
  stddev_pop: callbackport_stddev_pop_order_by
  stddev_samp: callbackport_stddev_samp_order_by
  sum: callbackport_sum_order_by
  var_pop: callbackport_var_pop_order_by
  var_samp: callbackport_var_samp_order_by
  variance: callbackport_variance_order_by
}

"""aggregate avg on columns"""
type callbackport_avg_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by avg() on columns of table "callbackport"
"""
input callbackport_avg_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "callbackport". All fields are combined with a logical 'AND'.
"""
input callbackport_bool_exp {
  _and: [callbackport_bool_exp!]
  _not: callbackport_bool_exp
  _or: [callbackport_bool_exp!]
  bytes_received: bigint_comparison_exp
  bytes_sent: bigint_comparison_exp
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  deleted: Boolean_comparison_exp
  id: Int_comparison_exp
  local_port: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  port_type: String_comparison_exp
  remote_ip: String_comparison_exp
  remote_port: Int_comparison_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
}

"""aggregate max on columns"""
type callbackport_max_fields {
  bytes_received: bigint
  bytes_sent: bigint
  callback_id: Int
  id: Int
  local_port: Int
  operation_id: Int
  port_type: String
  remote_ip: String
  remote_port: Int
  task_id: Int
}

"""
order by max() on columns of table "callbackport"
"""
input callbackport_max_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  port_type: order_by
  remote_ip: order_by
  remote_port: order_by
  task_id: order_by
}

"""aggregate min on columns"""
type callbackport_min_fields {
  bytes_received: bigint
  bytes_sent: bigint
  callback_id: Int
  id: Int
  local_port: Int
  operation_id: Int
  port_type: String
  remote_ip: String
  remote_port: Int
  task_id: Int
}

"""
order by min() on columns of table "callbackport"
"""
input callbackport_min_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  port_type: order_by
  remote_ip: order_by
  remote_port: order_by
  task_id: order_by
}

"""Ordering options when selecting data from "callbackport"."""
input callbackport_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback: callback_order_by
  callback_id: order_by
  deleted: order_by
  id: order_by
  local_port: order_by
  operation: operation_order_by
  operation_id: order_by
  port_type: order_by
  remote_ip: order_by
  remote_port: order_by
  task: task_order_by
  task_id: order_by
}

"""
select columns of table "callbackport"
"""
enum callbackport_select_column {
  """column name"""
  bytes_received

  """column name"""
  bytes_sent

  """column name"""
  callback_id

  """column name"""
  deleted

  """column name"""
  id

  """column name"""
  local_port

  """column name"""
  operation_id

  """column name"""
  port_type

  """column name"""
  remote_ip

  """column name"""
  remote_port

  """column name"""
  task_id
}

"""
select "callbackport_aggregate_bool_exp_bool_and_arguments_columns" columns of table "callbackport"
"""
enum callbackport_select_column_callbackport_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  deleted
}

"""
select "callbackport_aggregate_bool_exp_bool_or_arguments_columns" columns of table "callbackport"
"""
enum callbackport_select_column_callbackport_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  deleted
}

"""aggregate stddev on columns"""
type callbackport_stddev_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by stddev() on columns of table "callbackport"
"""
input callbackport_stddev_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""aggregate stddev_pop on columns"""
type callbackport_stddev_pop_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by stddev_pop() on columns of table "callbackport"
"""
input callbackport_stddev_pop_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""aggregate stddev_samp on columns"""
type callbackport_stddev_samp_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by stddev_samp() on columns of table "callbackport"
"""
input callbackport_stddev_samp_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "callbackport"
"""
input callbackport_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: callbackport_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input callbackport_stream_cursor_value_input {
  bytes_received: bigint
  bytes_sent: bigint
  callback_id: Int
  deleted: Boolean
  id: Int
  local_port: Int
  operation_id: Int
  port_type: String
  remote_ip: String
  remote_port: Int
  task_id: Int
}

"""aggregate sum on columns"""
type callbackport_sum_fields {
  bytes_received: bigint
  bytes_sent: bigint
  callback_id: Int
  id: Int
  local_port: Int
  operation_id: Int
  remote_port: Int
  task_id: Int
}

"""
order by sum() on columns of table "callbackport"
"""
input callbackport_sum_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""aggregate var_pop on columns"""
type callbackport_var_pop_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by var_pop() on columns of table "callbackport"
"""
input callbackport_var_pop_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""aggregate var_samp on columns"""
type callbackport_var_samp_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by var_samp() on columns of table "callbackport"
"""
input callbackport_var_samp_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""aggregate variance on columns"""
type callbackport_variance_fields {
  bytes_received: Float
  bytes_sent: Float
  callback_id: Float
  id: Float
  local_port: Float
  operation_id: Float
  remote_port: Float
  task_id: Float
}

"""
order by variance() on columns of table "callbackport"
"""
input callbackport_variance_order_by {
  bytes_received: order_by
  bytes_sent: order_by
  callback_id: order_by
  id: order_by
  local_port: order_by
  operation_id: order_by
  remote_port: order_by
  task_id: order_by
}

"""
columns and relationships of "callbacktoken"
"""
type callbacktoken {
  """An object relationship"""
  callback: callback!
  callback_id: Int!
  deleted: Boolean!
  host: String!
  id: Int!
  os: String!

  """An object relationship"""
  task: task!
  task_id: Int!
  timestamp_created: timestamp!

  """An object relationship"""
  token: token!
  token_id: Int!
}

"""
order by aggregate values of table "callbacktoken"
"""
input callbacktoken_aggregate_order_by {
  avg: callbacktoken_avg_order_by
  count: order_by
  max: callbacktoken_max_order_by
  min: callbacktoken_min_order_by
  stddev: callbacktoken_stddev_order_by
  stddev_pop: callbacktoken_stddev_pop_order_by
  stddev_samp: callbacktoken_stddev_samp_order_by
  sum: callbacktoken_sum_order_by
  var_pop: callbacktoken_var_pop_order_by
  var_samp: callbacktoken_var_samp_order_by
  variance: callbacktoken_variance_order_by
}

"""
order by avg() on columns of table "callbacktoken"
"""
input callbacktoken_avg_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
Boolean expression to filter rows from the table "callbacktoken". All fields are combined with a logical 'AND'.
"""
input callbacktoken_bool_exp {
  _and: [callbacktoken_bool_exp!]
  _not: callbacktoken_bool_exp
  _or: [callbacktoken_bool_exp!]
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  deleted: Boolean_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  os: String_comparison_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp_created: timestamp_comparison_exp
  token: token_bool_exp
  token_id: Int_comparison_exp
}

"""
order by max() on columns of table "callbacktoken"
"""
input callbacktoken_max_order_by {
  callback_id: order_by
  host: order_by
  id: order_by
  os: order_by
  task_id: order_by
  timestamp_created: order_by
  token_id: order_by
}

"""
order by min() on columns of table "callbacktoken"
"""
input callbacktoken_min_order_by {
  callback_id: order_by
  host: order_by
  id: order_by
  os: order_by
  task_id: order_by
  timestamp_created: order_by
  token_id: order_by
}

"""
response of any mutation on the table "callbacktoken"
"""
type callbacktoken_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [callbacktoken!]!
}

"""Ordering options when selecting data from "callbacktoken"."""
input callbacktoken_order_by {
  callback: callback_order_by
  callback_id: order_by
  deleted: order_by
  host: order_by
  id: order_by
  os: order_by
  task: task_order_by
  task_id: order_by
  timestamp_created: order_by
  token: token_order_by
  token_id: order_by
}

"""primary key columns input for table: callbacktoken"""
input callbacktoken_pk_columns_input {
  id: Int!
}

"""
select columns of table "callbacktoken"
"""
enum callbacktoken_select_column {
  """column name"""
  callback_id

  """column name"""
  deleted

  """column name"""
  host

  """column name"""
  id

  """column name"""
  os

  """column name"""
  task_id

  """column name"""
  timestamp_created

  """column name"""
  token_id
}

"""
input type for updating data in table "callbacktoken"
"""
input callbacktoken_set_input {
  deleted: Boolean
}

"""
order by stddev() on columns of table "callbacktoken"
"""
input callbacktoken_stddev_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
order by stddev_pop() on columns of table "callbacktoken"
"""
input callbacktoken_stddev_pop_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
order by stddev_samp() on columns of table "callbacktoken"
"""
input callbacktoken_stddev_samp_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
Streaming cursor of the table "callbacktoken"
"""
input callbacktoken_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: callbacktoken_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input callbacktoken_stream_cursor_value_input {
  callback_id: Int
  deleted: Boolean
  host: String
  id: Int
  os: String
  task_id: Int
  timestamp_created: timestamp
  token_id: Int
}

"""
order by sum() on columns of table "callbacktoken"
"""
input callbacktoken_sum_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

input callbacktoken_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: callbacktoken_set_input

  """filter the rows which have to be updated"""
  where: callbacktoken_bool_exp!
}

"""
order by var_pop() on columns of table "callbacktoken"
"""
input callbacktoken_var_pop_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
order by var_samp() on columns of table "callbacktoken"
"""
input callbacktoken_var_samp_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
order by variance() on columns of table "callbacktoken"
"""
input callbacktoken_variance_order_by {
  callback_id: order_by
  id: order_by
  task_id: order_by
  token_id: order_by
}

"""
columns and relationships of "command"
"""
type command {
  """An array relationship"""
  attackcommands(
    """distinct select on columns"""
    distinct_on: [attackcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attackcommand_order_by!]

    """filter the rows returned"""
    where: attackcommand_bool_exp
  ): [attackcommand!]!
  attributes(
    """JSON select path"""
    path: String
  ): jsonb!
  author: String!

  """An array relationship"""
  browserscripts(
    """distinct select on columns"""
    distinct_on: [browserscript_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscript_order_by!]

    """filter the rows returned"""
    where: browserscript_bool_exp
  ): [browserscript!]!
  cmd: String!

  """An array relationship"""
  commandparameters(
    """distinct select on columns"""
    distinct_on: [commandparameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [commandparameters_order_by!]

    """filter the rows returned"""
    where: commandparameters_bool_exp
  ): [commandparameters!]!
  creation_time: timestamp!
  deleted: Boolean!
  description: String!

  """An array relationship"""
  disabledcommandsprofiles(
    """distinct select on columns"""
    distinct_on: [disabledcommandsprofile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [disabledcommandsprofile_order_by!]

    """filter the rows returned"""
    where: disabledcommandsprofile_bool_exp
  ): [disabledcommandsprofile!]!
  help_cmd: String!
  id: Int!

  """An array relationship"""
  loadedcommands(
    """distinct select on columns"""
    distinct_on: [loadedcommands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [loadedcommands_order_by!]

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!
  needs_admin: Boolean!
  payload_type_id: Int!

  """An array relationship"""
  payloadcommands(
    """distinct select on columns"""
    distinct_on: [payloadcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadcommand_order_by!]

    """filter the rows returned"""
    where: payloadcommand_bool_exp
  ): [payloadcommand!]!

  """An object relationship"""
  payloadtype: payloadtype!
  script_only: Boolean!
  supported_ui_features(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  version: Int!
}

"""
aggregated selection of "command"
"""
type command_aggregate {
  aggregate: command_aggregate_fields
  nodes: [command!]!
}

input command_aggregate_bool_exp {
  bool_and: command_aggregate_bool_exp_bool_and
  bool_or: command_aggregate_bool_exp_bool_or
  count: command_aggregate_bool_exp_count
}

input command_aggregate_bool_exp_bool_and {
  arguments: command_select_column_command_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: command_bool_exp
  predicate: Boolean_comparison_exp!
}

input command_aggregate_bool_exp_bool_or {
  arguments: command_select_column_command_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: command_bool_exp
  predicate: Boolean_comparison_exp!
}

input command_aggregate_bool_exp_count {
  arguments: [command_select_column!]
  distinct: Boolean
  filter: command_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "command"
"""
type command_aggregate_fields {
  avg: command_avg_fields
  count(columns: [command_select_column!], distinct: Boolean): Int!
  max: command_max_fields
  min: command_min_fields
  stddev: command_stddev_fields
  stddev_pop: command_stddev_pop_fields
  stddev_samp: command_stddev_samp_fields
  sum: command_sum_fields
  var_pop: command_var_pop_fields
  var_samp: command_var_samp_fields
  variance: command_variance_fields
}

"""
order by aggregate values of table "command"
"""
input command_aggregate_order_by {
  avg: command_avg_order_by
  count: order_by
  max: command_max_order_by
  min: command_min_order_by
  stddev: command_stddev_order_by
  stddev_pop: command_stddev_pop_order_by
  stddev_samp: command_stddev_samp_order_by
  sum: command_sum_order_by
  var_pop: command_var_pop_order_by
  var_samp: command_var_samp_order_by
  variance: command_variance_order_by
}

"""aggregate avg on columns"""
type command_avg_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by avg() on columns of table "command"
"""
input command_avg_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "command". All fields are combined with a logical 'AND'.
"""
input command_bool_exp {
  _and: [command_bool_exp!]
  _not: command_bool_exp
  _or: [command_bool_exp!]
  attackcommands: attackcommand_bool_exp
  attributes: jsonb_comparison_exp
  author: String_comparison_exp
  browserscripts: browserscript_bool_exp
  cmd: String_comparison_exp
  commandparameters: commandparameters_bool_exp
  creation_time: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  disabledcommandsprofiles: disabledcommandsprofile_bool_exp
  help_cmd: String_comparison_exp
  id: Int_comparison_exp
  loadedcommands: loadedcommands_bool_exp
  needs_admin: Boolean_comparison_exp
  payload_type_id: Int_comparison_exp
  payloadcommands: payloadcommand_bool_exp
  payloadtype: payloadtype_bool_exp
  script_only: Boolean_comparison_exp
  supported_ui_features: jsonb_comparison_exp
  tasks: task_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  version: Int_comparison_exp
}

"""aggregate max on columns"""
type command_max_fields {
  author: String
  cmd: String
  creation_time: timestamp
  description: String
  help_cmd: String
  id: Int
  payload_type_id: Int
  version: Int
}

"""
order by max() on columns of table "command"
"""
input command_max_order_by {
  author: order_by
  cmd: order_by
  creation_time: order_by
  description: order_by
  help_cmd: order_by
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""aggregate min on columns"""
type command_min_fields {
  author: String
  cmd: String
  creation_time: timestamp
  description: String
  help_cmd: String
  id: Int
  payload_type_id: Int
  version: Int
}

"""
order by min() on columns of table "command"
"""
input command_min_order_by {
  author: order_by
  cmd: order_by
  creation_time: order_by
  description: order_by
  help_cmd: order_by
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""Ordering options when selecting data from "command"."""
input command_order_by {
  attackcommands_aggregate: attackcommand_aggregate_order_by
  attributes: order_by
  author: order_by
  browserscripts_aggregate: browserscript_aggregate_order_by
  cmd: order_by
  commandparameters_aggregate: commandparameters_aggregate_order_by
  creation_time: order_by
  deleted: order_by
  description: order_by
  disabledcommandsprofiles_aggregate: disabledcommandsprofile_aggregate_order_by
  help_cmd: order_by
  id: order_by
  loadedcommands_aggregate: loadedcommands_aggregate_order_by
  needs_admin: order_by
  payload_type_id: order_by
  payloadcommands_aggregate: payloadcommand_aggregate_order_by
  payloadtype: payloadtype_order_by
  script_only: order_by
  supported_ui_features: order_by
  tasks_aggregate: task_aggregate_order_by
  version: order_by
}

"""
select columns of table "command"
"""
enum command_select_column {
  """column name"""
  attributes

  """column name"""
  author

  """column name"""
  cmd

  """column name"""
  creation_time

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  help_cmd

  """column name"""
  id

  """column name"""
  needs_admin

  """column name"""
  payload_type_id

  """column name"""
  script_only

  """column name"""
  supported_ui_features

  """column name"""
  version
}

"""
select "command_aggregate_bool_exp_bool_and_arguments_columns" columns of table "command"
"""
enum command_select_column_command_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  deleted

  """column name"""
  needs_admin

  """column name"""
  script_only
}

"""
select "command_aggregate_bool_exp_bool_or_arguments_columns" columns of table "command"
"""
enum command_select_column_command_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  deleted

  """column name"""
  needs_admin

  """column name"""
  script_only
}

"""aggregate stddev on columns"""
type command_stddev_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by stddev() on columns of table "command"
"""
input command_stddev_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""aggregate stddev_pop on columns"""
type command_stddev_pop_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by stddev_pop() on columns of table "command"
"""
input command_stddev_pop_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""aggregate stddev_samp on columns"""
type command_stddev_samp_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by stddev_samp() on columns of table "command"
"""
input command_stddev_samp_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""
Streaming cursor of the table "command"
"""
input command_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: command_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input command_stream_cursor_value_input {
  attributes: jsonb
  author: String
  cmd: String
  creation_time: timestamp
  deleted: Boolean
  description: String
  help_cmd: String
  id: Int
  needs_admin: Boolean
  payload_type_id: Int
  script_only: Boolean
  supported_ui_features: jsonb
  version: Int
}

"""aggregate sum on columns"""
type command_sum_fields {
  id: Int
  payload_type_id: Int
  version: Int
}

"""
order by sum() on columns of table "command"
"""
input command_sum_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""aggregate var_pop on columns"""
type command_var_pop_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by var_pop() on columns of table "command"
"""
input command_var_pop_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""aggregate var_samp on columns"""
type command_var_samp_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by var_samp() on columns of table "command"
"""
input command_var_samp_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""aggregate variance on columns"""
type command_variance_fields {
  id: Float
  payload_type_id: Float
  version: Float
}

"""
order by variance() on columns of table "command"
"""
input command_variance_order_by {
  id: order_by
  payload_type_id: order_by
  version: order_by
}

"""
columns and relationships of "commandparameters"
"""
type commandparameters {
  choice_filter_by_command_attributes(
    """JSON select path"""
    path: String
  ): jsonb!
  choices(
    """JSON select path"""
    path: String
  ): jsonb!
  choices_are_all_commands: Boolean!
  choices_are_loaded_commands: Boolean!
  cli_name: String!

  """An object relationship"""
  command: command!
  command_id: Int!
  default_value: String!
  description: String!
  display_name: String!
  dynamic_query_function: String!
  id: Int!
  name: String!
  parameter_group_name: String!
  required: Boolean!
  supported_agent_build_parameters(
    """JSON select path"""
    path: String
  ): jsonb!
  supported_agents(
    """JSON select path"""
    path: String
  ): jsonb!
  type: String!
  ui_position: Int!
}

"""
order by aggregate values of table "commandparameters"
"""
input commandparameters_aggregate_order_by {
  avg: commandparameters_avg_order_by
  count: order_by
  max: commandparameters_max_order_by
  min: commandparameters_min_order_by
  stddev: commandparameters_stddev_order_by
  stddev_pop: commandparameters_stddev_pop_order_by
  stddev_samp: commandparameters_stddev_samp_order_by
  sum: commandparameters_sum_order_by
  var_pop: commandparameters_var_pop_order_by
  var_samp: commandparameters_var_samp_order_by
  variance: commandparameters_variance_order_by
}

"""
order by avg() on columns of table "commandparameters"
"""
input commandparameters_avg_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
Boolean expression to filter rows from the table "commandparameters". All fields are combined with a logical 'AND'.
"""
input commandparameters_bool_exp {
  _and: [commandparameters_bool_exp!]
  _not: commandparameters_bool_exp
  _or: [commandparameters_bool_exp!]
  choice_filter_by_command_attributes: jsonb_comparison_exp
  choices: jsonb_comparison_exp
  choices_are_all_commands: Boolean_comparison_exp
  choices_are_loaded_commands: Boolean_comparison_exp
  cli_name: String_comparison_exp
  command: command_bool_exp
  command_id: Int_comparison_exp
  default_value: String_comparison_exp
  description: String_comparison_exp
  display_name: String_comparison_exp
  dynamic_query_function: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  parameter_group_name: String_comparison_exp
  required: Boolean_comparison_exp
  supported_agent_build_parameters: jsonb_comparison_exp
  supported_agents: jsonb_comparison_exp
  type: String_comparison_exp
  ui_position: Int_comparison_exp
}

"""
order by max() on columns of table "commandparameters"
"""
input commandparameters_max_order_by {
  cli_name: order_by
  command_id: order_by
  default_value: order_by
  description: order_by
  display_name: order_by
  dynamic_query_function: order_by
  id: order_by
  name: order_by
  parameter_group_name: order_by
  type: order_by
  ui_position: order_by
}

"""
order by min() on columns of table "commandparameters"
"""
input commandparameters_min_order_by {
  cli_name: order_by
  command_id: order_by
  default_value: order_by
  description: order_by
  display_name: order_by
  dynamic_query_function: order_by
  id: order_by
  name: order_by
  parameter_group_name: order_by
  type: order_by
  ui_position: order_by
}

"""Ordering options when selecting data from "commandparameters"."""
input commandparameters_order_by {
  choice_filter_by_command_attributes: order_by
  choices: order_by
  choices_are_all_commands: order_by
  choices_are_loaded_commands: order_by
  cli_name: order_by
  command: command_order_by
  command_id: order_by
  default_value: order_by
  description: order_by
  display_name: order_by
  dynamic_query_function: order_by
  id: order_by
  name: order_by
  parameter_group_name: order_by
  required: order_by
  supported_agent_build_parameters: order_by
  supported_agents: order_by
  type: order_by
  ui_position: order_by
}

"""
select columns of table "commandparameters"
"""
enum commandparameters_select_column {
  """column name"""
  choice_filter_by_command_attributes

  """column name"""
  choices

  """column name"""
  choices_are_all_commands

  """column name"""
  choices_are_loaded_commands

  """column name"""
  cli_name

  """column name"""
  command_id

  """column name"""
  default_value

  """column name"""
  description

  """column name"""
  display_name

  """column name"""
  dynamic_query_function

  """column name"""
  id

  """column name"""
  name

  """column name"""
  parameter_group_name

  """column name"""
  required

  """column name"""
  supported_agent_build_parameters

  """column name"""
  supported_agents

  """column name"""
  type

  """column name"""
  ui_position
}

"""
order by stddev() on columns of table "commandparameters"
"""
input commandparameters_stddev_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
order by stddev_pop() on columns of table "commandparameters"
"""
input commandparameters_stddev_pop_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
order by stddev_samp() on columns of table "commandparameters"
"""
input commandparameters_stddev_samp_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
Streaming cursor of the table "commandparameters"
"""
input commandparameters_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: commandparameters_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input commandparameters_stream_cursor_value_input {
  choice_filter_by_command_attributes: jsonb
  choices: jsonb
  choices_are_all_commands: Boolean
  choices_are_loaded_commands: Boolean
  cli_name: String
  command_id: Int
  default_value: String
  description: String
  display_name: String
  dynamic_query_function: String
  id: Int
  name: String
  parameter_group_name: String
  required: Boolean
  supported_agent_build_parameters: jsonb
  supported_agents: jsonb
  type: String
  ui_position: Int
}

"""
order by sum() on columns of table "commandparameters"
"""
input commandparameters_sum_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
order by var_pop() on columns of table "commandparameters"
"""
input commandparameters_var_pop_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
order by var_samp() on columns of table "commandparameters"
"""
input commandparameters_var_samp_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

"""
order by variance() on columns of table "commandparameters"
"""
input commandparameters_variance_order_by {
  command_id: order_by
  id: order_by
  ui_position: order_by
}

type consumingServicesTestLogOutput {
  error: String
  status: String!
}

type consumingServicesTestOutput {
  error: String
  status: String!
}

"""loggers, webhooks, eventing, scripting, etc"""
type consuming_container {
  container_running: Boolean!
  created_at: timestamptz!
  deleted: Boolean!
  description: String!
  id: Int!
  name: String!
  subscriptions(
    """JSON select path"""
    path: String
  ): jsonb!
  type: String!
  updated_at: timestamptz!
}

"""
Boolean expression to filter rows from the table "consuming_container". All fields are combined with a logical 'AND'.
"""
input consuming_container_bool_exp {
  _and: [consuming_container_bool_exp!]
  _not: consuming_container_bool_exp
  _or: [consuming_container_bool_exp!]
  container_running: Boolean_comparison_exp
  created_at: timestamptz_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  subscriptions: jsonb_comparison_exp
  type: String_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
response of any mutation on the table "consuming_container"
"""
type consuming_container_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [consuming_container!]!
}

"""Ordering options when selecting data from "consuming_container"."""
input consuming_container_order_by {
  container_running: order_by
  created_at: order_by
  deleted: order_by
  description: order_by
  id: order_by
  name: order_by
  subscriptions: order_by
  type: order_by
  updated_at: order_by
}

"""primary key columns input for table: consuming_container"""
input consuming_container_pk_columns_input {
  id: Int!
}

"""
select columns of table "consuming_container"
"""
enum consuming_container_select_column {
  """column name"""
  container_running

  """column name"""
  created_at

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name

  """column name"""
  subscriptions

  """column name"""
  type

  """column name"""
  updated_at
}

"""
input type for updating data in table "consuming_container"
"""
input consuming_container_set_input {
  deleted: Boolean
}

"""
Streaming cursor of the table "consuming_container"
"""
input consuming_container_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: consuming_container_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input consuming_container_stream_cursor_value_input {
  container_running: Boolean
  created_at: timestamptz
  deleted: Boolean
  description: String
  id: Int
  name: String
  subscriptions: jsonb
  type: String
  updated_at: timestamptz
}

input consuming_container_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: consuming_container_set_input

  """filter the rows which have to be updated"""
  where: consuming_container_bool_exp!
}

type createAPITokenResponse {
  created_by: Int
  error: String
  id: Int
  name: String
  operator_id: Int
  status: String!
  token_value: String
}

type createCallbackOutput {
  error: String
  status: String!
}

type createCredentialOutput {
  error: String
  id: Int
  status: String!
}

type createOperationEventLogOutput {
  error: String
  status: String!
}

type createOperationOutput {
  error: String
  operation: operation
  operation_id: Int
  operation_name: String
  status: String!
}

type createPayloadOutput {
  error: String
  status: String!
  uuid: String
}

type createTaskOutput {
  display_id: Int
  error: String
  id: Int
  status: String!
  task: task
}

type createc2instanceOutput {
  error: String
  status: String!
}

"""
columns and relationships of "credential"
"""
type credential {
  account: String!

  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  comment: String!
  credential_raw: bytea!

  """
  A computed field, executes function "credential_credentials"
  """
  credential_text: String
  deleted: Boolean!
  id: Int!
  metadata: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  realm: String!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task
  task_id: Int
  timestamp: timestamp!
  type: String!
}

"""
aggregated selection of "credential"
"""
type credential_aggregate {
  aggregate: credential_aggregate_fields
  nodes: [credential!]!
}

input credential_aggregate_bool_exp {
  bool_and: credential_aggregate_bool_exp_bool_and
  bool_or: credential_aggregate_bool_exp_bool_or
  count: credential_aggregate_bool_exp_count
}

input credential_aggregate_bool_exp_bool_and {
  arguments: credential_select_column_credential_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: credential_bool_exp
  predicate: Boolean_comparison_exp!
}

input credential_aggregate_bool_exp_bool_or {
  arguments: credential_select_column_credential_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: credential_bool_exp
  predicate: Boolean_comparison_exp!
}

input credential_aggregate_bool_exp_count {
  arguments: [credential_select_column!]
  distinct: Boolean
  filter: credential_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "credential"
"""
type credential_aggregate_fields {
  avg: credential_avg_fields
  count(columns: [credential_select_column!], distinct: Boolean): Int!
  max: credential_max_fields
  min: credential_min_fields
  stddev: credential_stddev_fields
  stddev_pop: credential_stddev_pop_fields
  stddev_samp: credential_stddev_samp_fields
  sum: credential_sum_fields
  var_pop: credential_var_pop_fields
  var_samp: credential_var_samp_fields
  variance: credential_variance_fields
}

"""
order by aggregate values of table "credential"
"""
input credential_aggregate_order_by {
  avg: credential_avg_order_by
  count: order_by
  max: credential_max_order_by
  min: credential_min_order_by
  stddev: credential_stddev_order_by
  stddev_pop: credential_stddev_pop_order_by
  stddev_samp: credential_stddev_samp_order_by
  sum: credential_sum_order_by
  var_pop: credential_var_pop_order_by
  var_samp: credential_var_samp_order_by
  variance: credential_variance_order_by
}

"""aggregate avg on columns"""
type credential_avg_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by avg() on columns of table "credential"
"""
input credential_avg_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "credential". All fields are combined with a logical 'AND'.
"""
input credential_bool_exp {
  _and: [credential_bool_exp!]
  _not: credential_bool_exp
  _or: [credential_bool_exp!]
  account: String_comparison_exp
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  comment: String_comparison_exp
  credential_raw: bytea_comparison_exp
  credential_text: String_comparison_exp
  deleted: Boolean_comparison_exp
  id: Int_comparison_exp
  metadata: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  realm: String_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  type: String_comparison_exp
}

"""aggregate max on columns"""
type credential_max_fields {
  account: String
  apitokens_id: Int
  comment: String

  """
  A computed field, executes function "credential_credentials"
  """
  credential_text: String
  id: Int
  metadata: String
  operation_id: Int
  operator_id: Int
  realm: String
  task_id: Int
  timestamp: timestamp
  type: String
}

"""
order by max() on columns of table "credential"
"""
input credential_max_order_by {
  account: order_by
  apitokens_id: order_by
  comment: order_by
  id: order_by
  metadata: order_by
  operation_id: order_by
  operator_id: order_by
  realm: order_by
  task_id: order_by
  timestamp: order_by
  type: order_by
}

"""aggregate min on columns"""
type credential_min_fields {
  account: String
  apitokens_id: Int
  comment: String

  """
  A computed field, executes function "credential_credentials"
  """
  credential_text: String
  id: Int
  metadata: String
  operation_id: Int
  operator_id: Int
  realm: String
  task_id: Int
  timestamp: timestamp
  type: String
}

"""
order by min() on columns of table "credential"
"""
input credential_min_order_by {
  account: order_by
  apitokens_id: order_by
  comment: order_by
  id: order_by
  metadata: order_by
  operation_id: order_by
  operator_id: order_by
  realm: order_by
  task_id: order_by
  timestamp: order_by
  type: order_by
}

"""
response of any mutation on the table "credential"
"""
type credential_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [credential!]!
}

"""Ordering options when selecting data from "credential"."""
input credential_order_by {
  account: order_by
  apitoken: apitokens_order_by
  apitokens_id: order_by
  comment: order_by
  credential_raw: order_by
  credential_text: order_by
  deleted: order_by
  id: order_by
  metadata: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  realm: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
  type: order_by
}

"""primary key columns input for table: credential"""
input credential_pk_columns_input {
  id: Int!
}

"""
select columns of table "credential"
"""
enum credential_select_column {
  """column name"""
  account

  """column name"""
  apitokens_id

  """column name"""
  comment

  """column name"""
  credential_raw

  """column name"""
  deleted

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  realm

  """column name"""
  task_id

  """column name"""
  timestamp

  """column name"""
  type
}

"""
select "credential_aggregate_bool_exp_bool_and_arguments_columns" columns of table "credential"
"""
enum credential_select_column_credential_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  deleted
}

"""
select "credential_aggregate_bool_exp_bool_or_arguments_columns" columns of table "credential"
"""
enum credential_select_column_credential_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  deleted
}

"""
input type for updating data in table "credential"
"""
input credential_set_input {
  account: String
  comment: String
  credential_raw: bytea
  deleted: Boolean
  metadata: String
  realm: String
  type: String
}

"""aggregate stddev on columns"""
type credential_stddev_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by stddev() on columns of table "credential"
"""
input credential_stddev_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""aggregate stddev_pop on columns"""
type credential_stddev_pop_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by stddev_pop() on columns of table "credential"
"""
input credential_stddev_pop_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""aggregate stddev_samp on columns"""
type credential_stddev_samp_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by stddev_samp() on columns of table "credential"
"""
input credential_stddev_samp_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "credential"
"""
input credential_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: credential_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input credential_stream_cursor_value_input {
  account: String
  apitokens_id: Int
  comment: String
  credential_raw: bytea
  deleted: Boolean
  id: Int
  metadata: String
  operation_id: Int
  operator_id: Int
  realm: String
  task_id: Int
  timestamp: timestamp
  type: String
}

"""aggregate sum on columns"""
type credential_sum_fields {
  apitokens_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  task_id: Int
}

"""
order by sum() on columns of table "credential"
"""
input credential_sum_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

input credential_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: credential_set_input

  """filter the rows which have to be updated"""
  where: credential_bool_exp!
}

"""aggregate var_pop on columns"""
type credential_var_pop_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by var_pop() on columns of table "credential"
"""
input credential_var_pop_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""aggregate var_samp on columns"""
type credential_var_samp_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by var_samp() on columns of table "credential"
"""
input credential_var_samp_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""aggregate variance on columns"""
type credential_variance_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  task_id: Float
}

"""
order by variance() on columns of table "credential"
"""
input credential_variance_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  task_id: order_by
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

type deleteAPITokenOutput {
  error: String
  id: Int
  name: String
  operator_id: Int
  status: String!
}

type deleteBlockListEntryOutput {
  deleted_ids: [Int]
  error: String
  name: String
  status: String!
}

type deleteBlockListOutput {
  error: String
  name: String
  status: String!
}

type deleteTagtypeOutput {
  error: String
  status: String!
  tagtype_id: Int!
}

type deleteTasksAndCallbacksOutput {
  error: String
  failed_callbacks: [Int]
  failed_tasks: [Int]
  status: String!
}

type deletionOutput {
  error: String
  file_ids: [Int]
  payload_ids: [Int]
  status: String!
}

input disabledCommand {
  disabled_command_profile_id: Int!
  user_id: Int!
}

"""
columns and relationships of "disabledcommandsprofile"
"""
type disabledcommandsprofile {
  """An object relationship"""
  command: command!
  command_id: Int!
  id: Int!
  name: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An array relationship"""
  operatoroperations(
    """distinct select on columns"""
    distinct_on: [operatoroperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operatoroperation_order_by!]

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!
}

"""
order by aggregate values of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_aggregate_order_by {
  avg: disabledcommandsprofile_avg_order_by
  count: order_by
  max: disabledcommandsprofile_max_order_by
  min: disabledcommandsprofile_min_order_by
  stddev: disabledcommandsprofile_stddev_order_by
  stddev_pop: disabledcommandsprofile_stddev_pop_order_by
  stddev_samp: disabledcommandsprofile_stddev_samp_order_by
  sum: disabledcommandsprofile_sum_order_by
  var_pop: disabledcommandsprofile_var_pop_order_by
  var_samp: disabledcommandsprofile_var_samp_order_by
  variance: disabledcommandsprofile_variance_order_by
}

"""
order by avg() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_avg_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
Boolean expression to filter rows from the table "disabledcommandsprofile". All fields are combined with a logical 'AND'.
"""
input disabledcommandsprofile_bool_exp {
  _and: [disabledcommandsprofile_bool_exp!]
  _not: disabledcommandsprofile_bool_exp
  _or: [disabledcommandsprofile_bool_exp!]
  command: command_bool_exp
  command_id: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operatoroperations: operatoroperation_bool_exp
}

"""
unique or primary key constraints on table "disabledcommandsprofile"
"""
enum disabledcommandsprofile_constraint {
  """
  unique or primary key constraint on columns "command_id", "operation_id", "name"
  """
  disabledcommandsprofile_command_id_name_operation_id

  """
  unique or primary key constraint on columns "id"
  """
  disabledcommandsprofile_pkey
}

"""
input type for inserting data into table "disabledcommandsprofile"
"""
input disabledcommandsprofile_insert_input {
  command_id: Int
  name: String
}

"""
order by max() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_max_order_by {
  command_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
}

"""
order by min() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_min_order_by {
  command_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
}

"""
response of any mutation on the table "disabledcommandsprofile"
"""
type disabledcommandsprofile_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [disabledcommandsprofile!]!
}

"""
on_conflict condition type for table "disabledcommandsprofile"
"""
input disabledcommandsprofile_on_conflict {
  constraint: disabledcommandsprofile_constraint!
  update_columns: [disabledcommandsprofile_update_column!]! = []
  where: disabledcommandsprofile_bool_exp
}

"""Ordering options when selecting data from "disabledcommandsprofile"."""
input disabledcommandsprofile_order_by {
  command: command_order_by
  command_id: order_by
  id: order_by
  name: order_by
  operation: operation_order_by
  operation_id: order_by
  operatoroperations_aggregate: operatoroperation_aggregate_order_by
}

"""
select columns of table "disabledcommandsprofile"
"""
enum disabledcommandsprofile_select_column {
  """column name"""
  command_id

  """column name"""
  id

  """column name"""
  name

  """column name"""
  operation_id
}

"""
order by stddev() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_stddev_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by stddev_pop() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_stddev_pop_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by stddev_samp() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_stddev_samp_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
Streaming cursor of the table "disabledcommandsprofile"
"""
input disabledcommandsprofile_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: disabledcommandsprofile_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input disabledcommandsprofile_stream_cursor_value_input {
  command_id: Int
  id: Int
  name: String
  operation_id: Int
}

"""
order by sum() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_sum_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
placeholder for update columns of table "disabledcommandsprofile" (current role has no relevant permissions)
"""
enum disabledcommandsprofile_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
order by var_pop() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_var_pop_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by var_samp() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_var_samp_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

"""
order by variance() on columns of table "disabledcommandsprofile"
"""
input disabledcommandsprofile_variance_order_by {
  command_id: order_by
  id: order_by
  operation_id: order_by
}

type dynamicQueryOutput {
  choices: [String]
  error: String
  status: String!
}

"""A logical grouping of event steps"""
type eventgroup {
  active: Boolean!
  approved_to_run: Boolean!
  created_at: timestamp
  deleted: Boolean!
  description: String!
  environment(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  eventgroupapprovals(
    """distinct select on columns"""
    distinct_on: [eventgroupapproval_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupapproval_order_by!]

    """filter the rows returned"""
    where: eventgroupapproval_bool_exp
  ): [eventgroupapproval!]!

  """An array relationship"""
  eventgroupinstances(
    """distinct select on columns"""
    distinct_on: [eventgroupinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupinstance_order_by!]

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """An array relationship"""
  eventsteps(
    """distinct select on columns"""
    distinct_on: [eventstep_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstep_order_by!]

    """filter the rows returned"""
    where: eventstep_bool_exp
  ): [eventstep!]!

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  filemeta_id: Int!

  """An object relationship"""
  filemetum: filemeta!
  id: Int!
  keywords(
    """JSON select path"""
    path: String
  ): jsonb!
  name: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  run_as: String!
  total_order_steps: Int!
  total_steps: Int!
  trigger: String!
  trigger_data(
    """JSON select path"""
    path: String
  ): jsonb!
  updated_at: timestamp!
}

"""
aggregated selection of "eventgroup"
"""
type eventgroup_aggregate {
  aggregate: eventgroup_aggregate_fields
  nodes: [eventgroup!]!
}

input eventgroup_aggregate_bool_exp {
  bool_and: eventgroup_aggregate_bool_exp_bool_and
  bool_or: eventgroup_aggregate_bool_exp_bool_or
  count: eventgroup_aggregate_bool_exp_count
}

input eventgroup_aggregate_bool_exp_bool_and {
  arguments: eventgroup_select_column_eventgroup_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: eventgroup_bool_exp
  predicate: Boolean_comparison_exp!
}

input eventgroup_aggregate_bool_exp_bool_or {
  arguments: eventgroup_select_column_eventgroup_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: eventgroup_bool_exp
  predicate: Boolean_comparison_exp!
}

input eventgroup_aggregate_bool_exp_count {
  arguments: [eventgroup_select_column!]
  distinct: Boolean
  filter: eventgroup_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "eventgroup"
"""
type eventgroup_aggregate_fields {
  avg: eventgroup_avg_fields
  count(columns: [eventgroup_select_column!], distinct: Boolean): Int!
  max: eventgroup_max_fields
  min: eventgroup_min_fields
  stddev: eventgroup_stddev_fields
  stddev_pop: eventgroup_stddev_pop_fields
  stddev_samp: eventgroup_stddev_samp_fields
  sum: eventgroup_sum_fields
  var_pop: eventgroup_var_pop_fields
  var_samp: eventgroup_var_samp_fields
  variance: eventgroup_variance_fields
}

"""
order by aggregate values of table "eventgroup"
"""
input eventgroup_aggregate_order_by {
  avg: eventgroup_avg_order_by
  count: order_by
  max: eventgroup_max_order_by
  min: eventgroup_min_order_by
  stddev: eventgroup_stddev_order_by
  stddev_pop: eventgroup_stddev_pop_order_by
  stddev_samp: eventgroup_stddev_samp_order_by
  sum: eventgroup_sum_order_by
  var_pop: eventgroup_var_pop_order_by
  var_samp: eventgroup_var_samp_order_by
  variance: eventgroup_variance_order_by
}

"""aggregate avg on columns"""
type eventgroup_avg_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by avg() on columns of table "eventgroup"
"""
input eventgroup_avg_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""
Boolean expression to filter rows from the table "eventgroup". All fields are combined with a logical 'AND'.
"""
input eventgroup_bool_exp {
  _and: [eventgroup_bool_exp!]
  _not: eventgroup_bool_exp
  _or: [eventgroup_bool_exp!]
  active: Boolean_comparison_exp
  approved_to_run: Boolean_comparison_exp
  created_at: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  environment: jsonb_comparison_exp
  eventgroupapprovals: eventgroupapproval_bool_exp
  eventgroupinstances: eventgroupinstance_bool_exp
  eventsteps: eventstep_bool_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  filemeta_id: Int_comparison_exp
  filemetum: filemeta_bool_exp
  id: Int_comparison_exp
  keywords: jsonb_comparison_exp
  name: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  run_as: String_comparison_exp
  total_order_steps: Int_comparison_exp
  total_steps: Int_comparison_exp
  trigger: String_comparison_exp
  trigger_data: jsonb_comparison_exp
  updated_at: timestamp_comparison_exp
}

"""aggregate max on columns"""
type eventgroup_max_fields {
  created_at: timestamp
  description: String
  filemeta_id: Int
  id: Int
  name: String
  operation_id: Int
  operator_id: Int
  run_as: String
  total_order_steps: Int
  total_steps: Int
  trigger: String
  updated_at: timestamp
}

"""
order by max() on columns of table "eventgroup"
"""
input eventgroup_max_order_by {
  created_at: order_by
  description: order_by
  filemeta_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
  operator_id: order_by
  run_as: order_by
  total_order_steps: order_by
  total_steps: order_by
  trigger: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type eventgroup_min_fields {
  created_at: timestamp
  description: String
  filemeta_id: Int
  id: Int
  name: String
  operation_id: Int
  operator_id: Int
  run_as: String
  total_order_steps: Int
  total_steps: Int
  trigger: String
  updated_at: timestamp
}

"""
order by min() on columns of table "eventgroup"
"""
input eventgroup_min_order_by {
  created_at: order_by
  description: order_by
  filemeta_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
  operator_id: order_by
  run_as: order_by
  total_order_steps: order_by
  total_steps: order_by
  trigger: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "eventgroup"
"""
type eventgroup_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [eventgroup!]!
}

"""Ordering options when selecting data from "eventgroup"."""
input eventgroup_order_by {
  active: order_by
  approved_to_run: order_by
  created_at: order_by
  deleted: order_by
  description: order_by
  environment: order_by
  eventgroupapprovals_aggregate: eventgroupapproval_aggregate_order_by
  eventgroupinstances_aggregate: eventgroupinstance_aggregate_order_by
  eventsteps_aggregate: eventstep_aggregate_order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  filemeta_id: order_by
  filemetum: filemeta_order_by
  id: order_by
  keywords: order_by
  name: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  run_as: order_by
  total_order_steps: order_by
  total_steps: order_by
  trigger: order_by
  trigger_data: order_by
  updated_at: order_by
}

"""primary key columns input for table: eventgroup"""
input eventgroup_pk_columns_input {
  id: Int!
}

"""
select columns of table "eventgroup"
"""
enum eventgroup_select_column {
  """column name"""
  active

  """column name"""
  approved_to_run

  """column name"""
  created_at

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  environment

  """column name"""
  filemeta_id

  """column name"""
  id

  """column name"""
  keywords

  """column name"""
  name

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  run_as

  """column name"""
  total_order_steps

  """column name"""
  total_steps

  """column name"""
  trigger

  """column name"""
  trigger_data

  """column name"""
  updated_at
}

"""
select "eventgroup_aggregate_bool_exp_bool_and_arguments_columns" columns of table "eventgroup"
"""
enum eventgroup_select_column_eventgroup_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  active

  """column name"""
  approved_to_run

  """column name"""
  deleted
}

"""
select "eventgroup_aggregate_bool_exp_bool_or_arguments_columns" columns of table "eventgroup"
"""
enum eventgroup_select_column_eventgroup_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  active

  """column name"""
  approved_to_run

  """column name"""
  deleted
}

"""
input type for updating data in table "eventgroup"
"""
input eventgroup_set_input {
  active: Boolean
  deleted: Boolean
}

"""aggregate stddev on columns"""
type eventgroup_stddev_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by stddev() on columns of table "eventgroup"
"""
input eventgroup_stddev_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""aggregate stddev_pop on columns"""
type eventgroup_stddev_pop_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by stddev_pop() on columns of table "eventgroup"
"""
input eventgroup_stddev_pop_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""aggregate stddev_samp on columns"""
type eventgroup_stddev_samp_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by stddev_samp() on columns of table "eventgroup"
"""
input eventgroup_stddev_samp_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""
Streaming cursor of the table "eventgroup"
"""
input eventgroup_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eventgroup_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eventgroup_stream_cursor_value_input {
  active: Boolean
  approved_to_run: Boolean
  created_at: timestamp
  deleted: Boolean
  description: String
  environment: jsonb
  filemeta_id: Int
  id: Int
  keywords: jsonb
  name: String
  operation_id: Int
  operator_id: Int
  run_as: String
  total_order_steps: Int
  total_steps: Int
  trigger: String
  trigger_data: jsonb
  updated_at: timestamp
}

"""aggregate sum on columns"""
type eventgroup_sum_fields {
  filemeta_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  total_order_steps: Int
  total_steps: Int
}

"""
order by sum() on columns of table "eventgroup"
"""
input eventgroup_sum_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

input eventgroup_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: eventgroup_set_input

  """filter the rows which have to be updated"""
  where: eventgroup_bool_exp!
}

"""aggregate var_pop on columns"""
type eventgroup_var_pop_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by var_pop() on columns of table "eventgroup"
"""
input eventgroup_var_pop_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""aggregate var_samp on columns"""
type eventgroup_var_samp_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by var_samp() on columns of table "eventgroup"
"""
input eventgroup_var_samp_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""aggregate variance on columns"""
type eventgroup_variance_fields {
  filemeta_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  total_order_steps: Float
  total_steps: Float
}

"""
order by variance() on columns of table "eventgroup"
"""
input eventgroup_variance_order_by {
  filemeta_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
  total_steps: order_by
}

"""Required approvals per operator per eventgroup"""
type eventgroupapproval {
  approved: Boolean!
  created_at: timestamp!

  """An object relationship"""
  eventgroup: eventgroup!
  eventgroup_id: Int!
  id: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  updated_at: timestamp!
}

"""
order by aggregate values of table "eventgroupapproval"
"""
input eventgroupapproval_aggregate_order_by {
  avg: eventgroupapproval_avg_order_by
  count: order_by
  max: eventgroupapproval_max_order_by
  min: eventgroupapproval_min_order_by
  stddev: eventgroupapproval_stddev_order_by
  stddev_pop: eventgroupapproval_stddev_pop_order_by
  stddev_samp: eventgroupapproval_stddev_samp_order_by
  sum: eventgroupapproval_sum_order_by
  var_pop: eventgroupapproval_var_pop_order_by
  var_samp: eventgroupapproval_var_samp_order_by
  variance: eventgroupapproval_variance_order_by
}

"""
order by avg() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_avg_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
Boolean expression to filter rows from the table "eventgroupapproval". All fields are combined with a logical 'AND'.
"""
input eventgroupapproval_bool_exp {
  _and: [eventgroupapproval_bool_exp!]
  _not: eventgroupapproval_bool_exp
  _or: [eventgroupapproval_bool_exp!]
  approved: Boolean_comparison_exp
  created_at: timestamp_comparison_exp
  eventgroup: eventgroup_bool_exp
  eventgroup_id: Int_comparison_exp
  id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  updated_at: timestamp_comparison_exp
}

"""
order by max() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_max_order_by {
  created_at: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  updated_at: order_by
}

"""
order by min() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_min_order_by {
  created_at: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  updated_at: order_by
}

"""Ordering options when selecting data from "eventgroupapproval"."""
input eventgroupapproval_order_by {
  approved: order_by
  created_at: order_by
  eventgroup: eventgroup_order_by
  eventgroup_id: order_by
  id: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  updated_at: order_by
}

"""
select columns of table "eventgroupapproval"
"""
enum eventgroupapproval_select_column {
  """column name"""
  approved

  """column name"""
  created_at

  """column name"""
  eventgroup_id

  """column name"""
  id

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  updated_at
}

"""
order by stddev() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_stddev_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by stddev_pop() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_stddev_pop_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by stddev_samp() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_stddev_samp_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
Streaming cursor of the table "eventgroupapproval"
"""
input eventgroupapproval_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eventgroupapproval_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eventgroupapproval_stream_cursor_value_input {
  approved: Boolean
  created_at: timestamp
  eventgroup_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  updated_at: timestamp
}

"""
order by sum() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_sum_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by var_pop() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_var_pop_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by var_samp() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_var_samp_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by variance() on columns of table "eventgroupapproval"
"""
input eventgroupapproval_variance_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""An executing instance of an event group"""
type eventgroupinstance {
  cancelled_by: Int

  """An object relationship"""
  cancelled_by_operator: operator
  created_at: timestamp!
  current_order_step: Int!
  end_timestamp: timestamp
  environment(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  eventgroup: eventgroup!
  eventgroup_id: Int!

  """An array relationship"""
  eventstepinstances(
    """distinct select on columns"""
    distinct_on: [eventstepinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstepinstance_order_by!]

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!
  id: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  status: String!
  total_order_steps: Int!
  trigger: String!
  trigger_metadata(
    """JSON select path"""
    path: String
  ): jsonb!
  updated_at: timestamp!
}

"""
order by aggregate values of table "eventgroupinstance"
"""
input eventgroupinstance_aggregate_order_by {
  avg: eventgroupinstance_avg_order_by
  count: order_by
  max: eventgroupinstance_max_order_by
  min: eventgroupinstance_min_order_by
  stddev: eventgroupinstance_stddev_order_by
  stddev_pop: eventgroupinstance_stddev_pop_order_by
  stddev_samp: eventgroupinstance_stddev_samp_order_by
  sum: eventgroupinstance_sum_order_by
  var_pop: eventgroupinstance_var_pop_order_by
  var_samp: eventgroupinstance_var_samp_order_by
  variance: eventgroupinstance_variance_order_by
}

"""
order by avg() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_avg_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
Boolean expression to filter rows from the table "eventgroupinstance". All fields are combined with a logical 'AND'.
"""
input eventgroupinstance_bool_exp {
  _and: [eventgroupinstance_bool_exp!]
  _not: eventgroupinstance_bool_exp
  _or: [eventgroupinstance_bool_exp!]
  cancelled_by: Int_comparison_exp
  cancelled_by_operator: operator_bool_exp
  created_at: timestamp_comparison_exp
  current_order_step: Int_comparison_exp
  end_timestamp: timestamp_comparison_exp
  environment: jsonb_comparison_exp
  eventgroup: eventgroup_bool_exp
  eventgroup_id: Int_comparison_exp
  eventstepinstances: eventstepinstance_bool_exp
  id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  status: String_comparison_exp
  total_order_steps: Int_comparison_exp
  trigger: String_comparison_exp
  trigger_metadata: jsonb_comparison_exp
  updated_at: timestamp_comparison_exp
}

"""
order by max() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_max_order_by {
  cancelled_by: order_by
  created_at: order_by
  current_order_step: order_by
  end_timestamp: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  status: order_by
  total_order_steps: order_by
  trigger: order_by
  updated_at: order_by
}

"""
order by min() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_min_order_by {
  cancelled_by: order_by
  created_at: order_by
  current_order_step: order_by
  end_timestamp: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  status: order_by
  total_order_steps: order_by
  trigger: order_by
  updated_at: order_by
}

"""Ordering options when selecting data from "eventgroupinstance"."""
input eventgroupinstance_order_by {
  cancelled_by: order_by
  cancelled_by_operator: operator_order_by
  created_at: order_by
  current_order_step: order_by
  end_timestamp: order_by
  environment: order_by
  eventgroup: eventgroup_order_by
  eventgroup_id: order_by
  eventstepinstances_aggregate: eventstepinstance_aggregate_order_by
  id: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  status: order_by
  total_order_steps: order_by
  trigger: order_by
  trigger_metadata: order_by
  updated_at: order_by
}

"""
select columns of table "eventgroupinstance"
"""
enum eventgroupinstance_select_column {
  """column name"""
  cancelled_by

  """column name"""
  created_at

  """column name"""
  current_order_step

  """column name"""
  end_timestamp

  """column name"""
  environment

  """column name"""
  eventgroup_id

  """column name"""
  id

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  status

  """column name"""
  total_order_steps

  """column name"""
  trigger

  """column name"""
  trigger_metadata

  """column name"""
  updated_at
}

"""
order by stddev() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_stddev_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
order by stddev_pop() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_stddev_pop_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
order by stddev_samp() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_stddev_samp_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
Streaming cursor of the table "eventgroupinstance"
"""
input eventgroupinstance_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eventgroupinstance_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eventgroupinstance_stream_cursor_value_input {
  cancelled_by: Int
  created_at: timestamp
  current_order_step: Int
  end_timestamp: timestamp
  environment: jsonb
  eventgroup_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  status: String
  total_order_steps: Int
  trigger: String
  trigger_metadata: jsonb
  updated_at: timestamp
}

"""
order by sum() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_sum_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
order by var_pop() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_var_pop_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
order by var_samp() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_var_samp_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

"""
order by variance() on columns of table "eventgroupinstance"
"""
input eventgroupinstance_variance_order_by {
  cancelled_by: order_by
  current_order_step: order_by
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  total_order_steps: order_by
}

type eventingTriggerCancelOutput {
  error: String
  status: String!
}

type eventingTriggerKeywordOutput {
  error: String
  status: String!
}

type eventingTriggerManualOutput {
  error: String
  status: String!
}

type eventingTriggerRetryOutput {
  error: String
  status: String!
}

type eventingTriggerRunAgainOutput {
  error: String
  status: String!
}

"""A single action within a specific eventgroup"""
type eventstep {
  action: String!
  action_data(
    """JSON select path"""
    path: String
  ): jsonb!
  continue_on_error: Boolean!
  created_at: timestamp
  depends_on(
    """JSON select path"""
    path: String
  ): jsonb!
  description: String!
  environment(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  eventgroup: eventgroup!
  eventgroup_id: Int!

  """An array relationship"""
  eventstepinstances(
    """distinct select on columns"""
    distinct_on: [eventstepinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstepinstance_order_by!]

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!
  id: Int!
  inputs(
    """JSON select path"""
    path: String
  ): jsonb!
  name: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  order: Int!
  outputs(
    """JSON select path"""
    path: String
  ): jsonb!
}

"""
order by aggregate values of table "eventstep"
"""
input eventstep_aggregate_order_by {
  avg: eventstep_avg_order_by
  count: order_by
  max: eventstep_max_order_by
  min: eventstep_min_order_by
  stddev: eventstep_stddev_order_by
  stddev_pop: eventstep_stddev_pop_order_by
  stddev_samp: eventstep_stddev_samp_order_by
  sum: eventstep_sum_order_by
  var_pop: eventstep_var_pop_order_by
  var_samp: eventstep_var_samp_order_by
  variance: eventstep_variance_order_by
}

"""
order by avg() on columns of table "eventstep"
"""
input eventstep_avg_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
Boolean expression to filter rows from the table "eventstep". All fields are combined with a logical 'AND'.
"""
input eventstep_bool_exp {
  _and: [eventstep_bool_exp!]
  _not: eventstep_bool_exp
  _or: [eventstep_bool_exp!]
  action: String_comparison_exp
  action_data: jsonb_comparison_exp
  continue_on_error: Boolean_comparison_exp
  created_at: timestamp_comparison_exp
  depends_on: jsonb_comparison_exp
  description: String_comparison_exp
  environment: jsonb_comparison_exp
  eventgroup: eventgroup_bool_exp
  eventgroup_id: Int_comparison_exp
  eventstepinstances: eventstepinstance_bool_exp
  id: Int_comparison_exp
  inputs: jsonb_comparison_exp
  name: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  order: Int_comparison_exp
  outputs: jsonb_comparison_exp
}

"""
order by max() on columns of table "eventstep"
"""
input eventstep_max_order_by {
  action: order_by
  created_at: order_by
  description: order_by
  eventgroup_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by min() on columns of table "eventstep"
"""
input eventstep_min_order_by {
  action: order_by
  created_at: order_by
  description: order_by
  eventgroup_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""Ordering options when selecting data from "eventstep"."""
input eventstep_order_by {
  action: order_by
  action_data: order_by
  continue_on_error: order_by
  created_at: order_by
  depends_on: order_by
  description: order_by
  environment: order_by
  eventgroup: eventgroup_order_by
  eventgroup_id: order_by
  eventstepinstances_aggregate: eventstepinstance_aggregate_order_by
  id: order_by
  inputs: order_by
  name: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  order: order_by
  outputs: order_by
}

"""
select columns of table "eventstep"
"""
enum eventstep_select_column {
  """column name"""
  action

  """column name"""
  action_data

  """column name"""
  continue_on_error

  """column name"""
  created_at

  """column name"""
  depends_on

  """column name"""
  description

  """column name"""
  environment

  """column name"""
  eventgroup_id

  """column name"""
  id

  """column name"""
  inputs

  """column name"""
  name

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  order

  """column name"""
  outputs
}

"""
order by stddev() on columns of table "eventstep"
"""
input eventstep_stddev_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by stddev_pop() on columns of table "eventstep"
"""
input eventstep_stddev_pop_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by stddev_samp() on columns of table "eventstep"
"""
input eventstep_stddev_samp_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
Streaming cursor of the table "eventstep"
"""
input eventstep_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eventstep_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eventstep_stream_cursor_value_input {
  action: String
  action_data: jsonb
  continue_on_error: Boolean
  created_at: timestamp
  depends_on: jsonb
  description: String
  environment: jsonb
  eventgroup_id: Int
  id: Int
  inputs: jsonb
  name: String
  operation_id: Int
  operator_id: Int
  order: Int
  outputs: jsonb
}

"""
order by sum() on columns of table "eventstep"
"""
input eventstep_sum_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by var_pop() on columns of table "eventstep"
"""
input eventstep_var_pop_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by var_samp() on columns of table "eventstep"
"""
input eventstep_var_samp_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by variance() on columns of table "eventstep"
"""
input eventstep_variance_order_by {
  eventgroup_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""An executing instance of a step within an eventgroupinstance"""
type eventstepinstance {
  action_data(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  apitokens(
    """distinct select on columns"""
    distinct_on: [apitokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [apitokens_order_by!]

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!

  """An array relationship"""
  callbacks(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """An aggregate relationship"""
  callbacks_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!
  continue_on_error: Boolean!
  created_at: timestamp!
  end_timestamp: timestamp
  environment(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  eventgroupinstance: eventgroupinstance!
  eventgroupinstance_id: Int!

  """An object relationship"""
  eventstep: eventstep!
  eventstep_id: Int!

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  id: Int!
  inputs(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  order: Int!
  outputs(
    """JSON select path"""
    path: String
  ): jsonb!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """An array relationship"""
  responses(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """An aggregate relationship"""
  responses_aggregate(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): response_aggregate!
  status: String!
  stderr: String!
  stdout: String!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An array relationship"""
  tagtypes(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): [tagtype!]!

  """An aggregate relationship"""
  tagtypes_aggregate(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): tagtype_aggregate!

  """An array relationship"""
  taskartifacts(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """An aggregate relationship"""
  taskartifacts_aggregate(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): taskartifact_aggregate!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  updated_at: timestamp!
}

"""
order by aggregate values of table "eventstepinstance"
"""
input eventstepinstance_aggregate_order_by {
  avg: eventstepinstance_avg_order_by
  count: order_by
  max: eventstepinstance_max_order_by
  min: eventstepinstance_min_order_by
  stddev: eventstepinstance_stddev_order_by
  stddev_pop: eventstepinstance_stddev_pop_order_by
  stddev_samp: eventstepinstance_stddev_samp_order_by
  sum: eventstepinstance_sum_order_by
  var_pop: eventstepinstance_var_pop_order_by
  var_samp: eventstepinstance_var_samp_order_by
  variance: eventstepinstance_variance_order_by
}

"""
order by avg() on columns of table "eventstepinstance"
"""
input eventstepinstance_avg_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
Boolean expression to filter rows from the table "eventstepinstance". All fields are combined with a logical 'AND'.
"""
input eventstepinstance_bool_exp {
  _and: [eventstepinstance_bool_exp!]
  _not: eventstepinstance_bool_exp
  _or: [eventstepinstance_bool_exp!]
  action_data: jsonb_comparison_exp
  apitokens: apitokens_bool_exp
  callbacks: callback_bool_exp
  callbacks_aggregate: callback_aggregate_bool_exp
  continue_on_error: Boolean_comparison_exp
  created_at: timestamp_comparison_exp
  end_timestamp: timestamp_comparison_exp
  environment: jsonb_comparison_exp
  eventgroupinstance: eventgroupinstance_bool_exp
  eventgroupinstance_id: Int_comparison_exp
  eventstep: eventstep_bool_exp
  eventstep_id: Int_comparison_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  id: Int_comparison_exp
  inputs: jsonb_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  order: Int_comparison_exp
  outputs: jsonb_comparison_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  responses: response_bool_exp
  responses_aggregate: response_aggregate_bool_exp
  status: String_comparison_exp
  stderr: String_comparison_exp
  stdout: String_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  tagtypes: tagtype_bool_exp
  tagtypes_aggregate: tagtype_aggregate_bool_exp
  taskartifacts: taskartifact_bool_exp
  taskartifacts_aggregate: taskartifact_aggregate_bool_exp
  tasks: task_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  updated_at: timestamp_comparison_exp
}

"""
order by max() on columns of table "eventstepinstance"
"""
input eventstepinstance_max_order_by {
  created_at: order_by
  end_timestamp: order_by
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
  status: order_by
  stderr: order_by
  stdout: order_by
  updated_at: order_by
}

"""
order by min() on columns of table "eventstepinstance"
"""
input eventstepinstance_min_order_by {
  created_at: order_by
  end_timestamp: order_by
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
  status: order_by
  stderr: order_by
  stdout: order_by
  updated_at: order_by
}

"""Ordering options when selecting data from "eventstepinstance"."""
input eventstepinstance_order_by {
  action_data: order_by
  apitokens_aggregate: apitokens_aggregate_order_by
  callbacks_aggregate: callback_aggregate_order_by
  continue_on_error: order_by
  created_at: order_by
  end_timestamp: order_by
  environment: order_by
  eventgroupinstance: eventgroupinstance_order_by
  eventgroupinstance_id: order_by
  eventstep: eventstep_order_by
  eventstep_id: order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  id: order_by
  inputs: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  order: order_by
  outputs: order_by
  payloads_aggregate: payload_aggregate_order_by
  responses_aggregate: response_aggregate_order_by
  status: order_by
  stderr: order_by
  stdout: order_by
  tags_aggregate: tag_aggregate_order_by
  tagtypes_aggregate: tagtype_aggregate_order_by
  taskartifacts_aggregate: taskartifact_aggregate_order_by
  tasks_aggregate: task_aggregate_order_by
  updated_at: order_by
}

"""
select columns of table "eventstepinstance"
"""
enum eventstepinstance_select_column {
  """column name"""
  action_data

  """column name"""
  continue_on_error

  """column name"""
  created_at

  """column name"""
  end_timestamp

  """column name"""
  environment

  """column name"""
  eventgroupinstance_id

  """column name"""
  eventstep_id

  """column name"""
  id

  """column name"""
  inputs

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  order

  """column name"""
  outputs

  """column name"""
  status

  """column name"""
  stderr

  """column name"""
  stdout

  """column name"""
  updated_at
}

"""
order by stddev() on columns of table "eventstepinstance"
"""
input eventstepinstance_stddev_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by stddev_pop() on columns of table "eventstepinstance"
"""
input eventstepinstance_stddev_pop_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by stddev_samp() on columns of table "eventstepinstance"
"""
input eventstepinstance_stddev_samp_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
Streaming cursor of the table "eventstepinstance"
"""
input eventstepinstance_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: eventstepinstance_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input eventstepinstance_stream_cursor_value_input {
  action_data: jsonb
  continue_on_error: Boolean
  created_at: timestamp
  end_timestamp: timestamp
  environment: jsonb
  eventgroupinstance_id: Int
  eventstep_id: Int
  id: Int
  inputs: jsonb
  operation_id: Int
  operator_id: Int
  order: Int
  outputs: jsonb
  status: String
  stderr: String
  stdout: String
  updated_at: timestamp
}

"""
order by sum() on columns of table "eventstepinstance"
"""
input eventstepinstance_sum_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by var_pop() on columns of table "eventstepinstance"
"""
input eventstepinstance_var_pop_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by var_samp() on columns of table "eventstepinstance"
"""
input eventstepinstance_var_samp_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

"""
order by variance() on columns of table "eventstepinstance"
"""
input eventstepinstance_variance_order_by {
  eventgroupinstance_id: order_by
  eventstep_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  order: order_by
}

type exportCallbackConfigOutput {
  config: String
  error: String
  status: String!
}

"""
columns and relationships of "filemeta"
"""
type filemeta {
  agent_file_id: String!

  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  chunk_size: Int!
  chunks_received: Int!
  comment: String!
  complete: Boolean!
  delete_after_fetch: Boolean!
  deleted: Boolean!

  """An object relationship"""
  eventgroup: eventgroup
  eventgroup_id: Int

  """An array relationship"""
  eventgroups(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): [eventgroup!]!

  """An aggregate relationship"""
  eventgroups_aggregate(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): eventgroup_aggregate!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  filename: bytea!

  """convert bytea filename to text"""
  filename_text: String

  """
  A computed field, executes function "filemeta_filename_utf8"
  """
  filename_utf8: String
  full_remote_path: bytea!

  """convert bytea full_remote_path to text"""
  full_remote_path_text: String

  """
  A computed field, executes function "filemeta_full_remote_path_utf8"
  """
  full_remote_path_utf8: String
  host: String!
  id: Int!
  is_download_from_agent: Boolean!
  is_payload: Boolean!
  is_screenshot: Boolean!
  md5: String!

  """An object relationship"""
  mythictree: mythictree
  mythictree_id: Int

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  path: String!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!
  sha1: String!
  size: Int!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task
  task_id: Int
  timestamp: timestamp!
  total_chunks: Int!
}

"""
aggregated selection of "filemeta"
"""
type filemeta_aggregate {
  aggregate: filemeta_aggregate_fields
  nodes: [filemeta!]!
}

input filemeta_aggregate_bool_exp {
  bool_and: filemeta_aggregate_bool_exp_bool_and
  bool_or: filemeta_aggregate_bool_exp_bool_or
  count: filemeta_aggregate_bool_exp_count
}

input filemeta_aggregate_bool_exp_bool_and {
  arguments: filemeta_select_column_filemeta_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: filemeta_bool_exp
  predicate: Boolean_comparison_exp!
}

input filemeta_aggregate_bool_exp_bool_or {
  arguments: filemeta_select_column_filemeta_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: filemeta_bool_exp
  predicate: Boolean_comparison_exp!
}

input filemeta_aggregate_bool_exp_count {
  arguments: [filemeta_select_column!]
  distinct: Boolean
  filter: filemeta_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "filemeta"
"""
type filemeta_aggregate_fields {
  avg: filemeta_avg_fields
  count(columns: [filemeta_select_column!], distinct: Boolean): Int!
  max: filemeta_max_fields
  min: filemeta_min_fields
  stddev: filemeta_stddev_fields
  stddev_pop: filemeta_stddev_pop_fields
  stddev_samp: filemeta_stddev_samp_fields
  sum: filemeta_sum_fields
  var_pop: filemeta_var_pop_fields
  var_samp: filemeta_var_samp_fields
  variance: filemeta_variance_fields
}

"""
order by aggregate values of table "filemeta"
"""
input filemeta_aggregate_order_by {
  avg: filemeta_avg_order_by
  count: order_by
  max: filemeta_max_order_by
  min: filemeta_min_order_by
  stddev: filemeta_stddev_order_by
  stddev_pop: filemeta_stddev_pop_order_by
  stddev_samp: filemeta_stddev_samp_order_by
  sum: filemeta_sum_order_by
  var_pop: filemeta_var_pop_order_by
  var_samp: filemeta_var_samp_order_by
  variance: filemeta_variance_order_by
}

"""aggregate avg on columns"""
type filemeta_avg_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by avg() on columns of table "filemeta"
"""
input filemeta_avg_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

"""
Boolean expression to filter rows from the table "filemeta". All fields are combined with a logical 'AND'.
"""
input filemeta_bool_exp {
  _and: [filemeta_bool_exp!]
  _not: filemeta_bool_exp
  _or: [filemeta_bool_exp!]
  agent_file_id: String_comparison_exp
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  chunk_size: Int_comparison_exp
  chunks_received: Int_comparison_exp
  comment: String_comparison_exp
  complete: Boolean_comparison_exp
  delete_after_fetch: Boolean_comparison_exp
  deleted: Boolean_comparison_exp
  eventgroup: eventgroup_bool_exp
  eventgroup_id: Int_comparison_exp
  eventgroups: eventgroup_bool_exp
  eventgroups_aggregate: eventgroup_aggregate_bool_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  filename: bytea_comparison_exp
  filename_text: String_comparison_exp
  filename_utf8: String_comparison_exp
  full_remote_path: bytea_comparison_exp
  full_remote_path_text: String_comparison_exp
  full_remote_path_utf8: String_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  is_download_from_agent: Boolean_comparison_exp
  is_payload: Boolean_comparison_exp
  is_screenshot: Boolean_comparison_exp
  md5: String_comparison_exp
  mythictree: mythictree_bool_exp
  mythictree_id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  path: String_comparison_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  sha1: String_comparison_exp
  size: Int_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  total_chunks: Int_comparison_exp
}

"""aggregate max on columns"""
type filemeta_max_fields {
  agent_file_id: String
  apitokens_id: Int
  chunk_size: Int
  chunks_received: Int
  comment: String
  eventgroup_id: Int
  eventstepinstance_id: Int

  """convert bytea filename to text"""
  filename_text: String

  """
  A computed field, executes function "filemeta_filename_utf8"
  """
  filename_utf8: String

  """convert bytea full_remote_path to text"""
  full_remote_path_text: String

  """
  A computed field, executes function "filemeta_full_remote_path_utf8"
  """
  full_remote_path_utf8: String
  host: String
  id: Int
  md5: String
  mythictree_id: Int
  operation_id: Int
  operator_id: Int
  path: String
  sha1: String
  size: Int
  task_id: Int
  timestamp: timestamp
  total_chunks: Int
}

"""
order by max() on columns of table "filemeta"
"""
input filemeta_max_order_by {
  agent_file_id: order_by
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  comment: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  host: order_by
  id: order_by
  md5: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  path: order_by
  sha1: order_by
  size: order_by
  task_id: order_by
  timestamp: order_by
  total_chunks: order_by
}

"""aggregate min on columns"""
type filemeta_min_fields {
  agent_file_id: String
  apitokens_id: Int
  chunk_size: Int
  chunks_received: Int
  comment: String
  eventgroup_id: Int
  eventstepinstance_id: Int

  """convert bytea filename to text"""
  filename_text: String

  """
  A computed field, executes function "filemeta_filename_utf8"
  """
  filename_utf8: String

  """convert bytea full_remote_path to text"""
  full_remote_path_text: String

  """
  A computed field, executes function "filemeta_full_remote_path_utf8"
  """
  full_remote_path_utf8: String
  host: String
  id: Int
  md5: String
  mythictree_id: Int
  operation_id: Int
  operator_id: Int
  path: String
  sha1: String
  size: Int
  task_id: Int
  timestamp: timestamp
  total_chunks: Int
}

"""
order by min() on columns of table "filemeta"
"""
input filemeta_min_order_by {
  agent_file_id: order_by
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  comment: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  host: order_by
  id: order_by
  md5: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  path: order_by
  sha1: order_by
  size: order_by
  task_id: order_by
  timestamp: order_by
  total_chunks: order_by
}

"""
response of any mutation on the table "filemeta"
"""
type filemeta_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [filemeta!]!
}

"""Ordering options when selecting data from "filemeta"."""
input filemeta_order_by {
  agent_file_id: order_by
  apitoken: apitokens_order_by
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  comment: order_by
  complete: order_by
  delete_after_fetch: order_by
  deleted: order_by
  eventgroup: eventgroup_order_by
  eventgroup_id: order_by
  eventgroups_aggregate: eventgroup_aggregate_order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  filename: order_by
  filename_text: order_by
  filename_utf8: order_by
  full_remote_path: order_by
  full_remote_path_text: order_by
  full_remote_path_utf8: order_by
  host: order_by
  id: order_by
  is_download_from_agent: order_by
  is_payload: order_by
  is_screenshot: order_by
  md5: order_by
  mythictree: mythictree_order_by
  mythictree_id: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  path: order_by
  payloads_aggregate: payload_aggregate_order_by
  sha1: order_by
  size: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
  total_chunks: order_by
}

"""primary key columns input for table: filemeta"""
input filemeta_pk_columns_input {
  id: Int!
}

"""
select columns of table "filemeta"
"""
enum filemeta_select_column {
  """column name"""
  agent_file_id

  """column name"""
  apitokens_id

  """column name"""
  chunk_size

  """column name"""
  chunks_received

  """column name"""
  comment

  """column name"""
  complete

  """column name"""
  delete_after_fetch

  """column name"""
  deleted

  """column name"""
  eventgroup_id

  """column name"""
  eventstepinstance_id

  """column name"""
  filename

  """column name"""
  full_remote_path

  """column name"""
  host

  """column name"""
  id

  """column name"""
  is_download_from_agent

  """column name"""
  is_payload

  """column name"""
  is_screenshot

  """column name"""
  md5

  """column name"""
  mythictree_id

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  path

  """column name"""
  sha1

  """column name"""
  size

  """column name"""
  task_id

  """column name"""
  timestamp

  """column name"""
  total_chunks
}

"""
select "filemeta_aggregate_bool_exp_bool_and_arguments_columns" columns of table "filemeta"
"""
enum filemeta_select_column_filemeta_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  complete

  """column name"""
  delete_after_fetch

  """column name"""
  deleted

  """column name"""
  is_download_from_agent

  """column name"""
  is_payload

  """column name"""
  is_screenshot
}

"""
select "filemeta_aggregate_bool_exp_bool_or_arguments_columns" columns of table "filemeta"
"""
enum filemeta_select_column_filemeta_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  complete

  """column name"""
  delete_after_fetch

  """column name"""
  deleted

  """column name"""
  is_download_from_agent

  """column name"""
  is_payload

  """column name"""
  is_screenshot
}

"""
input type for updating data in table "filemeta"
"""
input filemeta_set_input {
  comment: String
  deleted: Boolean
  filename: bytea
}

"""aggregate stddev on columns"""
type filemeta_stddev_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by stddev() on columns of table "filemeta"
"""
input filemeta_stddev_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

"""aggregate stddev_pop on columns"""
type filemeta_stddev_pop_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by stddev_pop() on columns of table "filemeta"
"""
input filemeta_stddev_pop_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

"""aggregate stddev_samp on columns"""
type filemeta_stddev_samp_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by stddev_samp() on columns of table "filemeta"
"""
input filemeta_stddev_samp_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

"""
Streaming cursor of the table "filemeta"
"""
input filemeta_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: filemeta_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input filemeta_stream_cursor_value_input {
  agent_file_id: String
  apitokens_id: Int
  chunk_size: Int
  chunks_received: Int
  comment: String
  complete: Boolean
  delete_after_fetch: Boolean
  deleted: Boolean
  eventgroup_id: Int
  eventstepinstance_id: Int
  filename: bytea
  full_remote_path: bytea
  host: String
  id: Int
  is_download_from_agent: Boolean
  is_payload: Boolean
  is_screenshot: Boolean
  md5: String
  mythictree_id: Int
  operation_id: Int
  operator_id: Int
  path: String
  sha1: String
  size: Int
  task_id: Int
  timestamp: timestamp
  total_chunks: Int
}

"""aggregate sum on columns"""
type filemeta_sum_fields {
  apitokens_id: Int
  chunk_size: Int
  chunks_received: Int
  eventgroup_id: Int
  eventstepinstance_id: Int
  id: Int
  mythictree_id: Int
  operation_id: Int
  operator_id: Int
  size: Int
  task_id: Int
  total_chunks: Int
}

"""
order by sum() on columns of table "filemeta"
"""
input filemeta_sum_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

input filemeta_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: filemeta_set_input

  """filter the rows which have to be updated"""
  where: filemeta_bool_exp!
}

"""aggregate var_pop on columns"""
type filemeta_var_pop_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by var_pop() on columns of table "filemeta"
"""
input filemeta_var_pop_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

"""aggregate var_samp on columns"""
type filemeta_var_samp_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by var_samp() on columns of table "filemeta"
"""
input filemeta_var_samp_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

"""aggregate variance on columns"""
type filemeta_variance_fields {
  apitokens_id: Float
  chunk_size: Float
  chunks_received: Float
  eventgroup_id: Float
  eventstepinstance_id: Float
  id: Float
  mythictree_id: Float
  operation_id: Float
  operator_id: Float
  size: Float
  task_id: Float
  total_chunks: Float
}

"""
order by variance() on columns of table "filemeta"
"""
input filemeta_variance_order_by {
  apitokens_id: order_by
  chunk_size: order_by
  chunks_received: order_by
  eventgroup_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  mythictree_id: order_by
  operation_id: order_by
  operator_id: order_by
  size: order_by
  task_id: order_by
  total_chunks: order_by
}

type generateReportOutput {
  error: String
  status: String!
}

type getOperatorSecretsOutput {
  error: String
  operator_id: Int
  secrets: jsonb
  status: String!
}

type globalSettingsOutput {
  settings: jsonb!
}

type importCallbackConfigOutput {
  error: String
  status: String!
}

type importTagtypesOutput {
  error: String
  status: String!
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""
columns and relationships of "keylog"
"""
type keylog {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  id: Int!
  keystrokes: bytea!

  """utf8 version of keylogs"""
  keystrokes_text: String

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task!
  task_id: Int!
  timestamp: timestamp!
  user: String!
  window: String!
}

"""
aggregated selection of "keylog"
"""
type keylog_aggregate {
  aggregate: keylog_aggregate_fields
  nodes: [keylog!]!
}

input keylog_aggregate_bool_exp {
  count: keylog_aggregate_bool_exp_count
}

input keylog_aggregate_bool_exp_count {
  arguments: [keylog_select_column!]
  distinct: Boolean
  filter: keylog_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "keylog"
"""
type keylog_aggregate_fields {
  avg: keylog_avg_fields
  count(columns: [keylog_select_column!], distinct: Boolean): Int!
  max: keylog_max_fields
  min: keylog_min_fields
  stddev: keylog_stddev_fields
  stddev_pop: keylog_stddev_pop_fields
  stddev_samp: keylog_stddev_samp_fields
  sum: keylog_sum_fields
  var_pop: keylog_var_pop_fields
  var_samp: keylog_var_samp_fields
  variance: keylog_variance_fields
}

"""
order by aggregate values of table "keylog"
"""
input keylog_aggregate_order_by {
  avg: keylog_avg_order_by
  count: order_by
  max: keylog_max_order_by
  min: keylog_min_order_by
  stddev: keylog_stddev_order_by
  stddev_pop: keylog_stddev_pop_order_by
  stddev_samp: keylog_stddev_samp_order_by
  sum: keylog_sum_order_by
  var_pop: keylog_var_pop_order_by
  var_samp: keylog_var_samp_order_by
  variance: keylog_variance_order_by
}

"""aggregate avg on columns"""
type keylog_avg_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by avg() on columns of table "keylog"
"""
input keylog_avg_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "keylog". All fields are combined with a logical 'AND'.
"""
input keylog_bool_exp {
  _and: [keylog_bool_exp!]
  _not: keylog_bool_exp
  _or: [keylog_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  id: Int_comparison_exp
  keystrokes: bytea_comparison_exp
  keystrokes_text: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  user: String_comparison_exp
  window: String_comparison_exp
}

"""aggregate max on columns"""
type keylog_max_fields {
  apitokens_id: Int
  id: Int

  """utf8 version of keylogs"""
  keystrokes_text: String
  operation_id: Int
  task_id: Int
  timestamp: timestamp
  user: String
  window: String
}

"""
order by max() on columns of table "keylog"
"""
input keylog_max_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
  timestamp: order_by
  user: order_by
  window: order_by
}

"""aggregate min on columns"""
type keylog_min_fields {
  apitokens_id: Int
  id: Int

  """utf8 version of keylogs"""
  keystrokes_text: String
  operation_id: Int
  task_id: Int
  timestamp: timestamp
  user: String
  window: String
}

"""
order by min() on columns of table "keylog"
"""
input keylog_min_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
  timestamp: order_by
  user: order_by
  window: order_by
}

"""Ordering options when selecting data from "keylog"."""
input keylog_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  id: order_by
  keystrokes: order_by
  keystrokes_text: order_by
  operation: operation_order_by
  operation_id: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
  user: order_by
  window: order_by
}

"""
select columns of table "keylog"
"""
enum keylog_select_column {
  """column name"""
  apitokens_id

  """column name"""
  id

  """column name"""
  keystrokes

  """column name"""
  operation_id

  """column name"""
  task_id

  """column name"""
  timestamp

  """column name"""
  user

  """column name"""
  window
}

"""aggregate stddev on columns"""
type keylog_stddev_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev() on columns of table "keylog"
"""
input keylog_stddev_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate stddev_pop on columns"""
type keylog_stddev_pop_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev_pop() on columns of table "keylog"
"""
input keylog_stddev_pop_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate stddev_samp on columns"""
type keylog_stddev_samp_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev_samp() on columns of table "keylog"
"""
input keylog_stddev_samp_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "keylog"
"""
input keylog_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: keylog_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input keylog_stream_cursor_value_input {
  apitokens_id: Int
  id: Int
  keystrokes: bytea
  operation_id: Int
  task_id: Int
  timestamp: timestamp
  user: String
  window: String
}

"""aggregate sum on columns"""
type keylog_sum_fields {
  apitokens_id: Int
  id: Int
  operation_id: Int
  task_id: Int
}

"""
order by sum() on columns of table "keylog"
"""
input keylog_sum_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate var_pop on columns"""
type keylog_var_pop_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by var_pop() on columns of table "keylog"
"""
input keylog_var_pop_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate var_samp on columns"""
type keylog_var_samp_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by var_samp() on columns of table "keylog"
"""
input keylog_var_samp_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate variance on columns"""
type keylog_variance_fields {
  apitokens_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by variance() on columns of table "keylog"
"""
input keylog_variance_order_by {
  apitokens_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
columns and relationships of "loadedcommands"
"""
type loadedcommands {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int

  """An object relationship"""
  callback: callback!
  callback_id: Int!

  """An object relationship"""
  command: command!
  command_id: Int!
  id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  timestamp: timestamp!
  version: Int!
}

"""
order by aggregate values of table "loadedcommands"
"""
input loadedcommands_aggregate_order_by {
  avg: loadedcommands_avg_order_by
  count: order_by
  max: loadedcommands_max_order_by
  min: loadedcommands_min_order_by
  stddev: loadedcommands_stddev_order_by
  stddev_pop: loadedcommands_stddev_pop_order_by
  stddev_samp: loadedcommands_stddev_samp_order_by
  sum: loadedcommands_sum_order_by
  var_pop: loadedcommands_var_pop_order_by
  var_samp: loadedcommands_var_samp_order_by
  variance: loadedcommands_variance_order_by
}

"""
order by avg() on columns of table "loadedcommands"
"""
input loadedcommands_avg_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "loadedcommands". All fields are combined with a logical 'AND'.
"""
input loadedcommands_bool_exp {
  _and: [loadedcommands_bool_exp!]
  _not: loadedcommands_bool_exp
  _or: [loadedcommands_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  command: command_bool_exp
  command_id: Int_comparison_exp
  id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "loadedcommands"
"""
enum loadedcommands_constraint {
  """
  unique or primary key constraint on columns "command_id", "callback_id"
  """
  loadedcommands_command_id_callback_id

  """
  unique or primary key constraint on columns "command_id", "callback_id"
  """
  loadedcommands_command_id_callback_id_key

  """
  unique or primary key constraint on columns "id"
  """
  loadedcommands_pkey
}

"""
input type for inserting data into table "loadedcommands"
"""
input loadedcommands_insert_input {
  callback_id: Int
  command_id: Int
}

"""
order by max() on columns of table "loadedcommands"
"""
input loadedcommands_max_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  timestamp: order_by
  version: order_by
}

"""
order by min() on columns of table "loadedcommands"
"""
input loadedcommands_min_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  timestamp: order_by
  version: order_by
}

"""
response of any mutation on the table "loadedcommands"
"""
type loadedcommands_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [loadedcommands!]!
}

"""
on_conflict condition type for table "loadedcommands"
"""
input loadedcommands_on_conflict {
  constraint: loadedcommands_constraint!
  update_columns: [loadedcommands_update_column!]! = []
  where: loadedcommands_bool_exp
}

"""Ordering options when selecting data from "loadedcommands"."""
input loadedcommands_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  callback: callback_order_by
  callback_id: order_by
  command: command_order_by
  command_id: order_by
  id: order_by
  operator: operator_order_by
  operator_id: order_by
  timestamp: order_by
  version: order_by
}

"""
select columns of table "loadedcommands"
"""
enum loadedcommands_select_column {
  """column name"""
  apitokens_id

  """column name"""
  callback_id

  """column name"""
  command_id

  """column name"""
  id

  """column name"""
  operator_id

  """column name"""
  timestamp

  """column name"""
  version
}

"""
order by stddev() on columns of table "loadedcommands"
"""
input loadedcommands_stddev_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
order by stddev_pop() on columns of table "loadedcommands"
"""
input loadedcommands_stddev_pop_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
order by stddev_samp() on columns of table "loadedcommands"
"""
input loadedcommands_stddev_samp_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
Streaming cursor of the table "loadedcommands"
"""
input loadedcommands_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: loadedcommands_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input loadedcommands_stream_cursor_value_input {
  apitokens_id: Int
  callback_id: Int
  command_id: Int
  id: Int
  operator_id: Int
  timestamp: timestamp
  version: Int
}

"""
order by sum() on columns of table "loadedcommands"
"""
input loadedcommands_sum_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
placeholder for update columns of table "loadedcommands" (current role has no relevant permissions)
"""
enum loadedcommands_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
order by var_pop() on columns of table "loadedcommands"
"""
input loadedcommands_var_pop_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
order by var_samp() on columns of table "loadedcommands"
"""
input loadedcommands_var_samp_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

"""
order by variance() on columns of table "loadedcommands"
"""
input loadedcommands_variance_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  id: order_by
  operator_id: order_by
  version: order_by
}

type meHookOutput {
  current_operation: String
  current_operation_id: Int
  error: String
  status: String!
}

"""mutation root"""
type mutation_root {
  addAttackToTask(t_num: String!, task_display_id: Int!): addAttackToTaskOutput
  c2HostFile(c2_id: Int!, file_uuid: String!, host_url: String!): c2HostFileOutput
  callbackgraphedge_add(c2profile: String!, destination_id: Int!, source_id: Int!): CallbackgraphedgeAddOutput
  callbackgraphedge_remove(edge_id: Int!): CallbackgraphedgeRemoveOutput
  consumingServicesTestLog(service_type: String!): consumingServicesTestLogOutput
  consumingServicesTestWebhook(service_type: String!): consumingServicesTestOutput
  createAPIToken(name: String, operator_id: Int, token_type: String!): createAPITokenResponse!
  createCallback(newCallback: newCallbackConfig, payloadUuid: String!): createCallbackOutput
  createCredential(account: String, comment: String, credential: String!, credential_type: String!, realm: String): createCredentialOutput
  createOperation(name: String): createOperationOutput
  createOperationEventLog(level: String!, message: String!, source: String): createOperationEventLogOutput
  createOperator(input: OperatorInput!): OperatorOutput!
  createPayload(payloadDefinition: String!): createPayloadOutput!
  createRandom(format_string: String!): randomOutput
  createTask(callback_id: Int, callback_ids: [Int], command: String!, files: [String], interactive_task_type: Int, is_interactive_task: Boolean, original_params: String, parameter_group_name: String, params: String!, parent_task_id: Int, tasking_location: String, token_id: Int): createTaskOutput
  create_c2_instance(c2_instance: String!, c2profile_id: Int!, instance_name: String!): createc2instanceOutput
  deleteAPIToken(apitokens_id: Int!): deleteAPITokenOutput
  deleteBlockList(name: String!): deleteBlockListOutput
  deleteBlockListEntry(entries: [Int!]!, name: String!): deleteBlockListEntryOutput
  deleteFile(file_id: Int!): deletionOutput

  """delete tagtype and cascade delete all associated tags"""
  deleteTagtype(id: Int!): deleteTagtypeOutput
  deleteTasksAndCallbacks(callbacks: [Int], tasks: [Int]): deleteTasksAndCallbacksOutput

  """
  delete data from the table: "attacktask"
  """
  delete_attacktask(
    """filter the rows which have to be deleted"""
    where: attacktask_bool_exp!
  ): attacktask_mutation_response

  """
  delete single row from the table: "attacktask"
  """
  delete_attacktask_by_pk(id: Int!): attacktask

  """
  delete data from the table: "browserscript"
  """
  delete_browserscript(
    """filter the rows which have to be deleted"""
    where: browserscript_bool_exp!
  ): browserscript_mutation_response

  """
  delete single row from the table: "browserscript"
  """
  delete_browserscript_by_pk(id: Int!): browserscript

  """
  delete data from the table: "browserscriptoperation"
  """
  delete_browserscriptoperation(
    """filter the rows which have to be deleted"""
    where: browserscriptoperation_bool_exp!
  ): browserscriptoperation_mutation_response

  """
  delete single row from the table: "browserscriptoperation"
  """
  delete_browserscriptoperation_by_pk(id: Int!): browserscriptoperation

  """
  delete data from the table: "c2profileparametersinstance"
  """
  delete_c2profileparametersinstance(
    """filter the rows which have to be deleted"""
    where: c2profileparametersinstance_bool_exp!
  ): c2profileparametersinstance_mutation_response

  """
  delete single row from the table: "c2profileparametersinstance"
  """
  delete_c2profileparametersinstance_by_pk(id: Int!): c2profileparametersinstance

  """
  delete data from the table: "disabledcommandsprofile"
  """
  delete_disabledcommandsprofile(
    """filter the rows which have to be deleted"""
    where: disabledcommandsprofile_bool_exp!
  ): disabledcommandsprofile_mutation_response

  """
  delete single row from the table: "disabledcommandsprofile"
  """
  delete_disabledcommandsprofile_by_pk(id: Int!): disabledcommandsprofile

  """
  delete data from the table: "loadedcommands"
  """
  delete_loadedcommands(
    """filter the rows which have to be deleted"""
    where: loadedcommands_bool_exp!
  ): loadedcommands_mutation_response

  """
  delete single row from the table: "loadedcommands"
  """
  delete_loadedcommands_by_pk(id: Int!): loadedcommands

  """
  delete data from the table: "operatoroperation"
  """
  delete_operatoroperation(
    """filter the rows which have to be deleted"""
    where: operatoroperation_bool_exp!
  ): operatoroperation_mutation_response

  """
  delete single row from the table: "operatoroperation"
  """
  delete_operatoroperation_by_pk(id: Int!): operatoroperation

  """
  delete data from the table: "payloadcommand"
  """
  delete_payloadcommand(
    """filter the rows which have to be deleted"""
    where: payloadcommand_bool_exp!
  ): payloadcommand_mutation_response

  """
  delete single row from the table: "payloadcommand"
  """
  delete_payloadcommand_by_pk(id: Int!): payloadcommand

  """
  delete data from the table: "payloadonhost"
  """
  delete_payloadonhost(
    """filter the rows which have to be deleted"""
    where: payloadonhost_bool_exp!
  ): payloadonhost_mutation_response

  """
  delete single row from the table: "payloadonhost"
  """
  delete_payloadonhost_by_pk(id: Int!): payloadonhost

  """
  delete data from the table: "tag"
  """
  delete_tag(
    """filter the rows which have to be deleted"""
    where: tag_bool_exp!
  ): tag_mutation_response

  """
  delete single row from the table: "tag"
  """
  delete_tag_by_pk(id: Int!): tag
  download_bulk(files: [String!]!): BulkDownloadOutput
  dynamic_query_function(callback: Int!, command: String!, parameter_name: String!, payload_type: String!): dynamicQueryOutput
  eventingTriggerCancel(eventgroupinstance_id: Int!): eventingTriggerCancelOutput
  eventingTriggerKeyword(keyword: String!, keywordEnvData: jsonb!): eventingTriggerKeywordOutput
  eventingTriggerManual(eventgroup_id: Int!): eventingTriggerManualOutput
  eventingTriggerRetry(eventgroupinstance_id: Int!): eventingTriggerRetryOutput
  eventingTriggerRunAgain(eventgroupinstance_id: Int!): eventingTriggerRunAgainOutput
  generateReport(excludedHosts: String!, excludedIDs: String!, excludedUsers: String!, includeMITREOverall: Boolean!, includeMITREPerTask: Boolean!, includeOutput: Boolean!, outputFormat: String!): generateReportOutput
  importCallbackConfig(config: jsonb!): importCallbackConfigOutput
  importTagtypes(tagtypes: String!): importTagtypesOutput
  import_c2_instance(c2_instance: jsonb!, c2profile_name: String!, instance_name: String!): createc2instanceOutput

  """
  insert data into the table: "browserscript"
  """
  insert_browserscript(
    """the rows to be inserted"""
    objects: [browserscript_insert_input!]!

    """upsert condition"""
    on_conflict: browserscript_on_conflict
  ): browserscript_mutation_response

  """
  insert a single row into the table: "browserscript"
  """
  insert_browserscript_one(
    """the row to be inserted"""
    object: browserscript_insert_input!

    """upsert condition"""
    on_conflict: browserscript_on_conflict
  ): browserscript

  """
  insert data into the table: "browserscriptoperation"
  """
  insert_browserscriptoperation(
    """the rows to be inserted"""
    objects: [browserscriptoperation_insert_input!]!

    """upsert condition"""
    on_conflict: browserscriptoperation_on_conflict
  ): browserscriptoperation_mutation_response

  """
  insert a single row into the table: "browserscriptoperation"
  """
  insert_browserscriptoperation_one(
    """the row to be inserted"""
    object: browserscriptoperation_insert_input!

    """upsert condition"""
    on_conflict: browserscriptoperation_on_conflict
  ): browserscriptoperation

  """
  insert data into the table: "disabledcommandsprofile"
  """
  insert_disabledcommandsprofile(
    """the rows to be inserted"""
    objects: [disabledcommandsprofile_insert_input!]!

    """upsert condition"""
    on_conflict: disabledcommandsprofile_on_conflict
  ): disabledcommandsprofile_mutation_response

  """
  insert a single row into the table: "disabledcommandsprofile"
  """
  insert_disabledcommandsprofile_one(
    """the row to be inserted"""
    object: disabledcommandsprofile_insert_input!

    """upsert condition"""
    on_conflict: disabledcommandsprofile_on_conflict
  ): disabledcommandsprofile

  """
  insert data into the table: "loadedcommands"
  """
  insert_loadedcommands(
    """the rows to be inserted"""
    objects: [loadedcommands_insert_input!]!

    """upsert condition"""
    on_conflict: loadedcommands_on_conflict
  ): loadedcommands_mutation_response

  """
  insert a single row into the table: "loadedcommands"
  """
  insert_loadedcommands_one(
    """the row to be inserted"""
    object: loadedcommands_insert_input!

    """upsert condition"""
    on_conflict: loadedcommands_on_conflict
  ): loadedcommands

  """
  insert data into the table: "operationeventlog"
  """
  insert_operationeventlog(
    """the rows to be inserted"""
    objects: [operationeventlog_insert_input!]!

    """upsert condition"""
    on_conflict: operationeventlog_on_conflict
  ): operationeventlog_mutation_response

  """
  insert a single row into the table: "operationeventlog"
  """
  insert_operationeventlog_one(
    """the row to be inserted"""
    object: operationeventlog_insert_input!

    """upsert condition"""
    on_conflict: operationeventlog_on_conflict
  ): operationeventlog

  """
  insert data into the table: "payloadcommand"
  """
  insert_payloadcommand(
    """the rows to be inserted"""
    objects: [payloadcommand_insert_input!]!

    """upsert condition"""
    on_conflict: payloadcommand_on_conflict
  ): payloadcommand_mutation_response

  """
  insert a single row into the table: "payloadcommand"
  """
  insert_payloadcommand_one(
    """the row to be inserted"""
    object: payloadcommand_insert_input!

    """upsert condition"""
    on_conflict: payloadcommand_on_conflict
  ): payloadcommand

  """
  insert data into the table: "payloadonhost"
  """
  insert_payloadonhost(
    """the rows to be inserted"""
    objects: [payloadonhost_insert_input!]!

    """upsert condition"""
    on_conflict: payloadonhost_on_conflict
  ): payloadonhost_mutation_response

  """
  insert a single row into the table: "payloadonhost"
  """
  insert_payloadonhost_one(
    """the row to be inserted"""
    object: payloadonhost_insert_input!

    """upsert condition"""
    on_conflict: payloadonhost_on_conflict
  ): payloadonhost

  """
  insert data into the table: "response"
  """
  insert_response(
    """the rows to be inserted"""
    objects: [response_insert_input!]!

    """upsert condition"""
    on_conflict: response_on_conflict
  ): response_mutation_response

  """
  insert a single row into the table: "response"
  """
  insert_response_one(
    """the row to be inserted"""
    object: response_insert_input!

    """upsert condition"""
    on_conflict: response_on_conflict
  ): response

  """
  insert data into the table: "tag"
  """
  insert_tag(
    """the rows to be inserted"""
    objects: [tag_insert_input!]!

    """upsert condition"""
    on_conflict: tag_on_conflict
  ): tag_mutation_response

  """
  insert a single row into the table: "tag"
  """
  insert_tag_one(
    """the row to be inserted"""
    object: tag_insert_input!

    """upsert condition"""
    on_conflict: tag_on_conflict
  ): tag

  """
  insert data into the table: "tagtype"
  """
  insert_tagtype(
    """the rows to be inserted"""
    objects: [tagtype_insert_input!]!

    """upsert condition"""
    on_conflict: tagtype_on_conflict
  ): tagtype_mutation_response

  """
  insert a single row into the table: "tagtype"
  """
  insert_tagtype_one(
    """the row to be inserted"""
    object: tagtype_insert_input!

    """upsert condition"""
    on_conflict: tagtype_on_conflict
  ): tagtype

  """
  insert data into the table: "taskartifact"
  """
  insert_taskartifact(
    """the rows to be inserted"""
    objects: [taskartifact_insert_input!]!

    """upsert condition"""
    on_conflict: taskartifact_on_conflict
  ): taskartifact_mutation_response

  """
  insert a single row into the table: "taskartifact"
  """
  insert_taskartifact_one(
    """the row to be inserted"""
    object: taskartifact_insert_input!

    """upsert condition"""
    on_conflict: taskartifact_on_conflict
  ): taskartifact
  previewFile(file_id: String!): previewFileOutput
  rebuild_payload(uuid: String!): rebuildOutput
  reissue_task(task_id: Int!): ReissueTaskOutput
  reissue_task_handler(task_id: Int!): ReissueTaskHandlerOutput
  removeContainerFile(filename: String!, id: Int!): removeContainerFileOutput
  requestOpsecBypass(task_id: Int!): BypassOutput
  sendExternalWebhook(webhook_data: jsonb!, webhook_type: String!): sendExternalWebhookOutput
  startStopProfile(action: String, id: Int!): startStopOutput
  toggleProxy(action: String!, callbackport_id: Int!): toggleProxyOutput
  typedarray_parse_function(callback: Int!, command: String!, input_array: [String!]!, parameter_name: String!, payload_type: String!): typedarrayParseOutput
  updateCallback(input: updateCallbackInput!): updateCallbackOutput
  updateCurrentOperation(operation_id: Int!, user_id: Int!): updateCurrentOperationOutput
  updateEventGroupApproval(approved: Boolean!, eventgroupapproval_id: Int!): updateEventGroupApprovalOutput
  updateGlobalSettings(settings: jsonb!): updateGlobalSettingsOutput
  updateOperation(admin_id: Int, channel: String, complete: Boolean, deleted: Boolean, name: String, operation_id: Int!, webhook: String): updateOperationOutput
  updateOperatorOperation(add_users: [Int], disabled_command_map: [disabledCommand], operation_id: Int!, remove_users: [Int], view_mode_operators: [Int], view_mode_spectators: [Int]): updateOperatorOperationOutput
  updateOperatorSecrets(operator_id: Int, secrets: jsonb!): updateOperatorSecretsOutput
  updateOperatorStatus(active: Boolean, admin: Boolean, deleted: Boolean, operator_id: Int!): updateOperatorStatusOutput
  updatePassword(new_password: String!, old_password: String, user_id: Int!): passwordUpdateOutput

  """
  update data of the table: "apitokens"
  """
  update_apitokens(
    """sets the columns of the filtered rows to the given values"""
    _set: apitokens_set_input

    """filter the rows which have to be updated"""
    where: apitokens_bool_exp!
  ): apitokens_mutation_response

  """
  update single row of the table: "apitokens"
  """
  update_apitokens_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: apitokens_set_input
    pk_columns: apitokens_pk_columns_input!
  ): apitokens

  """
  update multiples rows of table: "apitokens"
  """
  update_apitokens_many(
    """updates to execute, in order"""
    updates: [apitokens_updates!]!
  ): [apitokens_mutation_response]

  """
  update data of the table: "browserscript"
  """
  update_browserscript(
    """increments the numeric columns with given value of the filtered values"""
    _inc: browserscript_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: browserscript_set_input

    """filter the rows which have to be updated"""
    where: browserscript_bool_exp!
  ): browserscript_mutation_response

  """
  update single row of the table: "browserscript"
  """
  update_browserscript_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: browserscript_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: browserscript_set_input
    pk_columns: browserscript_pk_columns_input!
  ): browserscript

  """
  update multiples rows of table: "browserscript"
  """
  update_browserscript_many(
    """updates to execute, in order"""
    updates: [browserscript_updates!]!
  ): [browserscript_mutation_response]

  """
  update data of the table: "c2profile"
  """
  update_c2profile(
    """sets the columns of the filtered rows to the given values"""
    _set: c2profile_set_input

    """filter the rows which have to be updated"""
    where: c2profile_bool_exp!
  ): c2profile_mutation_response

  """
  update single row of the table: "c2profile"
  """
  update_c2profile_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: c2profile_set_input
    pk_columns: c2profile_pk_columns_input!
  ): c2profile

  """
  update multiples rows of table: "c2profile"
  """
  update_c2profile_many(
    """updates to execute, in order"""
    updates: [c2profile_updates!]!
  ): [c2profile_mutation_response]

  """
  update data of the table: "c2profileparametersinstance"
  """
  update_c2profileparametersinstance(
    """sets the columns of the filtered rows to the given values"""
    _set: c2profileparametersinstance_set_input

    """filter the rows which have to be updated"""
    where: c2profileparametersinstance_bool_exp!
  ): c2profileparametersinstance_mutation_response

  """
  update single row of the table: "c2profileparametersinstance"
  """
  update_c2profileparametersinstance_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: c2profileparametersinstance_set_input
    pk_columns: c2profileparametersinstance_pk_columns_input!
  ): c2profileparametersinstance

  """
  update multiples rows of table: "c2profileparametersinstance"
  """
  update_c2profileparametersinstance_many(
    """updates to execute, in order"""
    updates: [c2profileparametersinstance_updates!]!
  ): [c2profileparametersinstance_mutation_response]

  """
  update data of the table: "callback"
  """
  update_callback(
    """increments the numeric columns with given value of the filtered values"""
    _inc: callback_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: callback_set_input

    """filter the rows which have to be updated"""
    where: callback_bool_exp!
  ): callback_mutation_response

  """
  update single row of the table: "callback"
  """
  update_callback_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: callback_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: callback_set_input
    pk_columns: callback_pk_columns_input!
  ): callback

  """
  update multiples rows of table: "callback"
  """
  update_callback_many(
    """updates to execute, in order"""
    updates: [callback_updates!]!
  ): [callback_mutation_response]

  """
  update data of the table: "callbacktoken"
  """
  update_callbacktoken(
    """sets the columns of the filtered rows to the given values"""
    _set: callbacktoken_set_input

    """filter the rows which have to be updated"""
    where: callbacktoken_bool_exp!
  ): callbacktoken_mutation_response

  """
  update single row of the table: "callbacktoken"
  """
  update_callbacktoken_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: callbacktoken_set_input
    pk_columns: callbacktoken_pk_columns_input!
  ): callbacktoken

  """
  update multiples rows of table: "callbacktoken"
  """
  update_callbacktoken_many(
    """updates to execute, in order"""
    updates: [callbacktoken_updates!]!
  ): [callbacktoken_mutation_response]

  """
  update data of the table: "consuming_container"
  """
  update_consuming_container(
    """sets the columns of the filtered rows to the given values"""
    _set: consuming_container_set_input

    """filter the rows which have to be updated"""
    where: consuming_container_bool_exp!
  ): consuming_container_mutation_response

  """
  update single row of the table: "consuming_container"
  """
  update_consuming_container_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: consuming_container_set_input
    pk_columns: consuming_container_pk_columns_input!
  ): consuming_container

  """
  update multiples rows of table: "consuming_container"
  """
  update_consuming_container_many(
    """updates to execute, in order"""
    updates: [consuming_container_updates!]!
  ): [consuming_container_mutation_response]

  """
  update data of the table: "credential"
  """
  update_credential(
    """sets the columns of the filtered rows to the given values"""
    _set: credential_set_input

    """filter the rows which have to be updated"""
    where: credential_bool_exp!
  ): credential_mutation_response

  """
  update single row of the table: "credential"
  """
  update_credential_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: credential_set_input
    pk_columns: credential_pk_columns_input!
  ): credential

  """
  update multiples rows of table: "credential"
  """
  update_credential_many(
    """updates to execute, in order"""
    updates: [credential_updates!]!
  ): [credential_mutation_response]

  """
  update data of the table: "eventgroup"
  """
  update_eventgroup(
    """sets the columns of the filtered rows to the given values"""
    _set: eventgroup_set_input

    """filter the rows which have to be updated"""
    where: eventgroup_bool_exp!
  ): eventgroup_mutation_response

  """
  update single row of the table: "eventgroup"
  """
  update_eventgroup_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: eventgroup_set_input
    pk_columns: eventgroup_pk_columns_input!
  ): eventgroup

  """
  update multiples rows of table: "eventgroup"
  """
  update_eventgroup_many(
    """updates to execute, in order"""
    updates: [eventgroup_updates!]!
  ): [eventgroup_mutation_response]

  """
  update data of the table: "filemeta"
  """
  update_filemeta(
    """sets the columns of the filtered rows to the given values"""
    _set: filemeta_set_input

    """filter the rows which have to be updated"""
    where: filemeta_bool_exp!
  ): filemeta_mutation_response

  """
  update single row of the table: "filemeta"
  """
  update_filemeta_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: filemeta_set_input
    pk_columns: filemeta_pk_columns_input!
  ): filemeta

  """
  update multiples rows of table: "filemeta"
  """
  update_filemeta_many(
    """updates to execute, in order"""
    updates: [filemeta_updates!]!
  ): [filemeta_mutation_response]

  """
  update data of the table: "mythictree"
  """
  update_mythictree(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: mythictree_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: mythictree_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: mythictree_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: mythictree_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: mythictree_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: mythictree_set_input

    """filter the rows which have to be updated"""
    where: mythictree_bool_exp!
  ): mythictree_mutation_response

  """
  update single row of the table: "mythictree"
  """
  update_mythictree_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: mythictree_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: mythictree_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: mythictree_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: mythictree_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: mythictree_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: mythictree_set_input
    pk_columns: mythictree_pk_columns_input!
  ): mythictree

  """
  update multiples rows of table: "mythictree"
  """
  update_mythictree_many(
    """updates to execute, in order"""
    updates: [mythictree_updates!]!
  ): [mythictree_mutation_response]

  """
  update data of the table: "operationeventlog"
  """
  update_operationeventlog(
    """sets the columns of the filtered rows to the given values"""
    _set: operationeventlog_set_input

    """filter the rows which have to be updated"""
    where: operationeventlog_bool_exp!
  ): operationeventlog_mutation_response

  """
  update single row of the table: "operationeventlog"
  """
  update_operationeventlog_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: operationeventlog_set_input
    pk_columns: operationeventlog_pk_columns_input!
  ): operationeventlog

  """
  update multiples rows of table: "operationeventlog"
  """
  update_operationeventlog_many(
    """updates to execute, in order"""
    updates: [operationeventlog_updates!]!
  ): [operationeventlog_mutation_response]

  """
  update data of the table: "operator"
  """
  update_operator(
    """sets the columns of the filtered rows to the given values"""
    _set: operator_set_input

    """filter the rows which have to be updated"""
    where: operator_bool_exp!
  ): operator_mutation_response

  """
  update single row of the table: "operator"
  """
  update_operator_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: operator_set_input
    pk_columns: operator_pk_columns_input!
  ): operator

  """
  update multiples rows of table: "operator"
  """
  update_operator_many(
    """updates to execute, in order"""
    updates: [operator_updates!]!
  ): [operator_mutation_response]

  """
  update data of the table: "payload"
  """
  update_payload(
    """sets the columns of the filtered rows to the given values"""
    _set: payload_set_input

    """filter the rows which have to be updated"""
    where: payload_bool_exp!
  ): payload_mutation_response

  """
  update single row of the table: "payload"
  """
  update_payload_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: payload_set_input
    pk_columns: payload_pk_columns_input!
  ): payload

  """
  update multiples rows of table: "payload"
  """
  update_payload_many(
    """updates to execute, in order"""
    updates: [payload_updates!]!
  ): [payload_mutation_response]

  """
  update data of the table: "payloadonhost"
  """
  update_payloadonhost(
    """sets the columns of the filtered rows to the given values"""
    _set: payloadonhost_set_input

    """filter the rows which have to be updated"""
    where: payloadonhost_bool_exp!
  ): payloadonhost_mutation_response

  """
  update single row of the table: "payloadonhost"
  """
  update_payloadonhost_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: payloadonhost_set_input
    pk_columns: payloadonhost_pk_columns_input!
  ): payloadonhost

  """
  update multiples rows of table: "payloadonhost"
  """
  update_payloadonhost_many(
    """updates to execute, in order"""
    updates: [payloadonhost_updates!]!
  ): [payloadonhost_mutation_response]

  """
  update data of the table: "payloadtype"
  """
  update_payloadtype(
    """sets the columns of the filtered rows to the given values"""
    _set: payloadtype_set_input

    """filter the rows which have to be updated"""
    where: payloadtype_bool_exp!
  ): payloadtype_mutation_response

  """
  update single row of the table: "payloadtype"
  """
  update_payloadtype_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: payloadtype_set_input
    pk_columns: payloadtype_pk_columns_input!
  ): payloadtype

  """
  update multiples rows of table: "payloadtype"
  """
  update_payloadtype_many(
    """updates to execute, in order"""
    updates: [payloadtype_updates!]!
  ): [payloadtype_mutation_response]

  """
  update data of the table: "response"
  """
  update_response(
    """sets the columns of the filtered rows to the given values"""
    _set: response_set_input

    """filter the rows which have to be updated"""
    where: response_bool_exp!
  ): response_mutation_response

  """
  update single row of the table: "response"
  """
  update_response_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: response_set_input
    pk_columns: response_pk_columns_input!
  ): response

  """
  update multiples rows of table: "response"
  """
  update_response_many(
    """updates to execute, in order"""
    updates: [response_updates!]!
  ): [response_mutation_response]

  """
  update data of the table: "tag"
  """
  update_tag(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: tag_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: tag_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: tag_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: tag_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: tag_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: tag_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: tag_set_input

    """filter the rows which have to be updated"""
    where: tag_bool_exp!
  ): tag_mutation_response

  """
  update single row of the table: "tag"
  """
  update_tag_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: tag_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: tag_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: tag_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: tag_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: tag_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: tag_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: tag_set_input
    pk_columns: tag_pk_columns_input!
  ): tag

  """
  update multiples rows of table: "tag"
  """
  update_tag_many(
    """updates to execute, in order"""
    updates: [tag_updates!]!
  ): [tag_mutation_response]

  """
  update data of the table: "tagtype"
  """
  update_tagtype(
    """sets the columns of the filtered rows to the given values"""
    _set: tagtype_set_input

    """filter the rows which have to be updated"""
    where: tagtype_bool_exp!
  ): tagtype_mutation_response

  """
  update single row of the table: "tagtype"
  """
  update_tagtype_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: tagtype_set_input
    pk_columns: tagtype_pk_columns_input!
  ): tagtype

  """
  update multiples rows of table: "tagtype"
  """
  update_tagtype_many(
    """updates to execute, in order"""
    updates: [tagtype_updates!]!
  ): [tagtype_mutation_response]

  """
  update data of the table: "task"
  """
  update_task(
    """sets the columns of the filtered rows to the given values"""
    _set: task_set_input

    """filter the rows which have to be updated"""
    where: task_bool_exp!
  ): task_mutation_response

  """
  update single row of the table: "task"
  """
  update_task_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: task_set_input
    pk_columns: task_pk_columns_input!
  ): task

  """
  update multiples rows of table: "task"
  """
  update_task_many(
    """updates to execute, in order"""
    updates: [task_updates!]!
  ): [task_mutation_response]

  """
  update data of the table: "taskartifact"
  """
  update_taskartifact(
    """sets the columns of the filtered rows to the given values"""
    _set: taskartifact_set_input

    """filter the rows which have to be updated"""
    where: taskartifact_bool_exp!
  ): taskartifact_mutation_response

  """
  update single row of the table: "taskartifact"
  """
  update_taskartifact_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: taskartifact_set_input
    pk_columns: taskartifact_pk_columns_input!
  ): taskartifact

  """
  update multiples rows of table: "taskartifact"
  """
  update_taskartifact_many(
    """updates to execute, in order"""
    updates: [taskartifact_updates!]!
  ): [taskartifact_mutation_response]

  """
  update data of the table: "token"
  """
  update_token(
    """increments the numeric columns with given value of the filtered values"""
    _inc: token_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: token_set_input

    """filter the rows which have to be updated"""
    where: token_bool_exp!
  ): token_mutation_response

  """
  update single row of the table: "token"
  """
  update_token_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: token_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: token_set_input
    pk_columns: token_pk_columns_input!
  ): token

  """
  update multiples rows of table: "token"
  """
  update_token_many(
    """updates to execute, in order"""
    updates: [token_updates!]!
  ): [token_mutation_response]

  """
  update data of the table: "translationcontainer"
  """
  update_translationcontainer(
    """sets the columns of the filtered rows to the given values"""
    _set: translationcontainer_set_input

    """filter the rows which have to be updated"""
    where: translationcontainer_bool_exp!
  ): translationcontainer_mutation_response

  """
  update single row of the table: "translationcontainer"
  """
  update_translationcontainer_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: translationcontainer_set_input
    pk_columns: translationcontainer_pk_columns_input!
  ): translationcontainer

  """
  update multiples rows of table: "translationcontainer"
  """
  update_translationcontainer_many(
    """updates to execute, in order"""
    updates: [translationcontainer_updates!]!
  ): [translationcontainer_mutation_response]
  uploadContainerFile(data: String!, file_path: String!, id: Int!): uploadContainerOutput
}

"""
columns and relationships of "mythictree"
"""
type mythictree {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int

  """An object relationship"""
  callback: callback
  callback_id: Int
  can_have_children: Boolean!
  comment: String!
  deleted: Boolean!

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  full_path: bytea!

  """
  A computed field, executes function "mythictree_full_path"
  """
  full_path_text: String
  host: String!
  id: Int!
  metadata(
    """JSON select path"""
    path: String
  ): jsonb!
  name: bytea!

  """
  A computed field, executes function "mythictree_name"
  """
  name_text: String

  """An object relationship"""
  operation: operation!
  operation_id: Int!
  os: String!
  parent_path: bytea!

  """
  A computed field, executes function "mythictree_parent_path"
  """
  parent_path_text: String
  success: Boolean

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task!
  task_id: Int!
  timestamp: timestamp!
  tree_type: String!
}

"""
aggregated selection of "mythictree"
"""
type mythictree_aggregate {
  aggregate: mythictree_aggregate_fields
  nodes: [mythictree!]!
}

input mythictree_aggregate_bool_exp {
  bool_and: mythictree_aggregate_bool_exp_bool_and
  bool_or: mythictree_aggregate_bool_exp_bool_or
  count: mythictree_aggregate_bool_exp_count
}

input mythictree_aggregate_bool_exp_bool_and {
  arguments: mythictree_select_column_mythictree_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: mythictree_bool_exp
  predicate: Boolean_comparison_exp!
}

input mythictree_aggregate_bool_exp_bool_or {
  arguments: mythictree_select_column_mythictree_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: mythictree_bool_exp
  predicate: Boolean_comparison_exp!
}

input mythictree_aggregate_bool_exp_count {
  arguments: [mythictree_select_column!]
  distinct: Boolean
  filter: mythictree_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "mythictree"
"""
type mythictree_aggregate_fields {
  avg: mythictree_avg_fields
  count(columns: [mythictree_select_column!], distinct: Boolean): Int!
  max: mythictree_max_fields
  min: mythictree_min_fields
  stddev: mythictree_stddev_fields
  stddev_pop: mythictree_stddev_pop_fields
  stddev_samp: mythictree_stddev_samp_fields
  sum: mythictree_sum_fields
  var_pop: mythictree_var_pop_fields
  var_samp: mythictree_var_samp_fields
  variance: mythictree_variance_fields
}

"""
order by aggregate values of table "mythictree"
"""
input mythictree_aggregate_order_by {
  avg: mythictree_avg_order_by
  count: order_by
  max: mythictree_max_order_by
  min: mythictree_min_order_by
  stddev: mythictree_stddev_order_by
  stddev_pop: mythictree_stddev_pop_order_by
  stddev_samp: mythictree_stddev_samp_order_by
  sum: mythictree_sum_order_by
  var_pop: mythictree_var_pop_order_by
  var_samp: mythictree_var_samp_order_by
  variance: mythictree_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input mythictree_append_input {
  metadata: jsonb
}

"""aggregate avg on columns"""
type mythictree_avg_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by avg() on columns of table "mythictree"
"""
input mythictree_avg_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "mythictree". All fields are combined with a logical 'AND'.
"""
input mythictree_bool_exp {
  _and: [mythictree_bool_exp!]
  _not: mythictree_bool_exp
  _or: [mythictree_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  can_have_children: Boolean_comparison_exp
  comment: String_comparison_exp
  deleted: Boolean_comparison_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  full_path: bytea_comparison_exp
  full_path_text: String_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  metadata: jsonb_comparison_exp
  name: bytea_comparison_exp
  name_text: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  os: String_comparison_exp
  parent_path: bytea_comparison_exp
  parent_path_text: String_comparison_exp
  success: Boolean_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  tree_type: String_comparison_exp
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input mythictree_delete_at_path_input {
  metadata: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input mythictree_delete_elem_input {
  metadata: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input mythictree_delete_key_input {
  metadata: String
}

"""aggregate max on columns"""
type mythictree_max_fields {
  apitokens_id: Int
  callback_id: Int
  comment: String

  """
  A computed field, executes function "mythictree_full_path"
  """
  full_path_text: String
  host: String
  id: Int

  """
  A computed field, executes function "mythictree_name"
  """
  name_text: String
  operation_id: Int
  os: String

  """
  A computed field, executes function "mythictree_parent_path"
  """
  parent_path_text: String
  task_id: Int
  timestamp: timestamp
  tree_type: String
}

"""
order by max() on columns of table "mythictree"
"""
input mythictree_max_order_by {
  apitokens_id: order_by
  callback_id: order_by
  comment: order_by
  host: order_by
  id: order_by
  operation_id: order_by
  os: order_by
  task_id: order_by
  timestamp: order_by
  tree_type: order_by
}

"""aggregate min on columns"""
type mythictree_min_fields {
  apitokens_id: Int
  callback_id: Int
  comment: String

  """
  A computed field, executes function "mythictree_full_path"
  """
  full_path_text: String
  host: String
  id: Int

  """
  A computed field, executes function "mythictree_name"
  """
  name_text: String
  operation_id: Int
  os: String

  """
  A computed field, executes function "mythictree_parent_path"
  """
  parent_path_text: String
  task_id: Int
  timestamp: timestamp
  tree_type: String
}

"""
order by min() on columns of table "mythictree"
"""
input mythictree_min_order_by {
  apitokens_id: order_by
  callback_id: order_by
  comment: order_by
  host: order_by
  id: order_by
  operation_id: order_by
  os: order_by
  task_id: order_by
  timestamp: order_by
  tree_type: order_by
}

"""
response of any mutation on the table "mythictree"
"""
type mythictree_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [mythictree!]!
}

"""Ordering options when selecting data from "mythictree"."""
input mythictree_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  callback: callback_order_by
  callback_id: order_by
  can_have_children: order_by
  comment: order_by
  deleted: order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  full_path: order_by
  full_path_text: order_by
  host: order_by
  id: order_by
  metadata: order_by
  name: order_by
  name_text: order_by
  operation: operation_order_by
  operation_id: order_by
  os: order_by
  parent_path: order_by
  parent_path_text: order_by
  success: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
  tree_type: order_by
}

"""primary key columns input for table: mythictree"""
input mythictree_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input mythictree_prepend_input {
  metadata: jsonb
}

"""
select columns of table "mythictree"
"""
enum mythictree_select_column {
  """column name"""
  apitokens_id

  """column name"""
  callback_id

  """column name"""
  can_have_children

  """column name"""
  comment

  """column name"""
  deleted

  """column name"""
  full_path

  """column name"""
  host

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  name

  """column name"""
  operation_id

  """column name"""
  os

  """column name"""
  parent_path

  """column name"""
  success

  """column name"""
  task_id

  """column name"""
  timestamp

  """column name"""
  tree_type
}

"""
select "mythictree_aggregate_bool_exp_bool_and_arguments_columns" columns of table "mythictree"
"""
enum mythictree_select_column_mythictree_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  can_have_children

  """column name"""
  deleted

  """column name"""
  success
}

"""
select "mythictree_aggregate_bool_exp_bool_or_arguments_columns" columns of table "mythictree"
"""
enum mythictree_select_column_mythictree_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  can_have_children

  """column name"""
  deleted

  """column name"""
  success
}

"""
input type for updating data in table "mythictree"
"""
input mythictree_set_input {
  can_have_children: Boolean
  comment: String
  deleted: Boolean
  full_path: bytea
  host: String
  metadata: jsonb
  name: bytea
  os: String
  parent_path: bytea
  success: Boolean
  tree_type: String
}

"""aggregate stddev on columns"""
type mythictree_stddev_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev() on columns of table "mythictree"
"""
input mythictree_stddev_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate stddev_pop on columns"""
type mythictree_stddev_pop_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev_pop() on columns of table "mythictree"
"""
input mythictree_stddev_pop_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate stddev_samp on columns"""
type mythictree_stddev_samp_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev_samp() on columns of table "mythictree"
"""
input mythictree_stddev_samp_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "mythictree"
"""
input mythictree_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: mythictree_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input mythictree_stream_cursor_value_input {
  apitokens_id: Int
  callback_id: Int
  can_have_children: Boolean
  comment: String
  deleted: Boolean
  full_path: bytea
  host: String
  id: Int
  metadata: jsonb
  name: bytea
  operation_id: Int
  os: String
  parent_path: bytea
  success: Boolean
  task_id: Int
  timestamp: timestamp
  tree_type: String
}

"""aggregate sum on columns"""
type mythictree_sum_fields {
  apitokens_id: Int
  callback_id: Int
  id: Int
  operation_id: Int
  task_id: Int
}

"""
order by sum() on columns of table "mythictree"
"""
input mythictree_sum_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

input mythictree_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: mythictree_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: mythictree_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: mythictree_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: mythictree_delete_key_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: mythictree_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: mythictree_set_input

  """filter the rows which have to be updated"""
  where: mythictree_bool_exp!
}

"""aggregate var_pop on columns"""
type mythictree_var_pop_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by var_pop() on columns of table "mythictree"
"""
input mythictree_var_pop_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate var_samp on columns"""
type mythictree_var_samp_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by var_samp() on columns of table "mythictree"
"""
input mythictree_var_samp_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate variance on columns"""
type mythictree_variance_fields {
  apitokens_id: Float
  callback_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by variance() on columns of table "mythictree"
"""
input mythictree_variance_order_by {
  apitokens_id: order_by
  callback_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

input newCallbackConfig {
  description: String
  domain: String
  externalIp: String
  extraInfo: String
  host: String
  ip: String
  processName: String
  sleepInfo: String
  user: String
}

"""
columns and relationships of "operation"
"""
type operation {
  """An object relationship"""
  admin: operator!
  admin_id: Int!
  alert_count: Int!

  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int

  """An array relationship"""
  browserscriptoperations(
    """distinct select on columns"""
    distinct_on: [browserscriptoperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscriptoperation_order_by!]

    """filter the rows returned"""
    where: browserscriptoperation_bool_exp
  ): [browserscriptoperation!]!

  """An array relationship"""
  c2profileparametersinstances(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!

  """An array relationship"""
  callbackgraphedges(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """An aggregate relationship"""
  callbackgraphedges_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): callbackgraphedge_aggregate!

  """An array relationship"""
  callbackports(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): [callbackport!]!

  """An aggregate relationship"""
  callbackports_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): callbackport_aggregate!

  """An array relationship"""
  callbacks(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """An aggregate relationship"""
  callbacks_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!
  channel: String!
  complete: Boolean!

  """An array relationship"""
  credentials(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """An aggregate relationship"""
  credentials_aggregate(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): credential_aggregate!
  deleted: Boolean!

  """An array relationship"""
  disabledcommandsprofiles(
    """distinct select on columns"""
    distinct_on: [disabledcommandsprofile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [disabledcommandsprofile_order_by!]

    """filter the rows returned"""
    where: disabledcommandsprofile_bool_exp
  ): [disabledcommandsprofile!]!

  """An array relationship"""
  eventgroupapprovals(
    """distinct select on columns"""
    distinct_on: [eventgroupapproval_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupapproval_order_by!]

    """filter the rows returned"""
    where: eventgroupapproval_bool_exp
  ): [eventgroupapproval!]!

  """An array relationship"""
  eventgroupinstances(
    """distinct select on columns"""
    distinct_on: [eventgroupinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupinstance_order_by!]

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """An array relationship"""
  eventgroups(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): [eventgroup!]!

  """An aggregate relationship"""
  eventgroups_aggregate(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): eventgroup_aggregate!

  """An array relationship"""
  eventstepinstances(
    """distinct select on columns"""
    distinct_on: [eventstepinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstepinstance_order_by!]

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!

  """An array relationship"""
  eventsteps(
    """distinct select on columns"""
    distinct_on: [eventstep_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstep_order_by!]

    """filter the rows returned"""
    where: eventstep_bool_exp
  ): [eventstep!]!

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  id: Int!

  """An array relationship"""
  keylogs(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): [keylog!]!

  """An aggregate relationship"""
  keylogs_aggregate(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): keylog_aggregate!

  """An array relationship"""
  mythictrees(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """An aggregate relationship"""
  mythictrees_aggregate(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): mythictree_aggregate!
  name: String!

  """An array relationship"""
  operationeventlogs(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): [operationeventlog!]!

  """An aggregate relationship"""
  operationeventlogs_aggregate(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): operationeventlog_aggregate!

  """An array relationship"""
  operatoroperations(
    """distinct select on columns"""
    distinct_on: [operatoroperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operatoroperation_order_by!]

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!

  """An array relationship"""
  operators(
    """distinct select on columns"""
    distinct_on: [operator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operator_order_by!]

    """filter the rows returned"""
    where: operator_bool_exp
  ): [operator!]!

  """An array relationship"""
  payloadonhosts(
    """distinct select on columns"""
    distinct_on: [payloadonhost_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadonhost_order_by!]

    """filter the rows returned"""
    where: payloadonhost_bool_exp
  ): [payloadonhost!]!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """An array relationship"""
  responses(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """An aggregate relationship"""
  responses_aggregate(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): response_aggregate!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An array relationship"""
  tagtypes(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): [tagtype!]!

  """An aggregate relationship"""
  tagtypes_aggregate(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): tagtype_aggregate!

  """An array relationship"""
  taskartifacts(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """An aggregate relationship"""
  taskartifacts_aggregate(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): taskartifact_aggregate!
  updated_at: timestamp!
  webhook: String!
}

"""
order by aggregate values of table "operation"
"""
input operation_aggregate_order_by {
  avg: operation_avg_order_by
  count: order_by
  max: operation_max_order_by
  min: operation_min_order_by
  stddev: operation_stddev_order_by
  stddev_pop: operation_stddev_pop_order_by
  stddev_samp: operation_stddev_samp_order_by
  sum: operation_sum_order_by
  var_pop: operation_var_pop_order_by
  var_samp: operation_var_samp_order_by
  variance: operation_variance_order_by
}

"""
order by avg() on columns of table "operation"
"""
input operation_avg_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "operation". All fields are combined with a logical 'AND'.
"""
input operation_bool_exp {
  _and: [operation_bool_exp!]
  _not: operation_bool_exp
  _or: [operation_bool_exp!]
  admin: operator_bool_exp
  admin_id: Int_comparison_exp
  alert_count: Int_comparison_exp
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  browserscriptoperations: browserscriptoperation_bool_exp
  c2profileparametersinstances: c2profileparametersinstance_bool_exp
  callbackgraphedges: callbackgraphedge_bool_exp
  callbackgraphedges_aggregate: callbackgraphedge_aggregate_bool_exp
  callbackports: callbackport_bool_exp
  callbackports_aggregate: callbackport_aggregate_bool_exp
  callbacks: callback_bool_exp
  callbacks_aggregate: callback_aggregate_bool_exp
  channel: String_comparison_exp
  complete: Boolean_comparison_exp
  credentials: credential_bool_exp
  credentials_aggregate: credential_aggregate_bool_exp
  deleted: Boolean_comparison_exp
  disabledcommandsprofiles: disabledcommandsprofile_bool_exp
  eventgroupapprovals: eventgroupapproval_bool_exp
  eventgroupinstances: eventgroupinstance_bool_exp
  eventgroups: eventgroup_bool_exp
  eventgroups_aggregate: eventgroup_aggregate_bool_exp
  eventstepinstances: eventstepinstance_bool_exp
  eventsteps: eventstep_bool_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  id: Int_comparison_exp
  keylogs: keylog_bool_exp
  keylogs_aggregate: keylog_aggregate_bool_exp
  mythictrees: mythictree_bool_exp
  mythictrees_aggregate: mythictree_aggregate_bool_exp
  name: String_comparison_exp
  operationeventlogs: operationeventlog_bool_exp
  operationeventlogs_aggregate: operationeventlog_aggregate_bool_exp
  operatoroperations: operatoroperation_bool_exp
  operators: operator_bool_exp
  payloadonhosts: payloadonhost_bool_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  responses: response_bool_exp
  responses_aggregate: response_aggregate_bool_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  tagtypes: tagtype_bool_exp
  tagtypes_aggregate: tagtype_aggregate_bool_exp
  taskartifacts: taskartifact_bool_exp
  taskartifacts_aggregate: taskartifact_aggregate_bool_exp
  updated_at: timestamp_comparison_exp
  webhook: String_comparison_exp
}

"""
order by max() on columns of table "operation"
"""
input operation_max_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  channel: order_by
  id: order_by
  name: order_by
  updated_at: order_by
  webhook: order_by
}

"""
order by min() on columns of table "operation"
"""
input operation_min_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  channel: order_by
  id: order_by
  name: order_by
  updated_at: order_by
  webhook: order_by
}

"""Ordering options when selecting data from "operation"."""
input operation_order_by {
  admin: operator_order_by
  admin_id: order_by
  alert_count: order_by
  apitoken: apitokens_order_by
  apitokens_id: order_by
  browserscriptoperations_aggregate: browserscriptoperation_aggregate_order_by
  c2profileparametersinstances_aggregate: c2profileparametersinstance_aggregate_order_by
  callbackgraphedges_aggregate: callbackgraphedge_aggregate_order_by
  callbackports_aggregate: callbackport_aggregate_order_by
  callbacks_aggregate: callback_aggregate_order_by
  channel: order_by
  complete: order_by
  credentials_aggregate: credential_aggregate_order_by
  deleted: order_by
  disabledcommandsprofiles_aggregate: disabledcommandsprofile_aggregate_order_by
  eventgroupapprovals_aggregate: eventgroupapproval_aggregate_order_by
  eventgroupinstances_aggregate: eventgroupinstance_aggregate_order_by
  eventgroups_aggregate: eventgroup_aggregate_order_by
  eventstepinstances_aggregate: eventstepinstance_aggregate_order_by
  eventsteps_aggregate: eventstep_aggregate_order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  id: order_by
  keylogs_aggregate: keylog_aggregate_order_by
  mythictrees_aggregate: mythictree_aggregate_order_by
  name: order_by
  operationeventlogs_aggregate: operationeventlog_aggregate_order_by
  operatoroperations_aggregate: operatoroperation_aggregate_order_by
  operators_aggregate: operator_aggregate_order_by
  payloadonhosts_aggregate: payloadonhost_aggregate_order_by
  payloads_aggregate: payload_aggregate_order_by
  responses_aggregate: response_aggregate_order_by
  tags_aggregate: tag_aggregate_order_by
  tagtypes_aggregate: tagtype_aggregate_order_by
  taskartifacts_aggregate: taskartifact_aggregate_order_by
  updated_at: order_by
  webhook: order_by
}

"""
select columns of table "operation"
"""
enum operation_select_column {
  """column name"""
  admin_id

  """column name"""
  alert_count

  """column name"""
  apitokens_id

  """column name"""
  channel

  """column name"""
  complete

  """column name"""
  deleted

  """column name"""
  id

  """column name"""
  name

  """column name"""
  updated_at

  """column name"""
  webhook
}

"""
order by stddev() on columns of table "operation"
"""
input operation_stddev_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "operation"
"""
input operation_stddev_pop_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "operation"
"""
input operation_stddev_samp_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
Streaming cursor of the table "operation"
"""
input operation_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: operation_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input operation_stream_cursor_value_input {
  admin_id: Int
  alert_count: Int
  apitokens_id: Int
  channel: String
  complete: Boolean
  deleted: Boolean
  id: Int
  name: String
  updated_at: timestamp
  webhook: String
}

"""
order by sum() on columns of table "operation"
"""
input operation_sum_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
order by var_pop() on columns of table "operation"
"""
input operation_var_pop_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "operation"
"""
input operation_var_samp_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
order by variance() on columns of table "operation"
"""
input operation_variance_order_by {
  admin_id: order_by
  alert_count: order_by
  apitokens_id: order_by
  id: order_by
}

"""
columns and relationships of "operationeventlog"
"""
type operationeventlog {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  count: Int!
  deleted: Boolean!
  id: Int!
  level: String!
  message: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator
  operator_id: Int
  resolved: Boolean!
  source: String!
  timestamp: timestamp!
}

"""
aggregated selection of "operationeventlog"
"""
type operationeventlog_aggregate {
  aggregate: operationeventlog_aggregate_fields
  nodes: [operationeventlog!]!
}

input operationeventlog_aggregate_bool_exp {
  bool_and: operationeventlog_aggregate_bool_exp_bool_and
  bool_or: operationeventlog_aggregate_bool_exp_bool_or
  count: operationeventlog_aggregate_bool_exp_count
}

input operationeventlog_aggregate_bool_exp_bool_and {
  arguments: operationeventlog_select_column_operationeventlog_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: operationeventlog_bool_exp
  predicate: Boolean_comparison_exp!
}

input operationeventlog_aggregate_bool_exp_bool_or {
  arguments: operationeventlog_select_column_operationeventlog_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: operationeventlog_bool_exp
  predicate: Boolean_comparison_exp!
}

input operationeventlog_aggregate_bool_exp_count {
  arguments: [operationeventlog_select_column!]
  distinct: Boolean
  filter: operationeventlog_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "operationeventlog"
"""
type operationeventlog_aggregate_fields {
  avg: operationeventlog_avg_fields
  count(columns: [operationeventlog_select_column!], distinct: Boolean): Int!
  max: operationeventlog_max_fields
  min: operationeventlog_min_fields
  stddev: operationeventlog_stddev_fields
  stddev_pop: operationeventlog_stddev_pop_fields
  stddev_samp: operationeventlog_stddev_samp_fields
  sum: operationeventlog_sum_fields
  var_pop: operationeventlog_var_pop_fields
  var_samp: operationeventlog_var_samp_fields
  variance: operationeventlog_variance_fields
}

"""
order by aggregate values of table "operationeventlog"
"""
input operationeventlog_aggregate_order_by {
  avg: operationeventlog_avg_order_by
  count: order_by
  max: operationeventlog_max_order_by
  min: operationeventlog_min_order_by
  stddev: operationeventlog_stddev_order_by
  stddev_pop: operationeventlog_stddev_pop_order_by
  stddev_samp: operationeventlog_stddev_samp_order_by
  sum: operationeventlog_sum_order_by
  var_pop: operationeventlog_var_pop_order_by
  var_samp: operationeventlog_var_samp_order_by
  variance: operationeventlog_variance_order_by
}

"""aggregate avg on columns"""
type operationeventlog_avg_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by avg() on columns of table "operationeventlog"
"""
input operationeventlog_avg_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
Boolean expression to filter rows from the table "operationeventlog". All fields are combined with a logical 'AND'.
"""
input operationeventlog_bool_exp {
  _and: [operationeventlog_bool_exp!]
  _not: operationeventlog_bool_exp
  _or: [operationeventlog_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  count: Int_comparison_exp
  deleted: Boolean_comparison_exp
  id: Int_comparison_exp
  level: String_comparison_exp
  message: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  resolved: Boolean_comparison_exp
  source: String_comparison_exp
  timestamp: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "operationeventlog"
"""
enum operationeventlog_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  operationeventlog_pkey
}

"""
input type for inserting data into table "operationeventlog"
"""
input operationeventlog_insert_input {
  apitokens_id: Int
  deleted: Boolean
  level: String
  message: String
  resolved: Boolean
  source: String
}

"""aggregate max on columns"""
type operationeventlog_max_fields {
  apitokens_id: Int
  count: Int
  id: Int
  level: String
  message: String
  operation_id: Int
  operator_id: Int
  source: String
  timestamp: timestamp
}

"""
order by max() on columns of table "operationeventlog"
"""
input operationeventlog_max_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  level: order_by
  message: order_by
  operation_id: order_by
  operator_id: order_by
  source: order_by
  timestamp: order_by
}

"""aggregate min on columns"""
type operationeventlog_min_fields {
  apitokens_id: Int
  count: Int
  id: Int
  level: String
  message: String
  operation_id: Int
  operator_id: Int
  source: String
  timestamp: timestamp
}

"""
order by min() on columns of table "operationeventlog"
"""
input operationeventlog_min_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  level: order_by
  message: order_by
  operation_id: order_by
  operator_id: order_by
  source: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "operationeventlog"
"""
type operationeventlog_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [operationeventlog!]!
}

"""
on_conflict condition type for table "operationeventlog"
"""
input operationeventlog_on_conflict {
  constraint: operationeventlog_constraint!
  update_columns: [operationeventlog_update_column!]! = []
  where: operationeventlog_bool_exp
}

"""Ordering options when selecting data from "operationeventlog"."""
input operationeventlog_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  count: order_by
  deleted: order_by
  id: order_by
  level: order_by
  message: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  resolved: order_by
  source: order_by
  timestamp: order_by
}

"""primary key columns input for table: operationeventlog"""
input operationeventlog_pk_columns_input {
  id: Int!
}

"""
select columns of table "operationeventlog"
"""
enum operationeventlog_select_column {
  """column name"""
  apitokens_id

  """column name"""
  count

  """column name"""
  deleted

  """column name"""
  id

  """column name"""
  level

  """column name"""
  message

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  resolved

  """column name"""
  source

  """column name"""
  timestamp
}

"""
select "operationeventlog_aggregate_bool_exp_bool_and_arguments_columns" columns of table "operationeventlog"
"""
enum operationeventlog_select_column_operationeventlog_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  deleted

  """column name"""
  resolved
}

"""
select "operationeventlog_aggregate_bool_exp_bool_or_arguments_columns" columns of table "operationeventlog"
"""
enum operationeventlog_select_column_operationeventlog_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  deleted

  """column name"""
  resolved
}

"""
input type for updating data in table "operationeventlog"
"""
input operationeventlog_set_input {
  deleted: Boolean
  level: String
  resolved: Boolean
}

"""aggregate stddev on columns"""
type operationeventlog_stddev_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by stddev() on columns of table "operationeventlog"
"""
input operationeventlog_stddev_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""aggregate stddev_pop on columns"""
type operationeventlog_stddev_pop_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by stddev_pop() on columns of table "operationeventlog"
"""
input operationeventlog_stddev_pop_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""aggregate stddev_samp on columns"""
type operationeventlog_stddev_samp_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by stddev_samp() on columns of table "operationeventlog"
"""
input operationeventlog_stddev_samp_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
Streaming cursor of the table "operationeventlog"
"""
input operationeventlog_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: operationeventlog_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input operationeventlog_stream_cursor_value_input {
  apitokens_id: Int
  count: Int
  deleted: Boolean
  id: Int
  level: String
  message: String
  operation_id: Int
  operator_id: Int
  resolved: Boolean
  source: String
  timestamp: timestamp
}

"""aggregate sum on columns"""
type operationeventlog_sum_fields {
  apitokens_id: Int
  count: Int
  id: Int
  operation_id: Int
  operator_id: Int
}

"""
order by sum() on columns of table "operationeventlog"
"""
input operationeventlog_sum_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
update columns of table "operationeventlog"
"""
enum operationeventlog_update_column {
  """column name"""
  deleted

  """column name"""
  level

  """column name"""
  resolved
}

input operationeventlog_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: operationeventlog_set_input

  """filter the rows which have to be updated"""
  where: operationeventlog_bool_exp!
}

"""aggregate var_pop on columns"""
type operationeventlog_var_pop_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by var_pop() on columns of table "operationeventlog"
"""
input operationeventlog_var_pop_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""aggregate var_samp on columns"""
type operationeventlog_var_samp_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by var_samp() on columns of table "operationeventlog"
"""
input operationeventlog_var_samp_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""aggregate variance on columns"""
type operationeventlog_variance_fields {
  apitokens_id: Float
  count: Float
  id: Float
  operation_id: Float
  operator_id: Float
}

"""
order by variance() on columns of table "operationeventlog"
"""
input operationeventlog_variance_order_by {
  apitokens_id: order_by
  count: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
columns and relationships of "operator"
"""
type operator {
  account_type: String!
  active: Boolean!
  admin: Boolean!

  """An object relationship"""
  apitoken: apitokens

  """An array relationship"""
  apitokens(
    """distinct select on columns"""
    distinct_on: [apitokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [apitokens_order_by!]

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!

  """An array relationship"""
  apitokensByCreatedBy(
    """distinct select on columns"""
    distinct_on: [apitokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [apitokens_order_by!]

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!
  apitokens_id: Int

  """An array relationship"""
  browserscripts(
    """distinct select on columns"""
    distinct_on: [browserscript_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscript_order_by!]

    """filter the rows returned"""
    where: browserscript_bool_exp
  ): [browserscript!]!

  """An array relationship"""
  callbacks(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """An array relationship"""
  callbacksByLockedOperatorId(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """An aggregate relationship"""
  callbacksByLockedOperatorId_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!

  """An aggregate relationship"""
  callbacks_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!
  creation_time: timestamp!

  """An array relationship"""
  credentials(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """An aggregate relationship"""
  credentials_aggregate(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): credential_aggregate!
  current_operation_id: Int
  deleted: Boolean!

  """An array relationship"""
  eventgroupapprovals(
    """distinct select on columns"""
    distinct_on: [eventgroupapproval_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupapproval_order_by!]

    """filter the rows returned"""
    where: eventgroupapproval_bool_exp
  ): [eventgroupapproval!]!

  """An array relationship"""
  eventgroupinstances(
    """distinct select on columns"""
    distinct_on: [eventgroupinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupinstance_order_by!]

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """An array relationship"""
  eventgroupinstancesByCancelledBy(
    """distinct select on columns"""
    distinct_on: [eventgroupinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupinstance_order_by!]

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """An array relationship"""
  eventgroups(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): [eventgroup!]!

  """An aggregate relationship"""
  eventgroups_aggregate(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): eventgroup_aggregate!

  """An array relationship"""
  eventstepinstances(
    """distinct select on columns"""
    distinct_on: [eventstepinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstepinstance_order_by!]

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!

  """An array relationship"""
  eventsteps(
    """distinct select on columns"""
    distinct_on: [eventstep_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstep_order_by!]

    """filter the rows returned"""
    where: eventstep_bool_exp
  ): [eventstep!]!
  failed_login_count: Int!

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  id: Int!
  last_failed_login_timestamp: timestamp
  last_login: timestamp

  """An array relationship"""
  loadedcommands(
    """distinct select on columns"""
    distinct_on: [loadedcommands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [loadedcommands_order_by!]

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!

  """An object relationship"""
  operation: operation

  """An array relationship"""
  operationeventlogs(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): [operationeventlog!]!

  """An aggregate relationship"""
  operationeventlogs_aggregate(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): operationeventlog_aggregate!

  """An array relationship"""
  operations(
    """distinct select on columns"""
    distinct_on: [operation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operation_order_by!]

    """filter the rows returned"""
    where: operation_bool_exp
  ): [operation!]!

  """An array relationship"""
  operatoroperations(
    """distinct select on columns"""
    distinct_on: [operatoroperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operatoroperation_order_by!]

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An array relationship"""
  tasksByCommentOperatorId(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasksByCommentOperatorId_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!

  """An array relationship"""
  tasksByOpsecPostBypassUserId(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasksByOpsecPostBypassUserId_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!

  """An array relationship"""
  tasksByOpsecPreBypassUserId(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasksByOpsecPreBypassUserId_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  username: String!
  view_utc_time: Boolean!
}

"""
order by aggregate values of table "operator"
"""
input operator_aggregate_order_by {
  avg: operator_avg_order_by
  count: order_by
  max: operator_max_order_by
  min: operator_min_order_by
  stddev: operator_stddev_order_by
  stddev_pop: operator_stddev_pop_order_by
  stddev_samp: operator_stddev_samp_order_by
  sum: operator_sum_order_by
  var_pop: operator_var_pop_order_by
  var_samp: operator_var_samp_order_by
  variance: operator_variance_order_by
}

"""
order by avg() on columns of table "operator"
"""
input operator_avg_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "operator". All fields are combined with a logical 'AND'.
"""
input operator_bool_exp {
  _and: [operator_bool_exp!]
  _not: operator_bool_exp
  _or: [operator_bool_exp!]
  account_type: String_comparison_exp
  active: Boolean_comparison_exp
  admin: Boolean_comparison_exp
  apitoken: apitokens_bool_exp
  apitokens: apitokens_bool_exp
  apitokensByCreatedBy: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  browserscripts: browserscript_bool_exp
  callbacks: callback_bool_exp
  callbacksByLockedOperatorId: callback_bool_exp
  callbacksByLockedOperatorId_aggregate: callback_aggregate_bool_exp
  callbacks_aggregate: callback_aggregate_bool_exp
  creation_time: timestamp_comparison_exp
  credentials: credential_bool_exp
  credentials_aggregate: credential_aggregate_bool_exp
  current_operation_id: Int_comparison_exp
  deleted: Boolean_comparison_exp
  eventgroupapprovals: eventgroupapproval_bool_exp
  eventgroupinstances: eventgroupinstance_bool_exp
  eventgroupinstancesByCancelledBy: eventgroupinstance_bool_exp
  eventgroups: eventgroup_bool_exp
  eventgroups_aggregate: eventgroup_aggregate_bool_exp
  eventstepinstances: eventstepinstance_bool_exp
  eventsteps: eventstep_bool_exp
  failed_login_count: Int_comparison_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  id: Int_comparison_exp
  last_failed_login_timestamp: timestamp_comparison_exp
  last_login: timestamp_comparison_exp
  loadedcommands: loadedcommands_bool_exp
  operation: operation_bool_exp
  operationeventlogs: operationeventlog_bool_exp
  operationeventlogs_aggregate: operationeventlog_aggregate_bool_exp
  operations: operation_bool_exp
  operatoroperations: operatoroperation_bool_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  tasks: task_bool_exp
  tasksByCommentOperatorId: task_bool_exp
  tasksByCommentOperatorId_aggregate: task_aggregate_bool_exp
  tasksByOpsecPostBypassUserId: task_bool_exp
  tasksByOpsecPostBypassUserId_aggregate: task_aggregate_bool_exp
  tasksByOpsecPreBypassUserId: task_bool_exp
  tasksByOpsecPreBypassUserId_aggregate: task_aggregate_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  username: String_comparison_exp
  view_utc_time: Boolean_comparison_exp
}

"""
order by max() on columns of table "operator"
"""
input operator_max_order_by {
  account_type: order_by
  apitokens_id: order_by
  creation_time: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
  last_failed_login_timestamp: order_by
  last_login: order_by
  username: order_by
}

"""
order by min() on columns of table "operator"
"""
input operator_min_order_by {
  account_type: order_by
  apitokens_id: order_by
  creation_time: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
  last_failed_login_timestamp: order_by
  last_login: order_by
  username: order_by
}

"""
response of any mutation on the table "operator"
"""
type operator_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [operator!]!
}

"""Ordering options when selecting data from "operator"."""
input operator_order_by {
  account_type: order_by
  active: order_by
  admin: order_by
  apitoken: apitokens_order_by
  apitokensByCreatedBy_aggregate: apitokens_aggregate_order_by
  apitokens_aggregate: apitokens_aggregate_order_by
  apitokens_id: order_by
  browserscripts_aggregate: browserscript_aggregate_order_by
  callbacksByLockedOperatorId_aggregate: callback_aggregate_order_by
  callbacks_aggregate: callback_aggregate_order_by
  creation_time: order_by
  credentials_aggregate: credential_aggregate_order_by
  current_operation_id: order_by
  deleted: order_by
  eventgroupapprovals_aggregate: eventgroupapproval_aggregate_order_by
  eventgroupinstancesByCancelledBy_aggregate: eventgroupinstance_aggregate_order_by
  eventgroupinstances_aggregate: eventgroupinstance_aggregate_order_by
  eventgroups_aggregate: eventgroup_aggregate_order_by
  eventstepinstances_aggregate: eventstepinstance_aggregate_order_by
  eventsteps_aggregate: eventstep_aggregate_order_by
  failed_login_count: order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  id: order_by
  last_failed_login_timestamp: order_by
  last_login: order_by
  loadedcommands_aggregate: loadedcommands_aggregate_order_by
  operation: operation_order_by
  operationeventlogs_aggregate: operationeventlog_aggregate_order_by
  operations_aggregate: operation_aggregate_order_by
  operatoroperations_aggregate: operatoroperation_aggregate_order_by
  payloads_aggregate: payload_aggregate_order_by
  tasksByCommentOperatorId_aggregate: task_aggregate_order_by
  tasksByOpsecPostBypassUserId_aggregate: task_aggregate_order_by
  tasksByOpsecPreBypassUserId_aggregate: task_aggregate_order_by
  tasks_aggregate: task_aggregate_order_by
  username: order_by
  view_utc_time: order_by
}

"""primary key columns input for table: operator"""
input operator_pk_columns_input {
  id: Int!
}

"""
select columns of table "operator"
"""
enum operator_select_column {
  """column name"""
  account_type

  """column name"""
  active

  """column name"""
  admin

  """column name"""
  apitokens_id

  """column name"""
  creation_time

  """column name"""
  current_operation_id

  """column name"""
  deleted

  """column name"""
  failed_login_count

  """column name"""
  id

  """column name"""
  last_failed_login_timestamp

  """column name"""
  last_login

  """column name"""
  username

  """column name"""
  view_utc_time
}

"""
input type for updating data in table "operator"
"""
input operator_set_input {
  active: Boolean
  admin: Boolean
  deleted: Boolean
  username: String
  view_utc_time: Boolean
}

"""
order by stddev() on columns of table "operator"
"""
input operator_stddev_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "operator"
"""
input operator_stddev_pop_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "operator"
"""
input operator_stddev_samp_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
Streaming cursor of the table "operator"
"""
input operator_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: operator_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input operator_stream_cursor_value_input {
  account_type: String
  active: Boolean
  admin: Boolean
  apitokens_id: Int
  creation_time: timestamp
  current_operation_id: Int
  deleted: Boolean
  failed_login_count: Int
  id: Int
  last_failed_login_timestamp: timestamp
  last_login: timestamp
  username: String
  view_utc_time: Boolean
}

"""
order by sum() on columns of table "operator"
"""
input operator_sum_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

input operator_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: operator_set_input

  """filter the rows which have to be updated"""
  where: operator_bool_exp!
}

"""
order by var_pop() on columns of table "operator"
"""
input operator_var_pop_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "operator"
"""
input operator_var_samp_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
order by variance() on columns of table "operator"
"""
input operator_variance_order_by {
  apitokens_id: order_by
  current_operation_id: order_by
  failed_login_count: order_by
  id: order_by
}

"""
columns and relationships of "operatoroperation"
"""
type operatoroperation {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  base_disabled_commands_id: Int

  """An object relationship"""
  disabledcommandsprofile: disabledcommandsprofile
  id: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  timestamp: timestamp!
  view_mode: String!
}

"""
order by aggregate values of table "operatoroperation"
"""
input operatoroperation_aggregate_order_by {
  avg: operatoroperation_avg_order_by
  count: order_by
  max: operatoroperation_max_order_by
  min: operatoroperation_min_order_by
  stddev: operatoroperation_stddev_order_by
  stddev_pop: operatoroperation_stddev_pop_order_by
  stddev_samp: operatoroperation_stddev_samp_order_by
  sum: operatoroperation_sum_order_by
  var_pop: operatoroperation_var_pop_order_by
  var_samp: operatoroperation_var_samp_order_by
  variance: operatoroperation_variance_order_by
}

"""
order by avg() on columns of table "operatoroperation"
"""
input operatoroperation_avg_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
Boolean expression to filter rows from the table "operatoroperation". All fields are combined with a logical 'AND'.
"""
input operatoroperation_bool_exp {
  _and: [operatoroperation_bool_exp!]
  _not: operatoroperation_bool_exp
  _or: [operatoroperation_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  base_disabled_commands_id: Int_comparison_exp
  disabledcommandsprofile: disabledcommandsprofile_bool_exp
  id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  view_mode: String_comparison_exp
}

"""
order by max() on columns of table "operatoroperation"
"""
input operatoroperation_max_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  timestamp: order_by
  view_mode: order_by
}

"""
order by min() on columns of table "operatoroperation"
"""
input operatoroperation_min_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  timestamp: order_by
  view_mode: order_by
}

"""
response of any mutation on the table "operatoroperation"
"""
type operatoroperation_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [operatoroperation!]!
}

"""Ordering options when selecting data from "operatoroperation"."""
input operatoroperation_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  disabledcommandsprofile: disabledcommandsprofile_order_by
  id: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  timestamp: order_by
  view_mode: order_by
}

"""
select columns of table "operatoroperation"
"""
enum operatoroperation_select_column {
  """column name"""
  apitokens_id

  """column name"""
  base_disabled_commands_id

  """column name"""
  id

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  timestamp

  """column name"""
  view_mode
}

"""
order by stddev() on columns of table "operatoroperation"
"""
input operatoroperation_stddev_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by stddev_pop() on columns of table "operatoroperation"
"""
input operatoroperation_stddev_pop_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by stddev_samp() on columns of table "operatoroperation"
"""
input operatoroperation_stddev_samp_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
Streaming cursor of the table "operatoroperation"
"""
input operatoroperation_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: operatoroperation_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input operatoroperation_stream_cursor_value_input {
  apitokens_id: Int
  base_disabled_commands_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  timestamp: timestamp
  view_mode: String
}

"""
order by sum() on columns of table "operatoroperation"
"""
input operatoroperation_sum_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by var_pop() on columns of table "operatoroperation"
"""
input operatoroperation_var_pop_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by var_samp() on columns of table "operatoroperation"
"""
input operatoroperation_var_samp_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""
order by variance() on columns of table "operatoroperation"
"""
input operatoroperation_variance_order_by {
  apitokens_id: order_by
  base_disabled_commands_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type passwordUpdateOutput {
  error: String
  status: String!
}

"""
columns and relationships of "payload"
"""
type payload {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  auto_generated: Boolean!
  build_container: String!
  build_message: String!
  build_phase: String!
  build_stderr: String!
  build_stdout: String!

  """An array relationship"""
  buildparameterinstances(
    """distinct select on columns"""
    distinct_on: [buildparameterinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameterinstance_order_by!]

    """filter the rows returned"""
    where: buildparameterinstance_bool_exp
  ): [buildparameterinstance!]!

  """An array relationship"""
  c2profileparametersinstances(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!
  callback_alert: Boolean!

  """An array relationship"""
  callbacks(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """An aggregate relationship"""
  callbacks_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!
  creation_time: timestamp!
  deleted: Boolean!
  description: String!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  file_id: Int

  """An object relationship"""
  filemetum: filemeta
  id: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  os: String!

  """An object relationship"""
  payload: payload

  """An array relationship"""
  payload_build_steps(
    """distinct select on columns"""
    distinct_on: [payload_build_step_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_build_step_order_by!]

    """filter the rows returned"""
    where: payload_build_step_bool_exp
  ): [payload_build_step!]!
  payload_type_id: Int!

  """An array relationship"""
  payloadc2profiles(
    """distinct select on columns"""
    distinct_on: [payloadc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadc2profiles_order_by!]

    """filter the rows returned"""
    where: payloadc2profiles_bool_exp
  ): [payloadc2profiles!]!

  """An array relationship"""
  payloadcommands(
    """distinct select on columns"""
    distinct_on: [payloadcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadcommand_order_by!]

    """filter the rows returned"""
    where: payloadcommand_bool_exp
  ): [payloadcommand!]!

  """An array relationship"""
  payloadonhosts(
    """distinct select on columns"""
    distinct_on: [payloadonhost_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadonhost_order_by!]

    """filter the rows returned"""
    where: payloadonhost_bool_exp
  ): [payloadonhost!]!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """An object relationship"""
  payloadtype: payloadtype!

  """An object relationship"""
  task: task
  task_id: Int
  timestamp: timestamp!
  uuid: String!
  wrapped_payload_id: Int
}

"""
aggregated selection of "payload"
"""
type payload_aggregate {
  aggregate: payload_aggregate_fields
  nodes: [payload!]!
}

input payload_aggregate_bool_exp {
  bool_and: payload_aggregate_bool_exp_bool_and
  bool_or: payload_aggregate_bool_exp_bool_or
  count: payload_aggregate_bool_exp_count
}

input payload_aggregate_bool_exp_bool_and {
  arguments: payload_select_column_payload_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: payload_bool_exp
  predicate: Boolean_comparison_exp!
}

input payload_aggregate_bool_exp_bool_or {
  arguments: payload_select_column_payload_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: payload_bool_exp
  predicate: Boolean_comparison_exp!
}

input payload_aggregate_bool_exp_count {
  arguments: [payload_select_column!]
  distinct: Boolean
  filter: payload_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "payload"
"""
type payload_aggregate_fields {
  avg: payload_avg_fields
  count(columns: [payload_select_column!], distinct: Boolean): Int!
  max: payload_max_fields
  min: payload_min_fields
  stddev: payload_stddev_fields
  stddev_pop: payload_stddev_pop_fields
  stddev_samp: payload_stddev_samp_fields
  sum: payload_sum_fields
  var_pop: payload_var_pop_fields
  var_samp: payload_var_samp_fields
  variance: payload_variance_fields
}

"""
order by aggregate values of table "payload"
"""
input payload_aggregate_order_by {
  avg: payload_avg_order_by
  count: order_by
  max: payload_max_order_by
  min: payload_min_order_by
  stddev: payload_stddev_order_by
  stddev_pop: payload_stddev_pop_order_by
  stddev_samp: payload_stddev_samp_order_by
  sum: payload_sum_order_by
  var_pop: payload_var_pop_order_by
  var_samp: payload_var_samp_order_by
  variance: payload_variance_order_by
}

"""aggregate avg on columns"""
type payload_avg_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by avg() on columns of table "payload"
"""
input payload_avg_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""
Boolean expression to filter rows from the table "payload". All fields are combined with a logical 'AND'.
"""
input payload_bool_exp {
  _and: [payload_bool_exp!]
  _not: payload_bool_exp
  _or: [payload_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  auto_generated: Boolean_comparison_exp
  build_container: String_comparison_exp
  build_message: String_comparison_exp
  build_phase: String_comparison_exp
  build_stderr: String_comparison_exp
  build_stdout: String_comparison_exp
  buildparameterinstances: buildparameterinstance_bool_exp
  c2profileparametersinstances: c2profileparametersinstance_bool_exp
  callback_alert: Boolean_comparison_exp
  callbacks: callback_bool_exp
  callbacks_aggregate: callback_aggregate_bool_exp
  creation_time: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  file_id: Int_comparison_exp
  filemetum: filemeta_bool_exp
  id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  os: String_comparison_exp
  payload: payload_bool_exp
  payload_build_steps: payload_build_step_bool_exp
  payload_type_id: Int_comparison_exp
  payloadc2profiles: payloadc2profiles_bool_exp
  payloadcommands: payloadcommand_bool_exp
  payloadonhosts: payloadonhost_bool_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  payloadtype: payloadtype_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  uuid: String_comparison_exp
  wrapped_payload_id: Int_comparison_exp
}

"""
columns and relationships of "payload_build_step"
"""
type payload_build_step {
  end_time: timestamp
  id: Int!

  """An object relationship"""
  payload: payload
  payload_id: Int

  """An object relationship"""
  payloadtype: payloadtype
  payloadtype_id: Int
  start_time: timestamp
  step_description: String!
  step_name: String!
  step_number: Int!
  step_skip: Boolean!
  step_stderr: String!
  step_stdout: String!
  step_success: Boolean!
}

"""
order by aggregate values of table "payload_build_step"
"""
input payload_build_step_aggregate_order_by {
  avg: payload_build_step_avg_order_by
  count: order_by
  max: payload_build_step_max_order_by
  min: payload_build_step_min_order_by
  stddev: payload_build_step_stddev_order_by
  stddev_pop: payload_build_step_stddev_pop_order_by
  stddev_samp: payload_build_step_stddev_samp_order_by
  sum: payload_build_step_sum_order_by
  var_pop: payload_build_step_var_pop_order_by
  var_samp: payload_build_step_var_samp_order_by
  variance: payload_build_step_variance_order_by
}

"""
order by avg() on columns of table "payload_build_step"
"""
input payload_build_step_avg_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
Boolean expression to filter rows from the table "payload_build_step". All fields are combined with a logical 'AND'.
"""
input payload_build_step_bool_exp {
  _and: [payload_build_step_bool_exp!]
  _not: payload_build_step_bool_exp
  _or: [payload_build_step_bool_exp!]
  end_time: timestamp_comparison_exp
  id: Int_comparison_exp
  payload: payload_bool_exp
  payload_id: Int_comparison_exp
  payloadtype: payloadtype_bool_exp
  payloadtype_id: Int_comparison_exp
  start_time: timestamp_comparison_exp
  step_description: String_comparison_exp
  step_name: String_comparison_exp
  step_number: Int_comparison_exp
  step_skip: Boolean_comparison_exp
  step_stderr: String_comparison_exp
  step_stdout: String_comparison_exp
  step_success: Boolean_comparison_exp
}

"""
order by max() on columns of table "payload_build_step"
"""
input payload_build_step_max_order_by {
  end_time: order_by
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  start_time: order_by
  step_description: order_by
  step_name: order_by
  step_number: order_by
  step_stderr: order_by
  step_stdout: order_by
}

"""
order by min() on columns of table "payload_build_step"
"""
input payload_build_step_min_order_by {
  end_time: order_by
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  start_time: order_by
  step_description: order_by
  step_name: order_by
  step_number: order_by
  step_stderr: order_by
  step_stdout: order_by
}

"""Ordering options when selecting data from "payload_build_step"."""
input payload_build_step_order_by {
  end_time: order_by
  id: order_by
  payload: payload_order_by
  payload_id: order_by
  payloadtype: payloadtype_order_by
  payloadtype_id: order_by
  start_time: order_by
  step_description: order_by
  step_name: order_by
  step_number: order_by
  step_skip: order_by
  step_stderr: order_by
  step_stdout: order_by
  step_success: order_by
}

"""
select columns of table "payload_build_step"
"""
enum payload_build_step_select_column {
  """column name"""
  end_time

  """column name"""
  id

  """column name"""
  payload_id

  """column name"""
  payloadtype_id

  """column name"""
  start_time

  """column name"""
  step_description

  """column name"""
  step_name

  """column name"""
  step_number

  """column name"""
  step_skip

  """column name"""
  step_stderr

  """column name"""
  step_stdout

  """column name"""
  step_success
}

"""
order by stddev() on columns of table "payload_build_step"
"""
input payload_build_step_stddev_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
order by stddev_pop() on columns of table "payload_build_step"
"""
input payload_build_step_stddev_pop_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
order by stddev_samp() on columns of table "payload_build_step"
"""
input payload_build_step_stddev_samp_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
Streaming cursor of the table "payload_build_step"
"""
input payload_build_step_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payload_build_step_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payload_build_step_stream_cursor_value_input {
  end_time: timestamp
  id: Int
  payload_id: Int
  payloadtype_id: Int
  start_time: timestamp
  step_description: String
  step_name: String
  step_number: Int
  step_skip: Boolean
  step_stderr: String
  step_stdout: String
  step_success: Boolean
}

"""
order by sum() on columns of table "payload_build_step"
"""
input payload_build_step_sum_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
order by var_pop() on columns of table "payload_build_step"
"""
input payload_build_step_var_pop_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
order by var_samp() on columns of table "payload_build_step"
"""
input payload_build_step_var_samp_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""
order by variance() on columns of table "payload_build_step"
"""
input payload_build_step_variance_order_by {
  id: order_by
  payload_id: order_by
  payloadtype_id: order_by
  step_number: order_by
}

"""aggregate max on columns"""
type payload_max_fields {
  apitokens_id: Int
  build_container: String
  build_message: String
  build_phase: String
  build_stderr: String
  build_stdout: String
  creation_time: timestamp
  description: String
  eventstepinstance_id: Int
  file_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  os: String
  payload_type_id: Int
  task_id: Int
  timestamp: timestamp
  uuid: String
  wrapped_payload_id: Int
}

"""
order by max() on columns of table "payload"
"""
input payload_max_order_by {
  apitokens_id: order_by
  build_container: order_by
  build_message: order_by
  build_phase: order_by
  build_stderr: order_by
  build_stdout: order_by
  creation_time: order_by
  description: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  os: order_by
  payload_type_id: order_by
  task_id: order_by
  timestamp: order_by
  uuid: order_by
  wrapped_payload_id: order_by
}

"""aggregate min on columns"""
type payload_min_fields {
  apitokens_id: Int
  build_container: String
  build_message: String
  build_phase: String
  build_stderr: String
  build_stdout: String
  creation_time: timestamp
  description: String
  eventstepinstance_id: Int
  file_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  os: String
  payload_type_id: Int
  task_id: Int
  timestamp: timestamp
  uuid: String
  wrapped_payload_id: Int
}

"""
order by min() on columns of table "payload"
"""
input payload_min_order_by {
  apitokens_id: order_by
  build_container: order_by
  build_message: order_by
  build_phase: order_by
  build_stderr: order_by
  build_stdout: order_by
  creation_time: order_by
  description: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  os: order_by
  payload_type_id: order_by
  task_id: order_by
  timestamp: order_by
  uuid: order_by
  wrapped_payload_id: order_by
}

"""
response of any mutation on the table "payload"
"""
type payload_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [payload!]!
}

"""Ordering options when selecting data from "payload"."""
input payload_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  auto_generated: order_by
  build_container: order_by
  build_message: order_by
  build_phase: order_by
  build_stderr: order_by
  build_stdout: order_by
  buildparameterinstances_aggregate: buildparameterinstance_aggregate_order_by
  c2profileparametersinstances_aggregate: c2profileparametersinstance_aggregate_order_by
  callback_alert: order_by
  callbacks_aggregate: callback_aggregate_order_by
  creation_time: order_by
  deleted: order_by
  description: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  file_id: order_by
  filemetum: filemeta_order_by
  id: order_by
  operation: operation_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  os: order_by
  payload: payload_order_by
  payload_build_steps_aggregate: payload_build_step_aggregate_order_by
  payload_type_id: order_by
  payloadc2profiles_aggregate: payloadc2profiles_aggregate_order_by
  payloadcommands_aggregate: payloadcommand_aggregate_order_by
  payloadonhosts_aggregate: payloadonhost_aggregate_order_by
  payloads_aggregate: payload_aggregate_order_by
  payloadtype: payloadtype_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
  uuid: order_by
  wrapped_payload_id: order_by
}

"""primary key columns input for table: payload"""
input payload_pk_columns_input {
  id: Int!
}

"""
select columns of table "payload"
"""
enum payload_select_column {
  """column name"""
  apitokens_id

  """column name"""
  auto_generated

  """column name"""
  build_container

  """column name"""
  build_message

  """column name"""
  build_phase

  """column name"""
  build_stderr

  """column name"""
  build_stdout

  """column name"""
  callback_alert

  """column name"""
  creation_time

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  eventstepinstance_id

  """column name"""
  file_id

  """column name"""
  id

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  os

  """column name"""
  payload_type_id

  """column name"""
  task_id

  """column name"""
  timestamp

  """column name"""
  uuid

  """column name"""
  wrapped_payload_id
}

"""
select "payload_aggregate_bool_exp_bool_and_arguments_columns" columns of table "payload"
"""
enum payload_select_column_payload_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  auto_generated

  """column name"""
  callback_alert

  """column name"""
  deleted
}

"""
select "payload_aggregate_bool_exp_bool_or_arguments_columns" columns of table "payload"
"""
enum payload_select_column_payload_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  auto_generated

  """column name"""
  callback_alert

  """column name"""
  deleted
}

"""
input type for updating data in table "payload"
"""
input payload_set_input {
  callback_alert: Boolean
  deleted: Boolean
  description: String
}

"""aggregate stddev on columns"""
type payload_stddev_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by stddev() on columns of table "payload"
"""
input payload_stddev_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""aggregate stddev_pop on columns"""
type payload_stddev_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by stddev_pop() on columns of table "payload"
"""
input payload_stddev_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""aggregate stddev_samp on columns"""
type payload_stddev_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by stddev_samp() on columns of table "payload"
"""
input payload_stddev_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""
Streaming cursor of the table "payload"
"""
input payload_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payload_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payload_stream_cursor_value_input {
  apitokens_id: Int
  auto_generated: Boolean
  build_container: String
  build_message: String
  build_phase: String
  build_stderr: String
  build_stdout: String
  callback_alert: Boolean
  creation_time: timestamp
  deleted: Boolean
  description: String
  eventstepinstance_id: Int
  file_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  os: String
  payload_type_id: Int
  task_id: Int
  timestamp: timestamp
  uuid: String
  wrapped_payload_id: Int
}

"""aggregate sum on columns"""
type payload_sum_fields {
  apitokens_id: Int
  eventstepinstance_id: Int
  file_id: Int
  id: Int
  operation_id: Int
  operator_id: Int
  payload_type_id: Int
  task_id: Int
  wrapped_payload_id: Int
}

"""
order by sum() on columns of table "payload"
"""
input payload_sum_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

input payload_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: payload_set_input

  """filter the rows which have to be updated"""
  where: payload_bool_exp!
}

"""aggregate var_pop on columns"""
type payload_var_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by var_pop() on columns of table "payload"
"""
input payload_var_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""aggregate var_samp on columns"""
type payload_var_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by var_samp() on columns of table "payload"
"""
input payload_var_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""aggregate variance on columns"""
type payload_variance_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  file_id: Float
  id: Float
  operation_id: Float
  operator_id: Float
  payload_type_id: Float
  task_id: Float
  wrapped_payload_id: Float
}

"""
order by variance() on columns of table "payload"
"""
input payload_variance_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  file_id: order_by
  id: order_by
  operation_id: order_by
  operator_id: order_by
  payload_type_id: order_by
  task_id: order_by
  wrapped_payload_id: order_by
}

"""
columns and relationships of "payloadc2profiles"
"""
type payloadc2profiles {
  c2_profile_id: Int!

  """An object relationship"""
  c2profile: c2profile!
  id: Int!

  """An object relationship"""
  payload: payload!
  payload_id: Int!
}

"""
order by aggregate values of table "payloadc2profiles"
"""
input payloadc2profiles_aggregate_order_by {
  avg: payloadc2profiles_avg_order_by
  count: order_by
  max: payloadc2profiles_max_order_by
  min: payloadc2profiles_min_order_by
  stddev: payloadc2profiles_stddev_order_by
  stddev_pop: payloadc2profiles_stddev_pop_order_by
  stddev_samp: payloadc2profiles_stddev_samp_order_by
  sum: payloadc2profiles_sum_order_by
  var_pop: payloadc2profiles_var_pop_order_by
  var_samp: payloadc2profiles_var_samp_order_by
  variance: payloadc2profiles_variance_order_by
}

"""
order by avg() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_avg_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
Boolean expression to filter rows from the table "payloadc2profiles". All fields are combined with a logical 'AND'.
"""
input payloadc2profiles_bool_exp {
  _and: [payloadc2profiles_bool_exp!]
  _not: payloadc2profiles_bool_exp
  _or: [payloadc2profiles_bool_exp!]
  c2_profile_id: Int_comparison_exp
  c2profile: c2profile_bool_exp
  id: Int_comparison_exp
  payload: payload_bool_exp
  payload_id: Int_comparison_exp
}

"""
order by max() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_max_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by min() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_min_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""Ordering options when selecting data from "payloadc2profiles"."""
input payloadc2profiles_order_by {
  c2_profile_id: order_by
  c2profile: c2profile_order_by
  id: order_by
  payload: payload_order_by
  payload_id: order_by
}

"""
select columns of table "payloadc2profiles"
"""
enum payloadc2profiles_select_column {
  """column name"""
  c2_profile_id

  """column name"""
  id

  """column name"""
  payload_id
}

"""
order by stddev() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_stddev_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by stddev_pop() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_stddev_pop_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by stddev_samp() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_stddev_samp_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
Streaming cursor of the table "payloadc2profiles"
"""
input payloadc2profiles_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payloadc2profiles_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payloadc2profiles_stream_cursor_value_input {
  c2_profile_id: Int
  id: Int
  payload_id: Int
}

"""
order by sum() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_sum_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by var_pop() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_var_pop_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by var_samp() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_var_samp_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
order by variance() on columns of table "payloadc2profiles"
"""
input payloadc2profiles_variance_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_id: order_by
}

"""
columns and relationships of "payloadcommand"
"""
type payloadcommand {
  """An object relationship"""
  command: command!
  command_id: Int!
  creation_time: timestamp!
  id: Int!

  """An object relationship"""
  payload: payload!
  payload_id: Int!
  version: Int!
}

"""
order by aggregate values of table "payloadcommand"
"""
input payloadcommand_aggregate_order_by {
  avg: payloadcommand_avg_order_by
  count: order_by
  max: payloadcommand_max_order_by
  min: payloadcommand_min_order_by
  stddev: payloadcommand_stddev_order_by
  stddev_pop: payloadcommand_stddev_pop_order_by
  stddev_samp: payloadcommand_stddev_samp_order_by
  sum: payloadcommand_sum_order_by
  var_pop: payloadcommand_var_pop_order_by
  var_samp: payloadcommand_var_samp_order_by
  variance: payloadcommand_variance_order_by
}

"""
order by avg() on columns of table "payloadcommand"
"""
input payloadcommand_avg_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
Boolean expression to filter rows from the table "payloadcommand". All fields are combined with a logical 'AND'.
"""
input payloadcommand_bool_exp {
  _and: [payloadcommand_bool_exp!]
  _not: payloadcommand_bool_exp
  _or: [payloadcommand_bool_exp!]
  command: command_bool_exp
  command_id: Int_comparison_exp
  creation_time: timestamp_comparison_exp
  id: Int_comparison_exp
  payload: payload_bool_exp
  payload_id: Int_comparison_exp
  version: Int_comparison_exp
}

"""
unique or primary key constraints on table "payloadcommand"
"""
enum payloadcommand_constraint {
  """
  unique or primary key constraint on columns "command_id", "payload_id"
  """
  payloadcommand_payload_id_command_id

  """
  unique or primary key constraint on columns "id"
  """
  payloadcommand_pkey
}

"""
input type for inserting data into table "payloadcommand"
"""
input payloadcommand_insert_input {
  command_id: Int
  payload_id: Int
}

"""
order by max() on columns of table "payloadcommand"
"""
input payloadcommand_max_order_by {
  command_id: order_by
  creation_time: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
order by min() on columns of table "payloadcommand"
"""
input payloadcommand_min_order_by {
  command_id: order_by
  creation_time: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
response of any mutation on the table "payloadcommand"
"""
type payloadcommand_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [payloadcommand!]!
}

"""
on_conflict condition type for table "payloadcommand"
"""
input payloadcommand_on_conflict {
  constraint: payloadcommand_constraint!
  update_columns: [payloadcommand_update_column!]! = []
  where: payloadcommand_bool_exp
}

"""Ordering options when selecting data from "payloadcommand"."""
input payloadcommand_order_by {
  command: command_order_by
  command_id: order_by
  creation_time: order_by
  id: order_by
  payload: payload_order_by
  payload_id: order_by
  version: order_by
}

"""
select columns of table "payloadcommand"
"""
enum payloadcommand_select_column {
  """column name"""
  command_id

  """column name"""
  creation_time

  """column name"""
  id

  """column name"""
  payload_id

  """column name"""
  version
}

"""
order by stddev() on columns of table "payloadcommand"
"""
input payloadcommand_stddev_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
order by stddev_pop() on columns of table "payloadcommand"
"""
input payloadcommand_stddev_pop_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
order by stddev_samp() on columns of table "payloadcommand"
"""
input payloadcommand_stddev_samp_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
Streaming cursor of the table "payloadcommand"
"""
input payloadcommand_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payloadcommand_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payloadcommand_stream_cursor_value_input {
  command_id: Int
  creation_time: timestamp
  id: Int
  payload_id: Int
  version: Int
}

"""
order by sum() on columns of table "payloadcommand"
"""
input payloadcommand_sum_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
placeholder for update columns of table "payloadcommand" (current role has no relevant permissions)
"""
enum payloadcommand_update_column {
  """placeholder (do not use)"""
  _PLACEHOLDER
}

"""
order by var_pop() on columns of table "payloadcommand"
"""
input payloadcommand_var_pop_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
order by var_samp() on columns of table "payloadcommand"
"""
input payloadcommand_var_samp_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
order by variance() on columns of table "payloadcommand"
"""
input payloadcommand_variance_order_by {
  command_id: order_by
  id: order_by
  payload_id: order_by
  version: order_by
}

"""
columns and relationships of "payloadonhost"
"""
type payloadonhost {
  deleted: Boolean!
  host: String!
  id: Int!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  payload: payload!
  payload_id: Int!

  """An object relationship"""
  task: task
  task_id: Int
  timestamp: timestamp!
}

"""
order by aggregate values of table "payloadonhost"
"""
input payloadonhost_aggregate_order_by {
  avg: payloadonhost_avg_order_by
  count: order_by
  max: payloadonhost_max_order_by
  min: payloadonhost_min_order_by
  stddev: payloadonhost_stddev_order_by
  stddev_pop: payloadonhost_stddev_pop_order_by
  stddev_samp: payloadonhost_stddev_samp_order_by
  sum: payloadonhost_sum_order_by
  var_pop: payloadonhost_var_pop_order_by
  var_samp: payloadonhost_var_samp_order_by
  variance: payloadonhost_variance_order_by
}

"""
order by avg() on columns of table "payloadonhost"
"""
input payloadonhost_avg_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "payloadonhost". All fields are combined with a logical 'AND'.
"""
input payloadonhost_bool_exp {
  _and: [payloadonhost_bool_exp!]
  _not: payloadonhost_bool_exp
  _or: [payloadonhost_bool_exp!]
  deleted: Boolean_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  payload: payload_bool_exp
  payload_id: Int_comparison_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "payloadonhost"
"""
enum payloadonhost_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  payloadonhost_pkey
}

"""
input type for inserting data into table "payloadonhost"
"""
input payloadonhost_insert_input {
  host: String
  payload_id: Int
}

"""
order by max() on columns of table "payloadonhost"
"""
input payloadonhost_max_order_by {
  host: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "payloadonhost"
"""
input payloadonhost_min_order_by {
  host: order_by
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "payloadonhost"
"""
type payloadonhost_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [payloadonhost!]!
}

"""
on_conflict condition type for table "payloadonhost"
"""
input payloadonhost_on_conflict {
  constraint: payloadonhost_constraint!
  update_columns: [payloadonhost_update_column!]! = []
  where: payloadonhost_bool_exp
}

"""Ordering options when selecting data from "payloadonhost"."""
input payloadonhost_order_by {
  deleted: order_by
  host: order_by
  id: order_by
  operation: operation_order_by
  operation_id: order_by
  payload: payload_order_by
  payload_id: order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
}

"""primary key columns input for table: payloadonhost"""
input payloadonhost_pk_columns_input {
  id: Int!
}

"""
select columns of table "payloadonhost"
"""
enum payloadonhost_select_column {
  """column name"""
  deleted

  """column name"""
  host

  """column name"""
  id

  """column name"""
  operation_id

  """column name"""
  payload_id

  """column name"""
  task_id

  """column name"""
  timestamp
}

"""
input type for updating data in table "payloadonhost"
"""
input payloadonhost_set_input {
  deleted: Boolean
}

"""
order by stddev() on columns of table "payloadonhost"
"""
input payloadonhost_stddev_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
order by stddev_pop() on columns of table "payloadonhost"
"""
input payloadonhost_stddev_pop_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
order by stddev_samp() on columns of table "payloadonhost"
"""
input payloadonhost_stddev_samp_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "payloadonhost"
"""
input payloadonhost_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payloadonhost_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payloadonhost_stream_cursor_value_input {
  deleted: Boolean
  host: String
  id: Int
  operation_id: Int
  payload_id: Int
  task_id: Int
  timestamp: timestamp
}

"""
order by sum() on columns of table "payloadonhost"
"""
input payloadonhost_sum_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
update columns of table "payloadonhost"
"""
enum payloadonhost_update_column {
  """column name"""
  deleted
}

input payloadonhost_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: payloadonhost_set_input

  """filter the rows which have to be updated"""
  where: payloadonhost_bool_exp!
}

"""
order by var_pop() on columns of table "payloadonhost"
"""
input payloadonhost_var_pop_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
order by var_samp() on columns of table "payloadonhost"
"""
input payloadonhost_var_samp_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
order by variance() on columns of table "payloadonhost"
"""
input payloadonhost_variance_order_by {
  id: order_by
  operation_id: order_by
  payload_id: order_by
  task_id: order_by
}

"""
columns and relationships of "payloadtype"
"""
type payloadtype {
  agent_type: String!
  author: String!

  """An array relationship"""
  browserscripts(
    """distinct select on columns"""
    distinct_on: [browserscript_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscript_order_by!]

    """filter the rows returned"""
    where: browserscript_bool_exp
  ): [browserscript!]!

  """An array relationship"""
  buildparameters(
    """distinct select on columns"""
    distinct_on: [buildparameter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameter_order_by!]

    """filter the rows returned"""
    where: buildparameter_bool_exp
  ): [buildparameter!]!

  """An array relationship"""
  commands(
    """distinct select on columns"""
    distinct_on: [command_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [command_order_by!]

    """filter the rows returned"""
    where: command_bool_exp
  ): [command!]!

  """An aggregate relationship"""
  commands_aggregate(
    """distinct select on columns"""
    distinct_on: [command_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [command_order_by!]

    """filter the rows returned"""
    where: command_bool_exp
  ): command_aggregate!
  container_count: Int!
  container_running: Boolean!
  creation_time: timestamp!
  deleted: Boolean!
  file_extension: String!
  id: Int!
  message_format: String!
  message_uuid_length: Int!
  mythic_encrypts: Boolean!
  name: String!
  note: String!

  """An array relationship"""
  payload_build_steps(
    """distinct select on columns"""
    distinct_on: [payload_build_step_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_build_step_order_by!]

    """filter the rows returned"""
    where: payload_build_step_bool_exp
  ): [payload_build_step!]!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """An array relationship"""
  payloadtypec2profiles(
    """distinct select on columns"""
    distinct_on: [payloadtypec2profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtypec2profile_order_by!]

    """filter the rows returned"""
    where: payloadtypec2profile_bool_exp
  ): [payloadtypec2profile!]!
  supported_os(
    """JSON select path"""
    path: String
  ): jsonb!
  supports_dynamic_loading: Boolean!
  translation_container_id: Int

  """An object relationship"""
  translationcontainer: translationcontainer

  """An array relationship"""
  wrap_these_payload_types(
    """distinct select on columns"""
    distinct_on: [wrappedpayloadtypes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [wrappedpayloadtypes_order_by!]

    """filter the rows returned"""
    where: wrappedpayloadtypes_bool_exp
  ): [wrappedpayloadtypes!]!

  """An array relationship"""
  wrapped_by_these_payload_types(
    """distinct select on columns"""
    distinct_on: [wrappedpayloadtypes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [wrappedpayloadtypes_order_by!]

    """filter the rows returned"""
    where: wrappedpayloadtypes_bool_exp
  ): [wrappedpayloadtypes!]!
  wrapper: Boolean!
}

"""
order by aggregate values of table "payloadtype"
"""
input payloadtype_aggregate_order_by {
  avg: payloadtype_avg_order_by
  count: order_by
  max: payloadtype_max_order_by
  min: payloadtype_min_order_by
  stddev: payloadtype_stddev_order_by
  stddev_pop: payloadtype_stddev_pop_order_by
  stddev_samp: payloadtype_stddev_samp_order_by
  sum: payloadtype_sum_order_by
  var_pop: payloadtype_var_pop_order_by
  var_samp: payloadtype_var_samp_order_by
  variance: payloadtype_variance_order_by
}

"""
order by avg() on columns of table "payloadtype"
"""
input payloadtype_avg_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
Boolean expression to filter rows from the table "payloadtype". All fields are combined with a logical 'AND'.
"""
input payloadtype_bool_exp {
  _and: [payloadtype_bool_exp!]
  _not: payloadtype_bool_exp
  _or: [payloadtype_bool_exp!]
  agent_type: String_comparison_exp
  author: String_comparison_exp
  browserscripts: browserscript_bool_exp
  buildparameters: buildparameter_bool_exp
  commands: command_bool_exp
  commands_aggregate: command_aggregate_bool_exp
  container_count: Int_comparison_exp
  container_running: Boolean_comparison_exp
  creation_time: timestamp_comparison_exp
  deleted: Boolean_comparison_exp
  file_extension: String_comparison_exp
  id: Int_comparison_exp
  message_format: String_comparison_exp
  message_uuid_length: Int_comparison_exp
  mythic_encrypts: Boolean_comparison_exp
  name: String_comparison_exp
  note: String_comparison_exp
  payload_build_steps: payload_build_step_bool_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  payloadtypec2profiles: payloadtypec2profile_bool_exp
  supported_os: jsonb_comparison_exp
  supports_dynamic_loading: Boolean_comparison_exp
  translation_container_id: Int_comparison_exp
  translationcontainer: translationcontainer_bool_exp
  wrap_these_payload_types: wrappedpayloadtypes_bool_exp
  wrapped_by_these_payload_types: wrappedpayloadtypes_bool_exp
  wrapper: Boolean_comparison_exp
}

"""
order by max() on columns of table "payloadtype"
"""
input payloadtype_max_order_by {
  agent_type: order_by
  author: order_by
  container_count: order_by
  creation_time: order_by
  file_extension: order_by
  id: order_by
  message_format: order_by
  message_uuid_length: order_by
  name: order_by
  note: order_by
  translation_container_id: order_by
}

"""
order by min() on columns of table "payloadtype"
"""
input payloadtype_min_order_by {
  agent_type: order_by
  author: order_by
  container_count: order_by
  creation_time: order_by
  file_extension: order_by
  id: order_by
  message_format: order_by
  message_uuid_length: order_by
  name: order_by
  note: order_by
  translation_container_id: order_by
}

"""
response of any mutation on the table "payloadtype"
"""
type payloadtype_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [payloadtype!]!
}

"""Ordering options when selecting data from "payloadtype"."""
input payloadtype_order_by {
  agent_type: order_by
  author: order_by
  browserscripts_aggregate: browserscript_aggregate_order_by
  buildparameters_aggregate: buildparameter_aggregate_order_by
  commands_aggregate: command_aggregate_order_by
  container_count: order_by
  container_running: order_by
  creation_time: order_by
  deleted: order_by
  file_extension: order_by
  id: order_by
  message_format: order_by
  message_uuid_length: order_by
  mythic_encrypts: order_by
  name: order_by
  note: order_by
  payload_build_steps_aggregate: payload_build_step_aggregate_order_by
  payloads_aggregate: payload_aggregate_order_by
  payloadtypec2profiles_aggregate: payloadtypec2profile_aggregate_order_by
  supported_os: order_by
  supports_dynamic_loading: order_by
  translation_container_id: order_by
  translationcontainer: translationcontainer_order_by
  wrap_these_payload_types_aggregate: wrappedpayloadtypes_aggregate_order_by
  wrapped_by_these_payload_types_aggregate: wrappedpayloadtypes_aggregate_order_by
  wrapper: order_by
}

"""primary key columns input for table: payloadtype"""
input payloadtype_pk_columns_input {
  id: Int!
}

"""
select columns of table "payloadtype"
"""
enum payloadtype_select_column {
  """column name"""
  agent_type

  """column name"""
  author

  """column name"""
  container_count

  """column name"""
  container_running

  """column name"""
  creation_time

  """column name"""
  deleted

  """column name"""
  file_extension

  """column name"""
  id

  """column name"""
  message_format

  """column name"""
  message_uuid_length

  """column name"""
  mythic_encrypts

  """column name"""
  name

  """column name"""
  note

  """column name"""
  supported_os

  """column name"""
  supports_dynamic_loading

  """column name"""
  translation_container_id

  """column name"""
  wrapper
}

"""
input type for updating data in table "payloadtype"
"""
input payloadtype_set_input {
  deleted: Boolean
}

"""
order by stddev() on columns of table "payloadtype"
"""
input payloadtype_stddev_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
order by stddev_pop() on columns of table "payloadtype"
"""
input payloadtype_stddev_pop_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
order by stddev_samp() on columns of table "payloadtype"
"""
input payloadtype_stddev_samp_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
Streaming cursor of the table "payloadtype"
"""
input payloadtype_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payloadtype_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payloadtype_stream_cursor_value_input {
  agent_type: String
  author: String
  container_count: Int
  container_running: Boolean
  creation_time: timestamp
  deleted: Boolean
  file_extension: String
  id: Int
  message_format: String
  message_uuid_length: Int
  mythic_encrypts: Boolean
  name: String
  note: String
  supported_os: jsonb
  supports_dynamic_loading: Boolean
  translation_container_id: Int
  wrapper: Boolean
}

"""
order by sum() on columns of table "payloadtype"
"""
input payloadtype_sum_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

input payloadtype_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: payloadtype_set_input

  """filter the rows which have to be updated"""
  where: payloadtype_bool_exp!
}

"""
order by var_pop() on columns of table "payloadtype"
"""
input payloadtype_var_pop_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
order by var_samp() on columns of table "payloadtype"
"""
input payloadtype_var_samp_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
order by variance() on columns of table "payloadtype"
"""
input payloadtype_variance_order_by {
  container_count: order_by
  id: order_by
  message_uuid_length: order_by
  translation_container_id: order_by
}

"""
columns and relationships of "payloadtypec2profile"
"""
type payloadtypec2profile {
  c2_profile_id: Int!

  """An object relationship"""
  c2profile: c2profile!
  id: Int!
  payload_type_id: Int!

  """An object relationship"""
  payloadtype: payloadtype!
}

"""
order by aggregate values of table "payloadtypec2profile"
"""
input payloadtypec2profile_aggregate_order_by {
  avg: payloadtypec2profile_avg_order_by
  count: order_by
  max: payloadtypec2profile_max_order_by
  min: payloadtypec2profile_min_order_by
  stddev: payloadtypec2profile_stddev_order_by
  stddev_pop: payloadtypec2profile_stddev_pop_order_by
  stddev_samp: payloadtypec2profile_stddev_samp_order_by
  sum: payloadtypec2profile_sum_order_by
  var_pop: payloadtypec2profile_var_pop_order_by
  var_samp: payloadtypec2profile_var_samp_order_by
  variance: payloadtypec2profile_variance_order_by
}

"""
order by avg() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_avg_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
Boolean expression to filter rows from the table "payloadtypec2profile". All fields are combined with a logical 'AND'.
"""
input payloadtypec2profile_bool_exp {
  _and: [payloadtypec2profile_bool_exp!]
  _not: payloadtypec2profile_bool_exp
  _or: [payloadtypec2profile_bool_exp!]
  c2_profile_id: Int_comparison_exp
  c2profile: c2profile_bool_exp
  id: Int_comparison_exp
  payload_type_id: Int_comparison_exp
  payloadtype: payloadtype_bool_exp
}

"""
order by max() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_max_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
order by min() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_min_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""Ordering options when selecting data from "payloadtypec2profile"."""
input payloadtypec2profile_order_by {
  c2_profile_id: order_by
  c2profile: c2profile_order_by
  id: order_by
  payload_type_id: order_by
  payloadtype: payloadtype_order_by
}

"""
select columns of table "payloadtypec2profile"
"""
enum payloadtypec2profile_select_column {
  """column name"""
  c2_profile_id

  """column name"""
  id

  """column name"""
  payload_type_id
}

"""
order by stddev() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_stddev_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
order by stddev_pop() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_stddev_pop_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
order by stddev_samp() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_stddev_samp_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
Streaming cursor of the table "payloadtypec2profile"
"""
input payloadtypec2profile_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: payloadtypec2profile_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input payloadtypec2profile_stream_cursor_value_input {
  c2_profile_id: Int
  id: Int
  payload_type_id: Int
}

"""
order by sum() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_sum_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
order by var_pop() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_var_pop_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
order by var_samp() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_var_samp_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

"""
order by variance() on columns of table "payloadtypec2profile"
"""
input payloadtypec2profile_variance_order_by {
  c2_profile_id: order_by
  id: order_by
  payload_type_id: order_by
}

type previewFileOutput {
  contents: String
  error: String
  status: String!
}

type query_root {
  """An array relationship"""
  apitokens(
    """distinct select on columns"""
    distinct_on: [apitokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [apitokens_order_by!]

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!

  """fetch data from the table: "apitokens" using primary key columns"""
  apitokens_by_pk(id: Int!): apitokens

  """
  fetch data from the table: "attack"
  """
  attack(
    """distinct select on columns"""
    distinct_on: [attack_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attack_order_by!]

    """filter the rows returned"""
    where: attack_bool_exp
  ): [attack!]!

  """fetch data from the table: "attack" using primary key columns"""
  attack_by_pk(id: Int!): attack

  """
  fetch data from the table: "attackcommand"
  """
  attackcommand(
    """distinct select on columns"""
    distinct_on: [attackcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attackcommand_order_by!]

    """filter the rows returned"""
    where: attackcommand_bool_exp
  ): [attackcommand!]!

  """fetch data from the table: "attackcommand" using primary key columns"""
  attackcommand_by_pk(id: Int!): attackcommand

  """
  fetch data from the table: "attacktask"
  """
  attacktask(
    """distinct select on columns"""
    distinct_on: [attacktask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attacktask_order_by!]

    """filter the rows returned"""
    where: attacktask_bool_exp
  ): [attacktask!]!

  """fetch data from the table: "attacktask" using primary key columns"""
  attacktask_by_pk(id: Int!): attacktask

  """
  fetch data from the table: "browserscript"
  """
  browserscript(
    """distinct select on columns"""
    distinct_on: [browserscript_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscript_order_by!]

    """filter the rows returned"""
    where: browserscript_bool_exp
  ): [browserscript!]!

  """fetch data from the table: "browserscript" using primary key columns"""
  browserscript_by_pk(id: Int!): browserscript

  """
  fetch data from the table: "browserscriptoperation"
  """
  browserscriptoperation(
    """distinct select on columns"""
    distinct_on: [browserscriptoperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscriptoperation_order_by!]

    """filter the rows returned"""
    where: browserscriptoperation_bool_exp
  ): [browserscriptoperation!]!

  """
  fetch data from the table: "browserscriptoperation" using primary key columns
  """
  browserscriptoperation_by_pk(id: Int!): browserscriptoperation

  """
  fetch data from the table: "buildparameter"
  """
  buildparameter(
    """distinct select on columns"""
    distinct_on: [buildparameter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameter_order_by!]

    """filter the rows returned"""
    where: buildparameter_bool_exp
  ): [buildparameter!]!

  """fetch data from the table: "buildparameter" using primary key columns"""
  buildparameter_by_pk(id: Int!): buildparameter

  """
  fetch data from the table: "buildparameterinstance"
  """
  buildparameterinstance(
    """distinct select on columns"""
    distinct_on: [buildparameterinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameterinstance_order_by!]

    """filter the rows returned"""
    where: buildparameterinstance_bool_exp
  ): [buildparameterinstance!]!

  """
  fetch data from the table: "buildparameterinstance" using primary key columns
  """
  buildparameterinstance_by_pk(id: Int!): buildparameterinstance
  c2GetIOC(uuid: String!): GetIOCOutput
  c2SampleMessage(uuid: String!): C2SampleMessageOutput

  """
  fetch data from the table: "c2profile"
  """
  c2profile(
    """distinct select on columns"""
    distinct_on: [c2profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profile_order_by!]

    """filter the rows returned"""
    where: c2profile_bool_exp
  ): [c2profile!]!
  c2profileListFiles(id: Int!): c2ProfileListFilesOutput

  """fetch data from the table: "c2profile" using primary key columns"""
  c2profile_by_pk(id: Int!): c2profile

  """An array relationship"""
  c2profileparameters(
    """distinct select on columns"""
    distinct_on: [c2profileparameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparameters_order_by!]

    """filter the rows returned"""
    where: c2profileparameters_bool_exp
  ): [c2profileparameters!]!

  """
  fetch data from the table: "c2profileparameters" using primary key columns
  """
  c2profileparameters_by_pk(id: Int!): c2profileparameters

  """
  fetch data from the table: "c2profileparametersinstance"
  """
  c2profileparametersinstance(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!

  """
  fetch data from the table: "c2profileparametersinstance" using primary key columns
  """
  c2profileparametersinstance_by_pk(id: Int!): c2profileparametersinstance

  """
  fetch data from the table: "callback"
  """
  callback(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """
  fetch aggregated fields from the table: "callback"
  """
  callback_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!

  """fetch data from the table: "callback" using primary key columns"""
  callback_by_pk(id: Int!): callback

  """An array relationship"""
  callbackc2profiles(
    """distinct select on columns"""
    distinct_on: [callbackc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackc2profiles_order_by!]

    """filter the rows returned"""
    where: callbackc2profiles_bool_exp
  ): [callbackc2profiles!]!

  """
  fetch data from the table: "callbackc2profiles" using primary key columns
  """
  callbackc2profiles_by_pk(id: Int!): callbackc2profiles

  """
  fetch data from the table: "callbackgraphedge"
  """
  callbackgraphedge(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """
  fetch aggregated fields from the table: "callbackgraphedge"
  """
  callbackgraphedge_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): callbackgraphedge_aggregate!

  """
  fetch data from the table: "callbackgraphedge" using primary key columns
  """
  callbackgraphedge_by_pk(id: Int!): callbackgraphedge

  """
  fetch data from the table: "callbackport"
  """
  callbackport(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): [callbackport!]!

  """
  fetch aggregated fields from the table: "callbackport"
  """
  callbackport_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): callbackport_aggregate!

  """fetch data from the table: "callbackport" using primary key columns"""
  callbackport_by_pk(id: Int!): callbackport

  """
  fetch data from the table: "callbacktoken"
  """
  callbacktoken(
    """distinct select on columns"""
    distinct_on: [callbacktoken_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbacktoken_order_by!]

    """filter the rows returned"""
    where: callbacktoken_bool_exp
  ): [callbacktoken!]!

  """fetch data from the table: "callbacktoken" using primary key columns"""
  callbacktoken_by_pk(id: Int!): callbacktoken

  """
  fetch data from the table: "command"
  """
  command(
    """distinct select on columns"""
    distinct_on: [command_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [command_order_by!]

    """filter the rows returned"""
    where: command_bool_exp
  ): [command!]!

  """
  fetch aggregated fields from the table: "command"
  """
  command_aggregate(
    """distinct select on columns"""
    distinct_on: [command_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [command_order_by!]

    """filter the rows returned"""
    where: command_bool_exp
  ): command_aggregate!

  """fetch data from the table: "command" using primary key columns"""
  command_by_pk(id: Int!): command

  """An array relationship"""
  commandparameters(
    """distinct select on columns"""
    distinct_on: [commandparameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [commandparameters_order_by!]

    """filter the rows returned"""
    where: commandparameters_bool_exp
  ): [commandparameters!]!

  """
  fetch data from the table: "commandparameters" using primary key columns
  """
  commandparameters_by_pk(id: Int!): commandparameters
  config_check(uuid: String!): ConfigCheckOutput

  """
  fetch data from the table: "consuming_container"
  """
  consuming_container(
    """distinct select on columns"""
    distinct_on: [consuming_container_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consuming_container_order_by!]

    """filter the rows returned"""
    where: consuming_container_bool_exp
  ): [consuming_container!]!

  """
  fetch data from the table: "consuming_container" using primary key columns
  """
  consuming_container_by_pk(id: Int!): consuming_container

  """
  fetch data from the table: "credential"
  """
  credential(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """
  fetch aggregated fields from the table: "credential"
  """
  credential_aggregate(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): credential_aggregate!

  """fetch data from the table: "credential" using primary key columns"""
  credential_by_pk(id: Int!): credential

  """
  fetch data from the table: "disabledcommandsprofile"
  """
  disabledcommandsprofile(
    """distinct select on columns"""
    distinct_on: [disabledcommandsprofile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [disabledcommandsprofile_order_by!]

    """filter the rows returned"""
    where: disabledcommandsprofile_bool_exp
  ): [disabledcommandsprofile!]!

  """
  fetch data from the table: "disabledcommandsprofile" using primary key columns
  """
  disabledcommandsprofile_by_pk(id: Int!): disabledcommandsprofile
  downloadContainerFile(filename: String!, id: Int): ContainerFile

  """
  fetch data from the table: "eventgroup"
  """
  eventgroup(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): [eventgroup!]!

  """
  fetch aggregated fields from the table: "eventgroup"
  """
  eventgroup_aggregate(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): eventgroup_aggregate!

  """fetch data from the table: "eventgroup" using primary key columns"""
  eventgroup_by_pk(id: Int!): eventgroup

  """
  fetch data from the table: "eventgroupapproval"
  """
  eventgroupapproval(
    """distinct select on columns"""
    distinct_on: [eventgroupapproval_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupapproval_order_by!]

    """filter the rows returned"""
    where: eventgroupapproval_bool_exp
  ): [eventgroupapproval!]!

  """
  fetch data from the table: "eventgroupapproval" using primary key columns
  """
  eventgroupapproval_by_pk(id: Int!): eventgroupapproval

  """
  fetch data from the table: "eventgroupinstance"
  """
  eventgroupinstance(
    """distinct select on columns"""
    distinct_on: [eventgroupinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupinstance_order_by!]

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """
  fetch data from the table: "eventgroupinstance" using primary key columns
  """
  eventgroupinstance_by_pk(id: Int!): eventgroupinstance

  """
  fetch data from the table: "eventstep"
  """
  eventstep(
    """distinct select on columns"""
    distinct_on: [eventstep_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstep_order_by!]

    """filter the rows returned"""
    where: eventstep_bool_exp
  ): [eventstep!]!

  """fetch data from the table: "eventstep" using primary key columns"""
  eventstep_by_pk(id: Int!): eventstep

  """
  fetch data from the table: "eventstepinstance"
  """
  eventstepinstance(
    """distinct select on columns"""
    distinct_on: [eventstepinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstepinstance_order_by!]

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!

  """
  fetch data from the table: "eventstepinstance" using primary key columns
  """
  eventstepinstance_by_pk(id: Int!): eventstepinstance
  exportCallbackConfig(agent_callback_id: String!): exportCallbackConfigOutput
  export_payload_config(uuid: String!): PayloadConfig

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!

  """fetch data from the table: "filemeta" using primary key columns"""
  filemeta_by_pk(id: Int!): filemeta
  getGlobalSettings: globalSettingsOutput
  getOperatorSecrets(operator_id: Int): getOperatorSecretsOutput
  getProfileOutput(id: Int!): ProfileOutput

  """
  fetch data from the table: "keylog"
  """
  keylog(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): [keylog!]!

  """
  fetch aggregated fields from the table: "keylog"
  """
  keylog_aggregate(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): keylog_aggregate!

  """fetch data from the table: "keylog" using primary key columns"""
  keylog_by_pk(id: Int!): keylog

  """An array relationship"""
  loadedcommands(
    """distinct select on columns"""
    distinct_on: [loadedcommands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [loadedcommands_order_by!]

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!

  """fetch data from the table: "loadedcommands" using primary key columns"""
  loadedcommands_by_pk(id: Int!): loadedcommands
  meHook: meHookOutput

  """
  fetch data from the table: "mythictree"
  """
  mythictree(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """
  fetch aggregated fields from the table: "mythictree"
  """
  mythictree_aggregate(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): mythictree_aggregate!

  """fetch data from the table: "mythictree" using primary key columns"""
  mythictree_by_pk(id: Int!): mythictree

  """
  fetch data from the table: "operation"
  """
  operation(
    """distinct select on columns"""
    distinct_on: [operation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operation_order_by!]

    """filter the rows returned"""
    where: operation_bool_exp
  ): [operation!]!

  """fetch data from the table: "operation" using primary key columns"""
  operation_by_pk(id: Int!): operation

  """
  fetch data from the table: "operationeventlog"
  """
  operationeventlog(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): [operationeventlog!]!

  """
  fetch aggregated fields from the table: "operationeventlog"
  """
  operationeventlog_aggregate(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): operationeventlog_aggregate!

  """
  fetch data from the table: "operationeventlog" using primary key columns
  """
  operationeventlog_by_pk(id: Int!): operationeventlog

  """
  fetch data from the table: "operator"
  """
  operator(
    """distinct select on columns"""
    distinct_on: [operator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operator_order_by!]

    """filter the rows returned"""
    where: operator_bool_exp
  ): [operator!]!

  """fetch data from the table: "operator" using primary key columns"""
  operator_by_pk(id: Int!): operator

  """
  fetch data from the table: "operatoroperation"
  """
  operatoroperation(
    """distinct select on columns"""
    distinct_on: [operatoroperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operatoroperation_order_by!]

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!

  """
  fetch data from the table: "operatoroperation" using primary key columns
  """
  operatoroperation_by_pk(id: Int!): operatoroperation

  """
  fetch data from the table: "payload"
  """
  payload(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """
  fetch aggregated fields from the table: "payload"
  """
  payload_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """
  fetch data from the table: "payload_build_step"
  """
  payload_build_step(
    """distinct select on columns"""
    distinct_on: [payload_build_step_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_build_step_order_by!]

    """filter the rows returned"""
    where: payload_build_step_bool_exp
  ): [payload_build_step!]!

  """
  fetch data from the table: "payload_build_step" using primary key columns
  """
  payload_build_step_by_pk(id: Int!): payload_build_step

  """fetch data from the table: "payload" using primary key columns"""
  payload_by_pk(id: Int!): payload

  """An array relationship"""
  payloadc2profiles(
    """distinct select on columns"""
    distinct_on: [payloadc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadc2profiles_order_by!]

    """filter the rows returned"""
    where: payloadc2profiles_bool_exp
  ): [payloadc2profiles!]!

  """
  fetch data from the table: "payloadc2profiles" using primary key columns
  """
  payloadc2profiles_by_pk(id: Int!): payloadc2profiles

  """
  fetch data from the table: "payloadcommand"
  """
  payloadcommand(
    """distinct select on columns"""
    distinct_on: [payloadcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadcommand_order_by!]

    """filter the rows returned"""
    where: payloadcommand_bool_exp
  ): [payloadcommand!]!

  """fetch data from the table: "payloadcommand" using primary key columns"""
  payloadcommand_by_pk(id: Int!): payloadcommand

  """
  fetch data from the table: "payloadonhost"
  """
  payloadonhost(
    """distinct select on columns"""
    distinct_on: [payloadonhost_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadonhost_order_by!]

    """filter the rows returned"""
    where: payloadonhost_bool_exp
  ): [payloadonhost!]!

  """fetch data from the table: "payloadonhost" using primary key columns"""
  payloadonhost_by_pk(id: Int!): payloadonhost

  """
  fetch data from the table: "payloadtype"
  """
  payloadtype(
    """distinct select on columns"""
    distinct_on: [payloadtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtype_order_by!]

    """filter the rows returned"""
    where: payloadtype_bool_exp
  ): [payloadtype!]!

  """fetch data from the table: "payloadtype" using primary key columns"""
  payloadtype_by_pk(id: Int!): payloadtype

  """
  fetch data from the table: "payloadtypec2profile"
  """
  payloadtypec2profile(
    """distinct select on columns"""
    distinct_on: [payloadtypec2profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtypec2profile_order_by!]

    """filter the rows returned"""
    where: payloadtypec2profile_bool_exp
  ): [payloadtypec2profile!]!

  """
  fetch data from the table: "payloadtypec2profile" using primary key columns
  """
  payloadtypec2profile_by_pk(id: Int!): payloadtypec2profile
  redirect_rules(uuid: String!): redirectOutput

  """
  fetch data from the table: "response"
  """
  response(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """
  fetch aggregated fields from the table: "response"
  """
  response_aggregate(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): response_aggregate!

  """fetch data from the table: "response" using primary key columns"""
  response_by_pk(id: Int!): response

  """
  fetch data from the table: "tag"
  """
  tag(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch aggregated fields from the table: "tag"
  """
  tag_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """fetch data from the table: "tag" using primary key columns"""
  tag_by_pk(id: Int!): tag

  """
  fetch data from the table: "tagtype"
  """
  tagtype(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): [tagtype!]!

  """
  fetch aggregated fields from the table: "tagtype"
  """
  tagtype_aggregate(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): tagtype_aggregate!

  """fetch data from the table: "tagtype" using primary key columns"""
  tagtype_by_pk(id: Int!): tagtype

  """
  fetch data from the table: "task"
  """
  task(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """
  fetch aggregated fields from the table: "task"
  """
  task_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!

  """fetch data from the table: "task" using primary key columns"""
  task_by_pk(id: Int!): task

  """
  fetch data from the table: "taskartifact"
  """
  taskartifact(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """
  fetch aggregated fields from the table: "taskartifact"
  """
  taskartifact_aggregate(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): taskartifact_aggregate!

  """fetch data from the table: "taskartifact" using primary key columns"""
  taskartifact_by_pk(id: Int!): taskartifact

  """
  fetch data from the table: "token"
  """
  token(
    """distinct select on columns"""
    distinct_on: [token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_order_by!]

    """filter the rows returned"""
    where: token_bool_exp
  ): [token!]!

  """
  fetch aggregated fields from the table: "token"
  """
  token_aggregate(
    """distinct select on columns"""
    distinct_on: [token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_order_by!]

    """filter the rows returned"""
    where: token_bool_exp
  ): token_aggregate!

  """fetch data from the table: "token" using primary key columns"""
  token_by_pk(id: Int!): token

  """
  fetch data from the table: "translationcontainer"
  """
  translationcontainer(
    """distinct select on columns"""
    distinct_on: [translationcontainer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translationcontainer_order_by!]

    """filter the rows returned"""
    where: translationcontainer_bool_exp
  ): [translationcontainer!]!

  """
  fetch data from the table: "translationcontainer" using primary key columns
  """
  translationcontainer_by_pk(id: Int!): translationcontainer

  """
  fetch data from the table: "wrappedpayloadtypes"
  """
  wrappedpayloadtypes(
    """distinct select on columns"""
    distinct_on: [wrappedpayloadtypes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [wrappedpayloadtypes_order_by!]

    """filter the rows returned"""
    where: wrappedpayloadtypes_bool_exp
  ): [wrappedpayloadtypes!]!

  """
  fetch data from the table: "wrappedpayloadtypes" using primary key columns
  """
  wrappedpayloadtypes_by_pk(id: Int!): wrappedpayloadtypes
}

type randomOutput {
  error: String
  random: String
  status: String!
}

type rebuildOutput {
  error: String
  status: String!
  uuid: String
}

type redirectOutput {
  error: String
  output: String
  status: String!
}

type removeContainerFileOutput {
  error: String
  status: String!
}

"""
columns and relationships of "response"
"""
type response {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  id: Int!
  is_error: Boolean!

  """An object relationship"""
  operation: operation
  operation_id: Int!

  """
  A computed field, executes function "response_escape"
  """
  response_escape: String
  response_raw: bytea!

  """convert bytea to text for responses"""
  response_text: String
  sequence_number: Int

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task!
  task_id: Int!
  timestamp: timestamp!
}

"""
aggregated selection of "response"
"""
type response_aggregate {
  aggregate: response_aggregate_fields
  nodes: [response!]!
}

input response_aggregate_bool_exp {
  bool_and: response_aggregate_bool_exp_bool_and
  bool_or: response_aggregate_bool_exp_bool_or
  count: response_aggregate_bool_exp_count
}

input response_aggregate_bool_exp_bool_and {
  arguments: response_select_column_response_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: response_bool_exp
  predicate: Boolean_comparison_exp!
}

input response_aggregate_bool_exp_bool_or {
  arguments: response_select_column_response_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: response_bool_exp
  predicate: Boolean_comparison_exp!
}

input response_aggregate_bool_exp_count {
  arguments: [response_select_column!]
  distinct: Boolean
  filter: response_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "response"
"""
type response_aggregate_fields {
  avg: response_avg_fields
  count(columns: [response_select_column!], distinct: Boolean): Int!
  max: response_max_fields
  min: response_min_fields
  stddev: response_stddev_fields
  stddev_pop: response_stddev_pop_fields
  stddev_samp: response_stddev_samp_fields
  sum: response_sum_fields
  var_pop: response_var_pop_fields
  var_samp: response_var_samp_fields
  variance: response_variance_fields
}

"""
order by aggregate values of table "response"
"""
input response_aggregate_order_by {
  avg: response_avg_order_by
  count: order_by
  max: response_max_order_by
  min: response_min_order_by
  stddev: response_stddev_order_by
  stddev_pop: response_stddev_pop_order_by
  stddev_samp: response_stddev_samp_order_by
  sum: response_sum_order_by
  var_pop: response_var_pop_order_by
  var_samp: response_var_samp_order_by
  variance: response_variance_order_by
}

"""aggregate avg on columns"""
type response_avg_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by avg() on columns of table "response"
"""
input response_avg_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "response". All fields are combined with a logical 'AND'.
"""
input response_bool_exp {
  _and: [response_bool_exp!]
  _not: response_bool_exp
  _or: [response_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  id: Int_comparison_exp
  is_error: Boolean_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  response_escape: String_comparison_exp
  response_raw: bytea_comparison_exp
  response_text: String_comparison_exp
  sequence_number: Int_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "response"
"""
enum response_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  response_pkey
}

"""
input type for inserting data into table "response"
"""
input response_insert_input {
  apitokens_id: Int
  eventstepinstance_id: Int
  is_error: Boolean
  response_raw: bytea
  sequence_number: Int
  tags: tag_arr_rel_insert_input
  task_id: Int
}

"""aggregate max on columns"""
type response_max_fields {
  apitokens_id: Int
  eventstepinstance_id: Int
  id: Int
  operation_id: Int

  """
  A computed field, executes function "response_escape"
  """
  response_escape: String

  """convert bytea to text for responses"""
  response_text: String
  sequence_number: Int
  task_id: Int
  timestamp: timestamp
}

"""
order by max() on columns of table "response"
"""
input response_max_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
  timestamp: order_by
}

"""aggregate min on columns"""
type response_min_fields {
  apitokens_id: Int
  eventstepinstance_id: Int
  id: Int
  operation_id: Int

  """
  A computed field, executes function "response_escape"
  """
  response_escape: String

  """convert bytea to text for responses"""
  response_text: String
  sequence_number: Int
  task_id: Int
  timestamp: timestamp
}

"""
order by min() on columns of table "response"
"""
input response_min_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "response"
"""
type response_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [response!]!
}

"""
input type for inserting object relation for remote table "response"
"""
input response_obj_rel_insert_input {
  data: response_insert_input!

  """upsert condition"""
  on_conflict: response_on_conflict
}

"""
on_conflict condition type for table "response"
"""
input response_on_conflict {
  constraint: response_constraint!
  update_columns: [response_update_column!]! = []
  where: response_bool_exp
}

"""Ordering options when selecting data from "response"."""
input response_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  id: order_by
  is_error: order_by
  operation: operation_order_by
  operation_id: order_by
  response_escape: order_by
  response_raw: order_by
  response_text: order_by
  sequence_number: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
}

"""primary key columns input for table: response"""
input response_pk_columns_input {
  id: Int!
}

"""
select columns of table "response"
"""
enum response_select_column {
  """column name"""
  apitokens_id

  """column name"""
  eventstepinstance_id

  """column name"""
  id

  """column name"""
  is_error

  """column name"""
  operation_id

  """column name"""
  response_raw

  """column name"""
  sequence_number

  """column name"""
  task_id

  """column name"""
  timestamp
}

"""
select "response_aggregate_bool_exp_bool_and_arguments_columns" columns of table "response"
"""
enum response_select_column_response_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_error
}

"""
select "response_aggregate_bool_exp_bool_or_arguments_columns" columns of table "response"
"""
enum response_select_column_response_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_error
}

"""
input type for updating data in table "response"
"""
input response_set_input {
  is_error: Boolean
  response_raw: bytea
}

"""aggregate stddev on columns"""
type response_stddev_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by stddev() on columns of table "response"
"""
input response_stddev_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""aggregate stddev_pop on columns"""
type response_stddev_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by stddev_pop() on columns of table "response"
"""
input response_stddev_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""aggregate stddev_samp on columns"""
type response_stddev_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by stddev_samp() on columns of table "response"
"""
input response_stddev_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "response"
"""
input response_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: response_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input response_stream_cursor_value_input {
  apitokens_id: Int
  eventstepinstance_id: Int
  id: Int
  is_error: Boolean
  operation_id: Int
  response_raw: bytea
  sequence_number: Int
  task_id: Int
  timestamp: timestamp
}

"""aggregate sum on columns"""
type response_sum_fields {
  apitokens_id: Int
  eventstepinstance_id: Int
  id: Int
  operation_id: Int
  sequence_number: Int
  task_id: Int
}

"""
order by sum() on columns of table "response"
"""
input response_sum_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""
update columns of table "response"
"""
enum response_update_column {
  """column name"""
  is_error

  """column name"""
  response_raw
}

input response_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: response_set_input

  """filter the rows which have to be updated"""
  where: response_bool_exp!
}

"""aggregate var_pop on columns"""
type response_var_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by var_pop() on columns of table "response"
"""
input response_var_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""aggregate var_samp on columns"""
type response_var_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by var_samp() on columns of table "response"
"""
input response_var_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

"""aggregate variance on columns"""
type response_variance_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  sequence_number: Float
  task_id: Float
}

"""
order by variance() on columns of table "response"
"""
input response_variance_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  sequence_number: order_by
  task_id: order_by
}

type sendExternalWebhookOutput {
  error: String
  status: String!
}

type startStopOutput {
  error: String
  output: String
  status: String!
  version: String
}

type subscription_root {
  """An array relationship"""
  apitokens(
    """distinct select on columns"""
    distinct_on: [apitokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [apitokens_order_by!]

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!

  """fetch data from the table: "apitokens" using primary key columns"""
  apitokens_by_pk(id: Int!): apitokens

  """
  fetch data from the table in a streaming manner: "apitokens"
  """
  apitokens_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [apitokens_stream_cursor_input]!

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!

  """
  fetch data from the table: "attack"
  """
  attack(
    """distinct select on columns"""
    distinct_on: [attack_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attack_order_by!]

    """filter the rows returned"""
    where: attack_bool_exp
  ): [attack!]!

  """fetch data from the table: "attack" using primary key columns"""
  attack_by_pk(id: Int!): attack

  """
  fetch data from the table in a streaming manner: "attack"
  """
  attack_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [attack_stream_cursor_input]!

    """filter the rows returned"""
    where: attack_bool_exp
  ): [attack!]!

  """
  fetch data from the table: "attackcommand"
  """
  attackcommand(
    """distinct select on columns"""
    distinct_on: [attackcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attackcommand_order_by!]

    """filter the rows returned"""
    where: attackcommand_bool_exp
  ): [attackcommand!]!

  """fetch data from the table: "attackcommand" using primary key columns"""
  attackcommand_by_pk(id: Int!): attackcommand

  """
  fetch data from the table in a streaming manner: "attackcommand"
  """
  attackcommand_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [attackcommand_stream_cursor_input]!

    """filter the rows returned"""
    where: attackcommand_bool_exp
  ): [attackcommand!]!

  """
  fetch data from the table: "attacktask"
  """
  attacktask(
    """distinct select on columns"""
    distinct_on: [attacktask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attacktask_order_by!]

    """filter the rows returned"""
    where: attacktask_bool_exp
  ): [attacktask!]!

  """fetch data from the table: "attacktask" using primary key columns"""
  attacktask_by_pk(id: Int!): attacktask

  """
  fetch data from the table in a streaming manner: "attacktask"
  """
  attacktask_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [attacktask_stream_cursor_input]!

    """filter the rows returned"""
    where: attacktask_bool_exp
  ): [attacktask!]!

  """
  fetch data from the table: "browserscript"
  """
  browserscript(
    """distinct select on columns"""
    distinct_on: [browserscript_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscript_order_by!]

    """filter the rows returned"""
    where: browserscript_bool_exp
  ): [browserscript!]!

  """fetch data from the table: "browserscript" using primary key columns"""
  browserscript_by_pk(id: Int!): browserscript

  """
  fetch data from the table in a streaming manner: "browserscript"
  """
  browserscript_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [browserscript_stream_cursor_input]!

    """filter the rows returned"""
    where: browserscript_bool_exp
  ): [browserscript!]!

  """
  fetch data from the table: "browserscriptoperation"
  """
  browserscriptoperation(
    """distinct select on columns"""
    distinct_on: [browserscriptoperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [browserscriptoperation_order_by!]

    """filter the rows returned"""
    where: browserscriptoperation_bool_exp
  ): [browserscriptoperation!]!

  """
  fetch data from the table: "browserscriptoperation" using primary key columns
  """
  browserscriptoperation_by_pk(id: Int!): browserscriptoperation

  """
  fetch data from the table in a streaming manner: "browserscriptoperation"
  """
  browserscriptoperation_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [browserscriptoperation_stream_cursor_input]!

    """filter the rows returned"""
    where: browserscriptoperation_bool_exp
  ): [browserscriptoperation!]!

  """
  fetch data from the table: "buildparameter"
  """
  buildparameter(
    """distinct select on columns"""
    distinct_on: [buildparameter_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameter_order_by!]

    """filter the rows returned"""
    where: buildparameter_bool_exp
  ): [buildparameter!]!

  """fetch data from the table: "buildparameter" using primary key columns"""
  buildparameter_by_pk(id: Int!): buildparameter

  """
  fetch data from the table in a streaming manner: "buildparameter"
  """
  buildparameter_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [buildparameter_stream_cursor_input]!

    """filter the rows returned"""
    where: buildparameter_bool_exp
  ): [buildparameter!]!

  """
  fetch data from the table: "buildparameterinstance"
  """
  buildparameterinstance(
    """distinct select on columns"""
    distinct_on: [buildparameterinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [buildparameterinstance_order_by!]

    """filter the rows returned"""
    where: buildparameterinstance_bool_exp
  ): [buildparameterinstance!]!

  """
  fetch data from the table: "buildparameterinstance" using primary key columns
  """
  buildparameterinstance_by_pk(id: Int!): buildparameterinstance

  """
  fetch data from the table in a streaming manner: "buildparameterinstance"
  """
  buildparameterinstance_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [buildparameterinstance_stream_cursor_input]!

    """filter the rows returned"""
    where: buildparameterinstance_bool_exp
  ): [buildparameterinstance!]!

  """
  fetch data from the table: "c2profile"
  """
  c2profile(
    """distinct select on columns"""
    distinct_on: [c2profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profile_order_by!]

    """filter the rows returned"""
    where: c2profile_bool_exp
  ): [c2profile!]!

  """fetch data from the table: "c2profile" using primary key columns"""
  c2profile_by_pk(id: Int!): c2profile

  """
  fetch data from the table in a streaming manner: "c2profile"
  """
  c2profile_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [c2profile_stream_cursor_input]!

    """filter the rows returned"""
    where: c2profile_bool_exp
  ): [c2profile!]!

  """An array relationship"""
  c2profileparameters(
    """distinct select on columns"""
    distinct_on: [c2profileparameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparameters_order_by!]

    """filter the rows returned"""
    where: c2profileparameters_bool_exp
  ): [c2profileparameters!]!

  """
  fetch data from the table: "c2profileparameters" using primary key columns
  """
  c2profileparameters_by_pk(id: Int!): c2profileparameters

  """
  fetch data from the table in a streaming manner: "c2profileparameters"
  """
  c2profileparameters_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [c2profileparameters_stream_cursor_input]!

    """filter the rows returned"""
    where: c2profileparameters_bool_exp
  ): [c2profileparameters!]!

  """
  fetch data from the table: "c2profileparametersinstance"
  """
  c2profileparametersinstance(
    """distinct select on columns"""
    distinct_on: [c2profileparametersinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [c2profileparametersinstance_order_by!]

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!

  """
  fetch data from the table: "c2profileparametersinstance" using primary key columns
  """
  c2profileparametersinstance_by_pk(id: Int!): c2profileparametersinstance

  """
  fetch data from the table in a streaming manner: "c2profileparametersinstance"
  """
  c2profileparametersinstance_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [c2profileparametersinstance_stream_cursor_input]!

    """filter the rows returned"""
    where: c2profileparametersinstance_bool_exp
  ): [c2profileparametersinstance!]!

  """
  fetch data from the table: "callback"
  """
  callback(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """
  fetch aggregated fields from the table: "callback"
  """
  callback_aggregate(
    """distinct select on columns"""
    distinct_on: [callback_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callback_order_by!]

    """filter the rows returned"""
    where: callback_bool_exp
  ): callback_aggregate!

  """fetch data from the table: "callback" using primary key columns"""
  callback_by_pk(id: Int!): callback

  """
  fetch data from the table in a streaming manner: "callback"
  """
  callback_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [callback_stream_cursor_input]!

    """filter the rows returned"""
    where: callback_bool_exp
  ): [callback!]!

  """An array relationship"""
  callbackc2profiles(
    """distinct select on columns"""
    distinct_on: [callbackc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackc2profiles_order_by!]

    """filter the rows returned"""
    where: callbackc2profiles_bool_exp
  ): [callbackc2profiles!]!

  """
  fetch data from the table: "callbackc2profiles" using primary key columns
  """
  callbackc2profiles_by_pk(id: Int!): callbackc2profiles

  """
  fetch data from the table in a streaming manner: "callbackc2profiles"
  """
  callbackc2profiles_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [callbackc2profiles_stream_cursor_input]!

    """filter the rows returned"""
    where: callbackc2profiles_bool_exp
  ): [callbackc2profiles!]!

  """
  fetch data from the table: "callbackgraphedge"
  """
  callbackgraphedge(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """
  fetch aggregated fields from the table: "callbackgraphedge"
  """
  callbackgraphedge_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackgraphedge_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackgraphedge_order_by!]

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): callbackgraphedge_aggregate!

  """
  fetch data from the table: "callbackgraphedge" using primary key columns
  """
  callbackgraphedge_by_pk(id: Int!): callbackgraphedge

  """
  fetch data from the table in a streaming manner: "callbackgraphedge"
  """
  callbackgraphedge_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [callbackgraphedge_stream_cursor_input]!

    """filter the rows returned"""
    where: callbackgraphedge_bool_exp
  ): [callbackgraphedge!]!

  """
  fetch data from the table: "callbackport"
  """
  callbackport(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): [callbackport!]!

  """
  fetch aggregated fields from the table: "callbackport"
  """
  callbackport_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): callbackport_aggregate!

  """fetch data from the table: "callbackport" using primary key columns"""
  callbackport_by_pk(id: Int!): callbackport

  """
  fetch data from the table in a streaming manner: "callbackport"
  """
  callbackport_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [callbackport_stream_cursor_input]!

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): [callbackport!]!

  """
  fetch data from the table: "callbacktoken"
  """
  callbacktoken(
    """distinct select on columns"""
    distinct_on: [callbacktoken_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbacktoken_order_by!]

    """filter the rows returned"""
    where: callbacktoken_bool_exp
  ): [callbacktoken!]!

  """fetch data from the table: "callbacktoken" using primary key columns"""
  callbacktoken_by_pk(id: Int!): callbacktoken

  """
  fetch data from the table in a streaming manner: "callbacktoken"
  """
  callbacktoken_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [callbacktoken_stream_cursor_input]!

    """filter the rows returned"""
    where: callbacktoken_bool_exp
  ): [callbacktoken!]!

  """
  fetch data from the table: "command"
  """
  command(
    """distinct select on columns"""
    distinct_on: [command_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [command_order_by!]

    """filter the rows returned"""
    where: command_bool_exp
  ): [command!]!

  """
  fetch aggregated fields from the table: "command"
  """
  command_aggregate(
    """distinct select on columns"""
    distinct_on: [command_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [command_order_by!]

    """filter the rows returned"""
    where: command_bool_exp
  ): command_aggregate!

  """fetch data from the table: "command" using primary key columns"""
  command_by_pk(id: Int!): command

  """
  fetch data from the table in a streaming manner: "command"
  """
  command_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [command_stream_cursor_input]!

    """filter the rows returned"""
    where: command_bool_exp
  ): [command!]!

  """An array relationship"""
  commandparameters(
    """distinct select on columns"""
    distinct_on: [commandparameters_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [commandparameters_order_by!]

    """filter the rows returned"""
    where: commandparameters_bool_exp
  ): [commandparameters!]!

  """
  fetch data from the table: "commandparameters" using primary key columns
  """
  commandparameters_by_pk(id: Int!): commandparameters

  """
  fetch data from the table in a streaming manner: "commandparameters"
  """
  commandparameters_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [commandparameters_stream_cursor_input]!

    """filter the rows returned"""
    where: commandparameters_bool_exp
  ): [commandparameters!]!

  """
  fetch data from the table: "consuming_container"
  """
  consuming_container(
    """distinct select on columns"""
    distinct_on: [consuming_container_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [consuming_container_order_by!]

    """filter the rows returned"""
    where: consuming_container_bool_exp
  ): [consuming_container!]!

  """
  fetch data from the table: "consuming_container" using primary key columns
  """
  consuming_container_by_pk(id: Int!): consuming_container

  """
  fetch data from the table in a streaming manner: "consuming_container"
  """
  consuming_container_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [consuming_container_stream_cursor_input]!

    """filter the rows returned"""
    where: consuming_container_bool_exp
  ): [consuming_container!]!

  """
  fetch data from the table: "credential"
  """
  credential(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """
  fetch aggregated fields from the table: "credential"
  """
  credential_aggregate(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): credential_aggregate!

  """fetch data from the table: "credential" using primary key columns"""
  credential_by_pk(id: Int!): credential

  """
  fetch data from the table in a streaming manner: "credential"
  """
  credential_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [credential_stream_cursor_input]!

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """
  fetch data from the table: "disabledcommandsprofile"
  """
  disabledcommandsprofile(
    """distinct select on columns"""
    distinct_on: [disabledcommandsprofile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [disabledcommandsprofile_order_by!]

    """filter the rows returned"""
    where: disabledcommandsprofile_bool_exp
  ): [disabledcommandsprofile!]!

  """
  fetch data from the table: "disabledcommandsprofile" using primary key columns
  """
  disabledcommandsprofile_by_pk(id: Int!): disabledcommandsprofile

  """
  fetch data from the table in a streaming manner: "disabledcommandsprofile"
  """
  disabledcommandsprofile_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [disabledcommandsprofile_stream_cursor_input]!

    """filter the rows returned"""
    where: disabledcommandsprofile_bool_exp
  ): [disabledcommandsprofile!]!

  """
  fetch data from the table: "eventgroup"
  """
  eventgroup(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): [eventgroup!]!

  """
  fetch aggregated fields from the table: "eventgroup"
  """
  eventgroup_aggregate(
    """distinct select on columns"""
    distinct_on: [eventgroup_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroup_order_by!]

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): eventgroup_aggregate!

  """fetch data from the table: "eventgroup" using primary key columns"""
  eventgroup_by_pk(id: Int!): eventgroup

  """
  fetch data from the table in a streaming manner: "eventgroup"
  """
  eventgroup_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eventgroup_stream_cursor_input]!

    """filter the rows returned"""
    where: eventgroup_bool_exp
  ): [eventgroup!]!

  """
  fetch data from the table: "eventgroupapproval"
  """
  eventgroupapproval(
    """distinct select on columns"""
    distinct_on: [eventgroupapproval_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupapproval_order_by!]

    """filter the rows returned"""
    where: eventgroupapproval_bool_exp
  ): [eventgroupapproval!]!

  """
  fetch data from the table: "eventgroupapproval" using primary key columns
  """
  eventgroupapproval_by_pk(id: Int!): eventgroupapproval

  """
  fetch data from the table in a streaming manner: "eventgroupapproval"
  """
  eventgroupapproval_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eventgroupapproval_stream_cursor_input]!

    """filter the rows returned"""
    where: eventgroupapproval_bool_exp
  ): [eventgroupapproval!]!

  """
  fetch data from the table: "eventgroupinstance"
  """
  eventgroupinstance(
    """distinct select on columns"""
    distinct_on: [eventgroupinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventgroupinstance_order_by!]

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """
  fetch data from the table: "eventgroupinstance" using primary key columns
  """
  eventgroupinstance_by_pk(id: Int!): eventgroupinstance

  """
  fetch data from the table in a streaming manner: "eventgroupinstance"
  """
  eventgroupinstance_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eventgroupinstance_stream_cursor_input]!

    """filter the rows returned"""
    where: eventgroupinstance_bool_exp
  ): [eventgroupinstance!]!

  """
  fetch data from the table: "eventstep"
  """
  eventstep(
    """distinct select on columns"""
    distinct_on: [eventstep_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstep_order_by!]

    """filter the rows returned"""
    where: eventstep_bool_exp
  ): [eventstep!]!

  """fetch data from the table: "eventstep" using primary key columns"""
  eventstep_by_pk(id: Int!): eventstep

  """
  fetch data from the table in a streaming manner: "eventstep"
  """
  eventstep_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eventstep_stream_cursor_input]!

    """filter the rows returned"""
    where: eventstep_bool_exp
  ): [eventstep!]!

  """
  fetch data from the table: "eventstepinstance"
  """
  eventstepinstance(
    """distinct select on columns"""
    distinct_on: [eventstepinstance_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [eventstepinstance_order_by!]

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!

  """
  fetch data from the table: "eventstepinstance" using primary key columns
  """
  eventstepinstance_by_pk(id: Int!): eventstepinstance

  """
  fetch data from the table in a streaming manner: "eventstepinstance"
  """
  eventstepinstance_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [eventstepinstance_stream_cursor_input]!

    """filter the rows returned"""
    where: eventstepinstance_bool_exp
  ): [eventstepinstance!]!

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!

  """fetch data from the table: "filemeta" using primary key columns"""
  filemeta_by_pk(id: Int!): filemeta

  """
  fetch data from the table in a streaming manner: "filemeta"
  """
  filemeta_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [filemeta_stream_cursor_input]!

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """
  fetch data from the table: "keylog"
  """
  keylog(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): [keylog!]!

  """
  fetch aggregated fields from the table: "keylog"
  """
  keylog_aggregate(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): keylog_aggregate!

  """fetch data from the table: "keylog" using primary key columns"""
  keylog_by_pk(id: Int!): keylog

  """
  fetch data from the table in a streaming manner: "keylog"
  """
  keylog_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [keylog_stream_cursor_input]!

    """filter the rows returned"""
    where: keylog_bool_exp
  ): [keylog!]!

  """An array relationship"""
  loadedcommands(
    """distinct select on columns"""
    distinct_on: [loadedcommands_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [loadedcommands_order_by!]

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!

  """fetch data from the table: "loadedcommands" using primary key columns"""
  loadedcommands_by_pk(id: Int!): loadedcommands

  """
  fetch data from the table in a streaming manner: "loadedcommands"
  """
  loadedcommands_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [loadedcommands_stream_cursor_input]!

    """filter the rows returned"""
    where: loadedcommands_bool_exp
  ): [loadedcommands!]!

  """
  fetch data from the table: "mythictree"
  """
  mythictree(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """
  fetch aggregated fields from the table: "mythictree"
  """
  mythictree_aggregate(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): mythictree_aggregate!

  """fetch data from the table: "mythictree" using primary key columns"""
  mythictree_by_pk(id: Int!): mythictree

  """
  fetch data from the table in a streaming manner: "mythictree"
  """
  mythictree_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [mythictree_stream_cursor_input]!

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """
  fetch data from the table: "operation"
  """
  operation(
    """distinct select on columns"""
    distinct_on: [operation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operation_order_by!]

    """filter the rows returned"""
    where: operation_bool_exp
  ): [operation!]!

  """fetch data from the table: "operation" using primary key columns"""
  operation_by_pk(id: Int!): operation

  """
  fetch data from the table in a streaming manner: "operation"
  """
  operation_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [operation_stream_cursor_input]!

    """filter the rows returned"""
    where: operation_bool_exp
  ): [operation!]!

  """
  fetch data from the table: "operationeventlog"
  """
  operationeventlog(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): [operationeventlog!]!

  """
  fetch aggregated fields from the table: "operationeventlog"
  """
  operationeventlog_aggregate(
    """distinct select on columns"""
    distinct_on: [operationeventlog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operationeventlog_order_by!]

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): operationeventlog_aggregate!

  """
  fetch data from the table: "operationeventlog" using primary key columns
  """
  operationeventlog_by_pk(id: Int!): operationeventlog

  """
  fetch data from the table in a streaming manner: "operationeventlog"
  """
  operationeventlog_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [operationeventlog_stream_cursor_input]!

    """filter the rows returned"""
    where: operationeventlog_bool_exp
  ): [operationeventlog!]!

  """
  fetch data from the table: "operator"
  """
  operator(
    """distinct select on columns"""
    distinct_on: [operator_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operator_order_by!]

    """filter the rows returned"""
    where: operator_bool_exp
  ): [operator!]!

  """fetch data from the table: "operator" using primary key columns"""
  operator_by_pk(id: Int!): operator

  """
  fetch data from the table in a streaming manner: "operator"
  """
  operator_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [operator_stream_cursor_input]!

    """filter the rows returned"""
    where: operator_bool_exp
  ): [operator!]!

  """
  fetch data from the table: "operatoroperation"
  """
  operatoroperation(
    """distinct select on columns"""
    distinct_on: [operatoroperation_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [operatoroperation_order_by!]

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!

  """
  fetch data from the table: "operatoroperation" using primary key columns
  """
  operatoroperation_by_pk(id: Int!): operatoroperation

  """
  fetch data from the table in a streaming manner: "operatoroperation"
  """
  operatoroperation_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [operatoroperation_stream_cursor_input]!

    """filter the rows returned"""
    where: operatoroperation_bool_exp
  ): [operatoroperation!]!

  """
  fetch data from the table: "payload"
  """
  payload(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """
  fetch aggregated fields from the table: "payload"
  """
  payload_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!

  """
  fetch data from the table: "payload_build_step"
  """
  payload_build_step(
    """distinct select on columns"""
    distinct_on: [payload_build_step_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_build_step_order_by!]

    """filter the rows returned"""
    where: payload_build_step_bool_exp
  ): [payload_build_step!]!

  """
  fetch data from the table: "payload_build_step" using primary key columns
  """
  payload_build_step_by_pk(id: Int!): payload_build_step

  """
  fetch data from the table in a streaming manner: "payload_build_step"
  """
  payload_build_step_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payload_build_step_stream_cursor_input]!

    """filter the rows returned"""
    where: payload_build_step_bool_exp
  ): [payload_build_step!]!

  """fetch data from the table: "payload" using primary key columns"""
  payload_by_pk(id: Int!): payload

  """
  fetch data from the table in a streaming manner: "payload"
  """
  payload_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payload_stream_cursor_input]!

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An array relationship"""
  payloadc2profiles(
    """distinct select on columns"""
    distinct_on: [payloadc2profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadc2profiles_order_by!]

    """filter the rows returned"""
    where: payloadc2profiles_bool_exp
  ): [payloadc2profiles!]!

  """
  fetch data from the table: "payloadc2profiles" using primary key columns
  """
  payloadc2profiles_by_pk(id: Int!): payloadc2profiles

  """
  fetch data from the table in a streaming manner: "payloadc2profiles"
  """
  payloadc2profiles_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payloadc2profiles_stream_cursor_input]!

    """filter the rows returned"""
    where: payloadc2profiles_bool_exp
  ): [payloadc2profiles!]!

  """
  fetch data from the table: "payloadcommand"
  """
  payloadcommand(
    """distinct select on columns"""
    distinct_on: [payloadcommand_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadcommand_order_by!]

    """filter the rows returned"""
    where: payloadcommand_bool_exp
  ): [payloadcommand!]!

  """fetch data from the table: "payloadcommand" using primary key columns"""
  payloadcommand_by_pk(id: Int!): payloadcommand

  """
  fetch data from the table in a streaming manner: "payloadcommand"
  """
  payloadcommand_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payloadcommand_stream_cursor_input]!

    """filter the rows returned"""
    where: payloadcommand_bool_exp
  ): [payloadcommand!]!

  """
  fetch data from the table: "payloadonhost"
  """
  payloadonhost(
    """distinct select on columns"""
    distinct_on: [payloadonhost_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadonhost_order_by!]

    """filter the rows returned"""
    where: payloadonhost_bool_exp
  ): [payloadonhost!]!

  """fetch data from the table: "payloadonhost" using primary key columns"""
  payloadonhost_by_pk(id: Int!): payloadonhost

  """
  fetch data from the table in a streaming manner: "payloadonhost"
  """
  payloadonhost_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payloadonhost_stream_cursor_input]!

    """filter the rows returned"""
    where: payloadonhost_bool_exp
  ): [payloadonhost!]!

  """
  fetch data from the table: "payloadtype"
  """
  payloadtype(
    """distinct select on columns"""
    distinct_on: [payloadtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtype_order_by!]

    """filter the rows returned"""
    where: payloadtype_bool_exp
  ): [payloadtype!]!

  """fetch data from the table: "payloadtype" using primary key columns"""
  payloadtype_by_pk(id: Int!): payloadtype

  """
  fetch data from the table in a streaming manner: "payloadtype"
  """
  payloadtype_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payloadtype_stream_cursor_input]!

    """filter the rows returned"""
    where: payloadtype_bool_exp
  ): [payloadtype!]!

  """
  fetch data from the table: "payloadtypec2profile"
  """
  payloadtypec2profile(
    """distinct select on columns"""
    distinct_on: [payloadtypec2profile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtypec2profile_order_by!]

    """filter the rows returned"""
    where: payloadtypec2profile_bool_exp
  ): [payloadtypec2profile!]!

  """
  fetch data from the table: "payloadtypec2profile" using primary key columns
  """
  payloadtypec2profile_by_pk(id: Int!): payloadtypec2profile

  """
  fetch data from the table in a streaming manner: "payloadtypec2profile"
  """
  payloadtypec2profile_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [payloadtypec2profile_stream_cursor_input]!

    """filter the rows returned"""
    where: payloadtypec2profile_bool_exp
  ): [payloadtypec2profile!]!

  """
  fetch data from the table: "response"
  """
  response(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """
  fetch aggregated fields from the table: "response"
  """
  response_aggregate(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): response_aggregate!

  """fetch data from the table: "response" using primary key columns"""
  response_by_pk(id: Int!): response

  """
  fetch data from the table in a streaming manner: "response"
  """
  response_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [response_stream_cursor_input]!

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """
  fetch data from the table: "tag"
  """
  tag(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch aggregated fields from the table: "tag"
  """
  tag_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """fetch data from the table: "tag" using primary key columns"""
  tag_by_pk(id: Int!): tag

  """
  fetch data from the table in a streaming manner: "tag"
  """
  tag_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [tag_stream_cursor_input]!

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """
  fetch data from the table: "tagtype"
  """
  tagtype(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): [tagtype!]!

  """
  fetch aggregated fields from the table: "tagtype"
  """
  tagtype_aggregate(
    """distinct select on columns"""
    distinct_on: [tagtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tagtype_order_by!]

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): tagtype_aggregate!

  """fetch data from the table: "tagtype" using primary key columns"""
  tagtype_by_pk(id: Int!): tagtype

  """
  fetch data from the table in a streaming manner: "tagtype"
  """
  tagtype_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [tagtype_stream_cursor_input]!

    """filter the rows returned"""
    where: tagtype_bool_exp
  ): [tagtype!]!

  """
  fetch data from the table: "task"
  """
  task(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """
  fetch aggregated fields from the table: "task"
  """
  task_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!

  """fetch data from the table: "task" using primary key columns"""
  task_by_pk(id: Int!): task

  """
  fetch data from the table in a streaming manner: "task"
  """
  task_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [task_stream_cursor_input]!

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """
  fetch data from the table: "taskartifact"
  """
  taskartifact(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """
  fetch aggregated fields from the table: "taskartifact"
  """
  taskartifact_aggregate(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): taskartifact_aggregate!

  """fetch data from the table: "taskartifact" using primary key columns"""
  taskartifact_by_pk(id: Int!): taskartifact

  """
  fetch data from the table in a streaming manner: "taskartifact"
  """
  taskartifact_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [taskartifact_stream_cursor_input]!

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """
  fetch data from the table: "token"
  """
  token(
    """distinct select on columns"""
    distinct_on: [token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_order_by!]

    """filter the rows returned"""
    where: token_bool_exp
  ): [token!]!

  """
  fetch aggregated fields from the table: "token"
  """
  token_aggregate(
    """distinct select on columns"""
    distinct_on: [token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_order_by!]

    """filter the rows returned"""
    where: token_bool_exp
  ): token_aggregate!

  """fetch data from the table: "token" using primary key columns"""
  token_by_pk(id: Int!): token

  """
  fetch data from the table in a streaming manner: "token"
  """
  token_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [token_stream_cursor_input]!

    """filter the rows returned"""
    where: token_bool_exp
  ): [token!]!

  """
  fetch data from the table: "translationcontainer"
  """
  translationcontainer(
    """distinct select on columns"""
    distinct_on: [translationcontainer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [translationcontainer_order_by!]

    """filter the rows returned"""
    where: translationcontainer_bool_exp
  ): [translationcontainer!]!

  """
  fetch data from the table: "translationcontainer" using primary key columns
  """
  translationcontainer_by_pk(id: Int!): translationcontainer

  """
  fetch data from the table in a streaming manner: "translationcontainer"
  """
  translationcontainer_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [translationcontainer_stream_cursor_input]!

    """filter the rows returned"""
    where: translationcontainer_bool_exp
  ): [translationcontainer!]!

  """
  fetch data from the table: "wrappedpayloadtypes"
  """
  wrappedpayloadtypes(
    """distinct select on columns"""
    distinct_on: [wrappedpayloadtypes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [wrappedpayloadtypes_order_by!]

    """filter the rows returned"""
    where: wrappedpayloadtypes_bool_exp
  ): [wrappedpayloadtypes!]!

  """
  fetch data from the table: "wrappedpayloadtypes" using primary key columns
  """
  wrappedpayloadtypes_by_pk(id: Int!): wrappedpayloadtypes

  """
  fetch data from the table in a streaming manner: "wrappedpayloadtypes"
  """
  wrappedpayloadtypes_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [wrappedpayloadtypes_stream_cursor_input]!

    """filter the rows returned"""
    where: wrappedpayloadtypes_bool_exp
  ): [wrappedpayloadtypes!]!
}

"""
columns and relationships of "tag"
"""
type tag {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int

  """An object relationship"""
  credential: credential
  credential_id: Int
  data(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  filemeta_id: Int

  """An object relationship"""
  filemetum: filemeta
  id: Int!

  """An object relationship"""
  keylog: keylog
  keylog_id: Int

  """An object relationship"""
  mythictree: mythictree
  mythictree_id: Int

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An object relationship"""
  response: response
  response_id: Int
  source: String!

  """An object relationship"""
  tagtype: tagtype!
  tagtype_id: Int!

  """An object relationship"""
  task: task
  task_id: Int

  """An object relationship"""
  taskartifact: taskartifact
  taskartifact_id: Int
  url: String!
}

"""
aggregated selection of "tag"
"""
type tag_aggregate {
  aggregate: tag_aggregate_fields
  nodes: [tag!]!
}

input tag_aggregate_bool_exp {
  count: tag_aggregate_bool_exp_count
}

input tag_aggregate_bool_exp_count {
  arguments: [tag_select_column!]
  distinct: Boolean
  filter: tag_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "tag"
"""
type tag_aggregate_fields {
  avg: tag_avg_fields
  count(columns: [tag_select_column!], distinct: Boolean): Int!
  max: tag_max_fields
  min: tag_min_fields
  stddev: tag_stddev_fields
  stddev_pop: tag_stddev_pop_fields
  stddev_samp: tag_stddev_samp_fields
  sum: tag_sum_fields
  var_pop: tag_var_pop_fields
  var_samp: tag_var_samp_fields
  variance: tag_variance_fields
}

"""
order by aggregate values of table "tag"
"""
input tag_aggregate_order_by {
  avg: tag_avg_order_by
  count: order_by
  max: tag_max_order_by
  min: tag_min_order_by
  stddev: tag_stddev_order_by
  stddev_pop: tag_stddev_pop_order_by
  stddev_samp: tag_stddev_samp_order_by
  sum: tag_sum_order_by
  var_pop: tag_var_pop_order_by
  var_samp: tag_var_samp_order_by
  variance: tag_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input tag_append_input {
  data: jsonb
}

"""
input type for inserting array relation for remote table "tag"
"""
input tag_arr_rel_insert_input {
  data: [tag_insert_input!]!

  """upsert condition"""
  on_conflict: tag_on_conflict
}

"""aggregate avg on columns"""
type tag_avg_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by avg() on columns of table "tag"
"""
input tag_avg_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""
Boolean expression to filter rows from the table "tag". All fields are combined with a logical 'AND'.
"""
input tag_bool_exp {
  _and: [tag_bool_exp!]
  _not: tag_bool_exp
  _or: [tag_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  credential: credential_bool_exp
  credential_id: Int_comparison_exp
  data: jsonb_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  filemeta_id: Int_comparison_exp
  filemetum: filemeta_bool_exp
  id: Int_comparison_exp
  keylog: keylog_bool_exp
  keylog_id: Int_comparison_exp
  mythictree: mythictree_bool_exp
  mythictree_id: Int_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  response: response_bool_exp
  response_id: Int_comparison_exp
  source: String_comparison_exp
  tagtype: tagtype_bool_exp
  tagtype_id: Int_comparison_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  taskartifact: taskartifact_bool_exp
  taskartifact_id: Int_comparison_exp
  url: String_comparison_exp
}

"""
unique or primary key constraints on table "tag"
"""
enum tag_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  tag_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input tag_delete_at_path_input {
  data: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input tag_delete_elem_input {
  data: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input tag_delete_key_input {
  data: String
}

"""
input type for incrementing numeric columns in table "tag"
"""
input tag_inc_input {
  credential_id: Int
  eventstepinstance_id: Int
  filemeta_id: Int
  keylog_id: Int
  mythictree_id: Int
  response_id: Int
  tagtype_id: Int
  task_id: Int
  taskartifact_id: Int
}

"""
input type for inserting data into table "tag"
"""
input tag_insert_input {
  apitokens_id: Int
  credential_id: Int
  data: jsonb
  eventstepinstance_id: Int
  filemeta_id: Int
  keylog_id: Int
  mythictree_id: Int
  response: response_obj_rel_insert_input
  response_id: Int
  source: String
  tagtype: tagtype_obj_rel_insert_input
  tagtype_id: Int
  task_id: Int
  taskartifact: taskartifact_obj_rel_insert_input
  taskartifact_id: Int
  url: String
}

"""aggregate max on columns"""
type tag_max_fields {
  apitokens_id: Int
  credential_id: Int
  eventstepinstance_id: Int
  filemeta_id: Int
  id: Int
  keylog_id: Int
  mythictree_id: Int
  operation_id: Int
  response_id: Int
  source: String
  tagtype_id: Int
  task_id: Int
  taskartifact_id: Int
  url: String
}

"""
order by max() on columns of table "tag"
"""
input tag_max_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  source: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
  url: order_by
}

"""aggregate min on columns"""
type tag_min_fields {
  apitokens_id: Int
  credential_id: Int
  eventstepinstance_id: Int
  filemeta_id: Int
  id: Int
  keylog_id: Int
  mythictree_id: Int
  operation_id: Int
  response_id: Int
  source: String
  tagtype_id: Int
  task_id: Int
  taskartifact_id: Int
  url: String
}

"""
order by min() on columns of table "tag"
"""
input tag_min_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  source: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
  url: order_by
}

"""
response of any mutation on the table "tag"
"""
type tag_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [tag!]!
}

"""
on_conflict condition type for table "tag"
"""
input tag_on_conflict {
  constraint: tag_constraint!
  update_columns: [tag_update_column!]! = []
  where: tag_bool_exp
}

"""Ordering options when selecting data from "tag"."""
input tag_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  credential: credential_order_by
  credential_id: order_by
  data: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  filemetum: filemeta_order_by
  id: order_by
  keylog: keylog_order_by
  keylog_id: order_by
  mythictree: mythictree_order_by
  mythictree_id: order_by
  operation: operation_order_by
  operation_id: order_by
  response: response_order_by
  response_id: order_by
  source: order_by
  tagtype: tagtype_order_by
  tagtype_id: order_by
  task: task_order_by
  task_id: order_by
  taskartifact: taskartifact_order_by
  taskartifact_id: order_by
  url: order_by
}

"""primary key columns input for table: tag"""
input tag_pk_columns_input {
  id: Int!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input tag_prepend_input {
  data: jsonb
}

"""
select columns of table "tag"
"""
enum tag_select_column {
  """column name"""
  apitokens_id

  """column name"""
  credential_id

  """column name"""
  data

  """column name"""
  eventstepinstance_id

  """column name"""
  filemeta_id

  """column name"""
  id

  """column name"""
  keylog_id

  """column name"""
  mythictree_id

  """column name"""
  operation_id

  """column name"""
  response_id

  """column name"""
  source

  """column name"""
  tagtype_id

  """column name"""
  task_id

  """column name"""
  taskartifact_id

  """column name"""
  url
}

"""
input type for updating data in table "tag"
"""
input tag_set_input {
  credential_id: Int
  data: jsonb
  eventstepinstance_id: Int
  filemeta_id: Int
  keylog_id: Int
  mythictree_id: Int
  response_id: Int
  source: String
  tagtype_id: Int
  task_id: Int
  taskartifact_id: Int
  url: String
}

"""aggregate stddev on columns"""
type tag_stddev_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by stddev() on columns of table "tag"
"""
input tag_stddev_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""aggregate stddev_pop on columns"""
type tag_stddev_pop_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by stddev_pop() on columns of table "tag"
"""
input tag_stddev_pop_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""aggregate stddev_samp on columns"""
type tag_stddev_samp_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by stddev_samp() on columns of table "tag"
"""
input tag_stddev_samp_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""
Streaming cursor of the table "tag"
"""
input tag_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: tag_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input tag_stream_cursor_value_input {
  apitokens_id: Int
  credential_id: Int
  data: jsonb
  eventstepinstance_id: Int
  filemeta_id: Int
  id: Int
  keylog_id: Int
  mythictree_id: Int
  operation_id: Int
  response_id: Int
  source: String
  tagtype_id: Int
  task_id: Int
  taskartifact_id: Int
  url: String
}

"""aggregate sum on columns"""
type tag_sum_fields {
  apitokens_id: Int
  credential_id: Int
  eventstepinstance_id: Int
  filemeta_id: Int
  id: Int
  keylog_id: Int
  mythictree_id: Int
  operation_id: Int
  response_id: Int
  tagtype_id: Int
  task_id: Int
  taskartifact_id: Int
}

"""
order by sum() on columns of table "tag"
"""
input tag_sum_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""
update columns of table "tag"
"""
enum tag_update_column {
  """column name"""
  credential_id

  """column name"""
  data

  """column name"""
  eventstepinstance_id

  """column name"""
  filemeta_id

  """column name"""
  keylog_id

  """column name"""
  mythictree_id

  """column name"""
  response_id

  """column name"""
  source

  """column name"""
  tagtype_id

  """column name"""
  task_id

  """column name"""
  taskartifact_id

  """column name"""
  url
}

input tag_updates {
  """append existing jsonb value of filtered columns with new jsonb value"""
  _append: tag_append_input

  """
  delete the field or element with specified path (for JSON arrays, negative integers count from the end)
  """
  _delete_at_path: tag_delete_at_path_input

  """
  delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
  """
  _delete_elem: tag_delete_elem_input

  """
  delete key/value pair or string element. key/value pairs are matched based on their key value
  """
  _delete_key: tag_delete_key_input

  """increments the numeric columns with given value of the filtered values"""
  _inc: tag_inc_input

  """prepend existing jsonb value of filtered columns with new jsonb value"""
  _prepend: tag_prepend_input

  """sets the columns of the filtered rows to the given values"""
  _set: tag_set_input

  """filter the rows which have to be updated"""
  where: tag_bool_exp!
}

"""aggregate var_pop on columns"""
type tag_var_pop_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by var_pop() on columns of table "tag"
"""
input tag_var_pop_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""aggregate var_samp on columns"""
type tag_var_samp_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by var_samp() on columns of table "tag"
"""
input tag_var_samp_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""aggregate variance on columns"""
type tag_variance_fields {
  apitokens_id: Float
  credential_id: Float
  eventstepinstance_id: Float
  filemeta_id: Float
  id: Float
  keylog_id: Float
  mythictree_id: Float
  operation_id: Float
  response_id: Float
  tagtype_id: Float
  task_id: Float
  taskartifact_id: Float
}

"""
order by variance() on columns of table "tag"
"""
input tag_variance_order_by {
  apitokens_id: order_by
  credential_id: order_by
  eventstepinstance_id: order_by
  filemeta_id: order_by
  id: order_by
  keylog_id: order_by
  mythictree_id: order_by
  operation_id: order_by
  response_id: order_by
  tagtype_id: order_by
  task_id: order_by
  taskartifact_id: order_by
}

"""
columns and relationships of "tagtype"
"""
type tagtype {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  color: String!
  description: String!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  id: Int!
  name: String!

  """An object relationship"""
  operation: operation!
  operation_id: Int!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!
}

"""
aggregated selection of "tagtype"
"""
type tagtype_aggregate {
  aggregate: tagtype_aggregate_fields
  nodes: [tagtype!]!
}

input tagtype_aggregate_bool_exp {
  count: tagtype_aggregate_bool_exp_count
}

input tagtype_aggregate_bool_exp_count {
  arguments: [tagtype_select_column!]
  distinct: Boolean
  filter: tagtype_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "tagtype"
"""
type tagtype_aggregate_fields {
  avg: tagtype_avg_fields
  count(columns: [tagtype_select_column!], distinct: Boolean): Int!
  max: tagtype_max_fields
  min: tagtype_min_fields
  stddev: tagtype_stddev_fields
  stddev_pop: tagtype_stddev_pop_fields
  stddev_samp: tagtype_stddev_samp_fields
  sum: tagtype_sum_fields
  var_pop: tagtype_var_pop_fields
  var_samp: tagtype_var_samp_fields
  variance: tagtype_variance_fields
}

"""
order by aggregate values of table "tagtype"
"""
input tagtype_aggregate_order_by {
  avg: tagtype_avg_order_by
  count: order_by
  max: tagtype_max_order_by
  min: tagtype_min_order_by
  stddev: tagtype_stddev_order_by
  stddev_pop: tagtype_stddev_pop_order_by
  stddev_samp: tagtype_stddev_samp_order_by
  sum: tagtype_sum_order_by
  var_pop: tagtype_var_pop_order_by
  var_samp: tagtype_var_samp_order_by
  variance: tagtype_variance_order_by
}

"""aggregate avg on columns"""
type tagtype_avg_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by avg() on columns of table "tagtype"
"""
input tagtype_avg_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""
Boolean expression to filter rows from the table "tagtype". All fields are combined with a logical 'AND'.
"""
input tagtype_bool_exp {
  _and: [tagtype_bool_exp!]
  _not: tagtype_bool_exp
  _or: [tagtype_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  color: String_comparison_exp
  description: String_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
}

"""
unique or primary key constraints on table "tagtype"
"""
enum tagtype_constraint {
  """
  unique or primary key constraint on columns "operation_id", "name"
  """
  tagtype_name_operation_id_key

  """
  unique or primary key constraint on columns "id"
  """
  tagtype_pkey
}

"""
input type for inserting data into table "tagtype"
"""
input tagtype_insert_input {
  apitokens_id: Int
  color: String
  description: String
  eventstepinstance_id: Int
  name: String
  tags: tag_arr_rel_insert_input
}

"""aggregate max on columns"""
type tagtype_max_fields {
  apitokens_id: Int
  color: String
  description: String
  eventstepinstance_id: Int
  id: Int
  name: String
  operation_id: Int
}

"""
order by max() on columns of table "tagtype"
"""
input tagtype_max_order_by {
  apitokens_id: order_by
  color: order_by
  description: order_by
  eventstepinstance_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
}

"""aggregate min on columns"""
type tagtype_min_fields {
  apitokens_id: Int
  color: String
  description: String
  eventstepinstance_id: Int
  id: Int
  name: String
  operation_id: Int
}

"""
order by min() on columns of table "tagtype"
"""
input tagtype_min_order_by {
  apitokens_id: order_by
  color: order_by
  description: order_by
  eventstepinstance_id: order_by
  id: order_by
  name: order_by
  operation_id: order_by
}

"""
response of any mutation on the table "tagtype"
"""
type tagtype_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [tagtype!]!
}

"""
input type for inserting object relation for remote table "tagtype"
"""
input tagtype_obj_rel_insert_input {
  data: tagtype_insert_input!

  """upsert condition"""
  on_conflict: tagtype_on_conflict
}

"""
on_conflict condition type for table "tagtype"
"""
input tagtype_on_conflict {
  constraint: tagtype_constraint!
  update_columns: [tagtype_update_column!]! = []
  where: tagtype_bool_exp
}

"""Ordering options when selecting data from "tagtype"."""
input tagtype_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  color: order_by
  description: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  id: order_by
  name: order_by
  operation: operation_order_by
  operation_id: order_by
  tags_aggregate: tag_aggregate_order_by
}

"""primary key columns input for table: tagtype"""
input tagtype_pk_columns_input {
  id: Int!
}

"""
select columns of table "tagtype"
"""
enum tagtype_select_column {
  """column name"""
  apitokens_id

  """column name"""
  color

  """column name"""
  description

  """column name"""
  eventstepinstance_id

  """column name"""
  id

  """column name"""
  name

  """column name"""
  operation_id
}

"""
input type for updating data in table "tagtype"
"""
input tagtype_set_input {
  color: String
  description: String
  name: String
}

"""aggregate stddev on columns"""
type tagtype_stddev_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by stddev() on columns of table "tagtype"
"""
input tagtype_stddev_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""aggregate stddev_pop on columns"""
type tagtype_stddev_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by stddev_pop() on columns of table "tagtype"
"""
input tagtype_stddev_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""aggregate stddev_samp on columns"""
type tagtype_stddev_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by stddev_samp() on columns of table "tagtype"
"""
input tagtype_stddev_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""
Streaming cursor of the table "tagtype"
"""
input tagtype_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: tagtype_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input tagtype_stream_cursor_value_input {
  apitokens_id: Int
  color: String
  description: String
  eventstepinstance_id: Int
  id: Int
  name: String
  operation_id: Int
}

"""aggregate sum on columns"""
type tagtype_sum_fields {
  apitokens_id: Int
  eventstepinstance_id: Int
  id: Int
  operation_id: Int
}

"""
order by sum() on columns of table "tagtype"
"""
input tagtype_sum_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""
update columns of table "tagtype"
"""
enum tagtype_update_column {
  """column name"""
  color

  """column name"""
  description

  """column name"""
  name
}

input tagtype_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: tagtype_set_input

  """filter the rows which have to be updated"""
  where: tagtype_bool_exp!
}

"""aggregate var_pop on columns"""
type tagtype_var_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by var_pop() on columns of table "tagtype"
"""
input tagtype_var_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""aggregate var_samp on columns"""
type tagtype_var_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by var_samp() on columns of table "tagtype"
"""
input tagtype_var_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""aggregate variance on columns"""
type tagtype_variance_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
}

"""
order by variance() on columns of table "tagtype"
"""
input tagtype_variance_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
}

"""
columns and relationships of "task"
"""
type task {
  agent_task_id: String!

  """An object relationship"""
  apitoken: apitokens

  """An array relationship"""
  apitokens(
    """distinct select on columns"""
    distinct_on: [apitokens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [apitokens_order_by!]

    """filter the rows returned"""
    where: apitokens_bool_exp
  ): [apitokens!]!
  apitokens_id: Int

  """An array relationship"""
  attacktasks(
    """distinct select on columns"""
    distinct_on: [attacktask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attacktask_order_by!]

    """filter the rows returned"""
    where: attacktask_bool_exp
  ): [attacktask!]!

  """An object relationship"""
  callback: callback!
  callback_id: Int!

  """An array relationship"""
  callbackports(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): [callbackport!]!

  """An aggregate relationship"""
  callbackports_aggregate(
    """distinct select on columns"""
    distinct_on: [callbackport_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbackport_order_by!]

    """filter the rows returned"""
    where: callbackport_bool_exp
  ): callbackport_aggregate!

  """An array relationship"""
  callbacktokens(
    """distinct select on columns"""
    distinct_on: [callbacktoken_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbacktoken_order_by!]

    """filter the rows returned"""
    where: callbacktoken_bool_exp
  ): [callbacktoken!]!

  """An object relationship"""
  command: command
  command_id: Int
  command_name: String!
  comment: String!

  """An object relationship"""
  commentOperator: operator
  comment_operator_id: Int
  completed: Boolean!
  completed_callback_function: String!
  completed_callback_function_completed: Boolean!

  """An array relationship"""
  credentials(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): [credential!]!

  """An aggregate relationship"""
  credentials_aggregate(
    """distinct select on columns"""
    distinct_on: [credential_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [credential_order_by!]

    """filter the rows returned"""
    where: credential_bool_exp
  ): credential_aggregate!
  display_id: Int!
  display_params: String!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int

  """An array relationship"""
  filemeta(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): [filemeta!]!

  """An aggregate relationship"""
  filemeta_aggregate(
    """distinct select on columns"""
    distinct_on: [filemeta_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [filemeta_order_by!]

    """filter the rows returned"""
    where: filemeta_bool_exp
  ): filemeta_aggregate!
  group_callback_function: String!
  group_callback_function_completed: Boolean!
  id: Int!
  interactive_task_type: Int
  is_interactive_task: Boolean!

  """An array relationship"""
  keylogs(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): [keylog!]!

  """An aggregate relationship"""
  keylogs_aggregate(
    """distinct select on columns"""
    distinct_on: [keylog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [keylog_order_by!]

    """filter the rows returned"""
    where: keylog_bool_exp
  ): keylog_aggregate!

  """An array relationship"""
  mythictrees(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): [mythictree!]!

  """An aggregate relationship"""
  mythictrees_aggregate(
    """distinct select on columns"""
    distinct_on: [mythictree_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [mythictree_order_by!]

    """filter the rows returned"""
    where: mythictree_bool_exp
  ): mythictree_aggregate!
  operation_id: Int!

  """An object relationship"""
  operator: operator!
  operator_id: Int!
  opsec_post_blocked: Boolean
  opsec_post_bypass_role: String!

  """An object relationship"""
  opsec_post_bypass_user: operator
  opsec_post_bypass_user_id: Int
  opsec_post_bypassed: Boolean!
  opsec_post_message: String!
  opsec_pre_blocked: Boolean
  opsec_pre_bypass_role: String!

  """An object relationship"""
  opsec_pre_bypass_user: operator
  opsec_pre_bypass_user_id: Int
  opsec_pre_bypassed: Boolean!
  opsec_pre_message: String!
  original_params: String!
  parameter_group_name: String!
  params: String!
  parent_task_id: Int

  """An array relationship"""
  payloadonhosts(
    """distinct select on columns"""
    distinct_on: [payloadonhost_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadonhost_order_by!]

    """filter the rows returned"""
    where: payloadonhost_bool_exp
  ): [payloadonhost!]!

  """An array relationship"""
  payloads(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): [payload!]!

  """An aggregate relationship"""
  payloads_aggregate(
    """distinct select on columns"""
    distinct_on: [payload_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payload_order_by!]

    """filter the rows returned"""
    where: payload_bool_exp
  ): payload_aggregate!
  response_count: Int!

  """An array relationship"""
  responses(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): [response!]!

  """An aggregate relationship"""
  responses_aggregate(
    """distinct select on columns"""
    distinct_on: [response_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [response_order_by!]

    """filter the rows returned"""
    where: response_bool_exp
  ): response_aggregate!
  status: String!
  status_timestamp_preprocessing: timestamp!
  status_timestamp_processed: timestamp
  status_timestamp_processing: timestamp
  status_timestamp_submitted: timestamp
  stderr: String!
  stdout: String!
  subtask_callback_function: String!
  subtask_callback_function_completed: Boolean!
  subtask_group_name: String!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task

  """An array relationship"""
  taskartifacts(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): [taskartifact!]!

  """An aggregate relationship"""
  taskartifacts_aggregate(
    """distinct select on columns"""
    distinct_on: [taskartifact_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [taskartifact_order_by!]

    """filter the rows returned"""
    where: taskartifact_bool_exp
  ): taskartifact_aggregate!
  tasking_location: String!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  timestamp: timestamp!

  """An object relationship"""
  token: token
  token_id: Int

  """An array relationship"""
  tokens(
    """distinct select on columns"""
    distinct_on: [token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_order_by!]

    """filter the rows returned"""
    where: token_bool_exp
  ): [token!]!

  """An aggregate relationship"""
  tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [token_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [token_order_by!]

    """filter the rows returned"""
    where: token_bool_exp
  ): token_aggregate!
}

"""
aggregated selection of "task"
"""
type task_aggregate {
  aggregate: task_aggregate_fields
  nodes: [task!]!
}

input task_aggregate_bool_exp {
  bool_and: task_aggregate_bool_exp_bool_and
  bool_or: task_aggregate_bool_exp_bool_or
  count: task_aggregate_bool_exp_count
}

input task_aggregate_bool_exp_bool_and {
  arguments: task_select_column_task_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: task_bool_exp
  predicate: Boolean_comparison_exp!
}

input task_aggregate_bool_exp_bool_or {
  arguments: task_select_column_task_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: task_bool_exp
  predicate: Boolean_comparison_exp!
}

input task_aggregate_bool_exp_count {
  arguments: [task_select_column!]
  distinct: Boolean
  filter: task_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "task"
"""
type task_aggregate_fields {
  avg: task_avg_fields
  count(columns: [task_select_column!], distinct: Boolean): Int!
  max: task_max_fields
  min: task_min_fields
  stddev: task_stddev_fields
  stddev_pop: task_stddev_pop_fields
  stddev_samp: task_stddev_samp_fields
  sum: task_sum_fields
  var_pop: task_var_pop_fields
  var_samp: task_var_samp_fields
  variance: task_variance_fields
}

"""
order by aggregate values of table "task"
"""
input task_aggregate_order_by {
  avg: task_avg_order_by
  count: order_by
  max: task_max_order_by
  min: task_min_order_by
  stddev: task_stddev_order_by
  stddev_pop: task_stddev_pop_order_by
  stddev_samp: task_stddev_samp_order_by
  sum: task_sum_order_by
  var_pop: task_var_pop_order_by
  var_samp: task_var_samp_order_by
  variance: task_variance_order_by
}

"""aggregate avg on columns"""
type task_avg_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by avg() on columns of table "task"
"""
input task_avg_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""
Boolean expression to filter rows from the table "task". All fields are combined with a logical 'AND'.
"""
input task_bool_exp {
  _and: [task_bool_exp!]
  _not: task_bool_exp
  _or: [task_bool_exp!]
  agent_task_id: String_comparison_exp
  apitoken: apitokens_bool_exp
  apitokens: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  attacktasks: attacktask_bool_exp
  callback: callback_bool_exp
  callback_id: Int_comparison_exp
  callbackports: callbackport_bool_exp
  callbackports_aggregate: callbackport_aggregate_bool_exp
  callbacktokens: callbacktoken_bool_exp
  command: command_bool_exp
  command_id: Int_comparison_exp
  command_name: String_comparison_exp
  comment: String_comparison_exp
  commentOperator: operator_bool_exp
  comment_operator_id: Int_comparison_exp
  completed: Boolean_comparison_exp
  completed_callback_function: String_comparison_exp
  completed_callback_function_completed: Boolean_comparison_exp
  credentials: credential_bool_exp
  credentials_aggregate: credential_aggregate_bool_exp
  display_id: Int_comparison_exp
  display_params: String_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  filemeta: filemeta_bool_exp
  filemeta_aggregate: filemeta_aggregate_bool_exp
  group_callback_function: String_comparison_exp
  group_callback_function_completed: Boolean_comparison_exp
  id: Int_comparison_exp
  interactive_task_type: Int_comparison_exp
  is_interactive_task: Boolean_comparison_exp
  keylogs: keylog_bool_exp
  keylogs_aggregate: keylog_aggregate_bool_exp
  mythictrees: mythictree_bool_exp
  mythictrees_aggregate: mythictree_aggregate_bool_exp
  operation_id: Int_comparison_exp
  operator: operator_bool_exp
  operator_id: Int_comparison_exp
  opsec_post_blocked: Boolean_comparison_exp
  opsec_post_bypass_role: String_comparison_exp
  opsec_post_bypass_user: operator_bool_exp
  opsec_post_bypass_user_id: Int_comparison_exp
  opsec_post_bypassed: Boolean_comparison_exp
  opsec_post_message: String_comparison_exp
  opsec_pre_blocked: Boolean_comparison_exp
  opsec_pre_bypass_role: String_comparison_exp
  opsec_pre_bypass_user: operator_bool_exp
  opsec_pre_bypass_user_id: Int_comparison_exp
  opsec_pre_bypassed: Boolean_comparison_exp
  opsec_pre_message: String_comparison_exp
  original_params: String_comparison_exp
  parameter_group_name: String_comparison_exp
  params: String_comparison_exp
  parent_task_id: Int_comparison_exp
  payloadonhosts: payloadonhost_bool_exp
  payloads: payload_bool_exp
  payloads_aggregate: payload_aggregate_bool_exp
  response_count: Int_comparison_exp
  responses: response_bool_exp
  responses_aggregate: response_aggregate_bool_exp
  status: String_comparison_exp
  status_timestamp_preprocessing: timestamp_comparison_exp
  status_timestamp_processed: timestamp_comparison_exp
  status_timestamp_processing: timestamp_comparison_exp
  status_timestamp_submitted: timestamp_comparison_exp
  stderr: String_comparison_exp
  stdout: String_comparison_exp
  subtask_callback_function: String_comparison_exp
  subtask_callback_function_completed: Boolean_comparison_exp
  subtask_group_name: String_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  taskartifacts: taskartifact_bool_exp
  taskartifacts_aggregate: taskartifact_aggregate_bool_exp
  tasking_location: String_comparison_exp
  tasks: task_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  timestamp: timestamp_comparison_exp
  token: token_bool_exp
  token_id: Int_comparison_exp
  tokens: token_bool_exp
  tokens_aggregate: token_aggregate_bool_exp
}

"""aggregate max on columns"""
type task_max_fields {
  agent_task_id: String
  apitokens_id: Int
  callback_id: Int
  command_id: Int
  command_name: String
  comment: String
  comment_operator_id: Int
  completed_callback_function: String
  display_id: Int
  display_params: String
  eventstepinstance_id: Int
  group_callback_function: String
  id: Int
  interactive_task_type: Int
  operation_id: Int
  operator_id: Int
  opsec_post_bypass_role: String
  opsec_post_bypass_user_id: Int
  opsec_post_message: String
  opsec_pre_bypass_role: String
  opsec_pre_bypass_user_id: Int
  opsec_pre_message: String
  original_params: String
  parameter_group_name: String
  params: String
  parent_task_id: Int
  response_count: Int
  status: String
  status_timestamp_preprocessing: timestamp
  status_timestamp_processed: timestamp
  status_timestamp_processing: timestamp
  status_timestamp_submitted: timestamp
  stderr: String
  stdout: String
  subtask_callback_function: String
  subtask_group_name: String
  tasking_location: String
  timestamp: timestamp
  token_id: Int
}

"""
order by max() on columns of table "task"
"""
input task_max_order_by {
  agent_task_id: order_by
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  command_name: order_by
  comment: order_by
  comment_operator_id: order_by
  completed_callback_function: order_by
  display_id: order_by
  display_params: order_by
  eventstepinstance_id: order_by
  group_callback_function: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_role: order_by
  opsec_post_bypass_user_id: order_by
  opsec_post_message: order_by
  opsec_pre_bypass_role: order_by
  opsec_pre_bypass_user_id: order_by
  opsec_pre_message: order_by
  original_params: order_by
  parameter_group_name: order_by
  params: order_by
  parent_task_id: order_by
  response_count: order_by
  status: order_by
  status_timestamp_preprocessing: order_by
  status_timestamp_processed: order_by
  status_timestamp_processing: order_by
  status_timestamp_submitted: order_by
  stderr: order_by
  stdout: order_by
  subtask_callback_function: order_by
  subtask_group_name: order_by
  tasking_location: order_by
  timestamp: order_by
  token_id: order_by
}

"""aggregate min on columns"""
type task_min_fields {
  agent_task_id: String
  apitokens_id: Int
  callback_id: Int
  command_id: Int
  command_name: String
  comment: String
  comment_operator_id: Int
  completed_callback_function: String
  display_id: Int
  display_params: String
  eventstepinstance_id: Int
  group_callback_function: String
  id: Int
  interactive_task_type: Int
  operation_id: Int
  operator_id: Int
  opsec_post_bypass_role: String
  opsec_post_bypass_user_id: Int
  opsec_post_message: String
  opsec_pre_bypass_role: String
  opsec_pre_bypass_user_id: Int
  opsec_pre_message: String
  original_params: String
  parameter_group_name: String
  params: String
  parent_task_id: Int
  response_count: Int
  status: String
  status_timestamp_preprocessing: timestamp
  status_timestamp_processed: timestamp
  status_timestamp_processing: timestamp
  status_timestamp_submitted: timestamp
  stderr: String
  stdout: String
  subtask_callback_function: String
  subtask_group_name: String
  tasking_location: String
  timestamp: timestamp
  token_id: Int
}

"""
order by min() on columns of table "task"
"""
input task_min_order_by {
  agent_task_id: order_by
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  command_name: order_by
  comment: order_by
  comment_operator_id: order_by
  completed_callback_function: order_by
  display_id: order_by
  display_params: order_by
  eventstepinstance_id: order_by
  group_callback_function: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_role: order_by
  opsec_post_bypass_user_id: order_by
  opsec_post_message: order_by
  opsec_pre_bypass_role: order_by
  opsec_pre_bypass_user_id: order_by
  opsec_pre_message: order_by
  original_params: order_by
  parameter_group_name: order_by
  params: order_by
  parent_task_id: order_by
  response_count: order_by
  status: order_by
  status_timestamp_preprocessing: order_by
  status_timestamp_processed: order_by
  status_timestamp_processing: order_by
  status_timestamp_submitted: order_by
  stderr: order_by
  stdout: order_by
  subtask_callback_function: order_by
  subtask_group_name: order_by
  tasking_location: order_by
  timestamp: order_by
  token_id: order_by
}

"""
response of any mutation on the table "task"
"""
type task_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [task!]!
}

"""Ordering options when selecting data from "task"."""
input task_order_by {
  agent_task_id: order_by
  apitoken: apitokens_order_by
  apitokens_aggregate: apitokens_aggregate_order_by
  apitokens_id: order_by
  attacktasks_aggregate: attacktask_aggregate_order_by
  callback: callback_order_by
  callback_id: order_by
  callbackports_aggregate: callbackport_aggregate_order_by
  callbacktokens_aggregate: callbacktoken_aggregate_order_by
  command: command_order_by
  command_id: order_by
  command_name: order_by
  comment: order_by
  commentOperator: operator_order_by
  comment_operator_id: order_by
  completed: order_by
  completed_callback_function: order_by
  completed_callback_function_completed: order_by
  credentials_aggregate: credential_aggregate_order_by
  display_id: order_by
  display_params: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  filemeta_aggregate: filemeta_aggregate_order_by
  group_callback_function: order_by
  group_callback_function_completed: order_by
  id: order_by
  interactive_task_type: order_by
  is_interactive_task: order_by
  keylogs_aggregate: keylog_aggregate_order_by
  mythictrees_aggregate: mythictree_aggregate_order_by
  operation_id: order_by
  operator: operator_order_by
  operator_id: order_by
  opsec_post_blocked: order_by
  opsec_post_bypass_role: order_by
  opsec_post_bypass_user: operator_order_by
  opsec_post_bypass_user_id: order_by
  opsec_post_bypassed: order_by
  opsec_post_message: order_by
  opsec_pre_blocked: order_by
  opsec_pre_bypass_role: order_by
  opsec_pre_bypass_user: operator_order_by
  opsec_pre_bypass_user_id: order_by
  opsec_pre_bypassed: order_by
  opsec_pre_message: order_by
  original_params: order_by
  parameter_group_name: order_by
  params: order_by
  parent_task_id: order_by
  payloadonhosts_aggregate: payloadonhost_aggregate_order_by
  payloads_aggregate: payload_aggregate_order_by
  response_count: order_by
  responses_aggregate: response_aggregate_order_by
  status: order_by
  status_timestamp_preprocessing: order_by
  status_timestamp_processed: order_by
  status_timestamp_processing: order_by
  status_timestamp_submitted: order_by
  stderr: order_by
  stdout: order_by
  subtask_callback_function: order_by
  subtask_callback_function_completed: order_by
  subtask_group_name: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  taskartifacts_aggregate: taskartifact_aggregate_order_by
  tasking_location: order_by
  tasks_aggregate: task_aggregate_order_by
  timestamp: order_by
  token: token_order_by
  token_id: order_by
  tokens_aggregate: token_aggregate_order_by
}

"""primary key columns input for table: task"""
input task_pk_columns_input {
  id: Int!
}

"""
select columns of table "task"
"""
enum task_select_column {
  """column name"""
  agent_task_id

  """column name"""
  apitokens_id

  """column name"""
  callback_id

  """column name"""
  command_id

  """column name"""
  command_name

  """column name"""
  comment

  """column name"""
  comment_operator_id

  """column name"""
  completed

  """column name"""
  completed_callback_function

  """column name"""
  completed_callback_function_completed

  """column name"""
  display_id

  """column name"""
  display_params

  """column name"""
  eventstepinstance_id

  """column name"""
  group_callback_function

  """column name"""
  group_callback_function_completed

  """column name"""
  id

  """column name"""
  interactive_task_type

  """column name"""
  is_interactive_task

  """column name"""
  operation_id

  """column name"""
  operator_id

  """column name"""
  opsec_post_blocked

  """column name"""
  opsec_post_bypass_role

  """column name"""
  opsec_post_bypass_user_id

  """column name"""
  opsec_post_bypassed

  """column name"""
  opsec_post_message

  """column name"""
  opsec_pre_blocked

  """column name"""
  opsec_pre_bypass_role

  """column name"""
  opsec_pre_bypass_user_id

  """column name"""
  opsec_pre_bypassed

  """column name"""
  opsec_pre_message

  """column name"""
  original_params

  """column name"""
  parameter_group_name

  """column name"""
  params

  """column name"""
  parent_task_id

  """column name"""
  response_count

  """column name"""
  status

  """column name"""
  status_timestamp_preprocessing

  """column name"""
  status_timestamp_processed

  """column name"""
  status_timestamp_processing

  """column name"""
  status_timestamp_submitted

  """column name"""
  stderr

  """column name"""
  stdout

  """column name"""
  subtask_callback_function

  """column name"""
  subtask_callback_function_completed

  """column name"""
  subtask_group_name

  """column name"""
  tasking_location

  """column name"""
  timestamp

  """column name"""
  token_id
}

"""
select "task_aggregate_bool_exp_bool_and_arguments_columns" columns of table "task"
"""
enum task_select_column_task_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  completed

  """column name"""
  completed_callback_function_completed

  """column name"""
  group_callback_function_completed

  """column name"""
  is_interactive_task

  """column name"""
  opsec_post_blocked

  """column name"""
  opsec_post_bypassed

  """column name"""
  opsec_pre_blocked

  """column name"""
  opsec_pre_bypassed

  """column name"""
  subtask_callback_function_completed
}

"""
select "task_aggregate_bool_exp_bool_or_arguments_columns" columns of table "task"
"""
enum task_select_column_task_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  completed

  """column name"""
  completed_callback_function_completed

  """column name"""
  group_callback_function_completed

  """column name"""
  is_interactive_task

  """column name"""
  opsec_post_blocked

  """column name"""
  opsec_post_bypassed

  """column name"""
  opsec_pre_blocked

  """column name"""
  opsec_pre_bypassed

  """column name"""
  subtask_callback_function_completed
}

"""
input type for updating data in table "task"
"""
input task_set_input {
  comment: String
  completed: Boolean
}

"""aggregate stddev on columns"""
type task_stddev_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by stddev() on columns of table "task"
"""
input task_stddev_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""aggregate stddev_pop on columns"""
type task_stddev_pop_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by stddev_pop() on columns of table "task"
"""
input task_stddev_pop_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""aggregate stddev_samp on columns"""
type task_stddev_samp_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by stddev_samp() on columns of table "task"
"""
input task_stddev_samp_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""
Streaming cursor of the table "task"
"""
input task_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: task_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input task_stream_cursor_value_input {
  agent_task_id: String
  apitokens_id: Int
  callback_id: Int
  command_id: Int
  command_name: String
  comment: String
  comment_operator_id: Int
  completed: Boolean
  completed_callback_function: String
  completed_callback_function_completed: Boolean
  display_id: Int
  display_params: String
  eventstepinstance_id: Int
  group_callback_function: String
  group_callback_function_completed: Boolean
  id: Int
  interactive_task_type: Int
  is_interactive_task: Boolean
  operation_id: Int
  operator_id: Int
  opsec_post_blocked: Boolean
  opsec_post_bypass_role: String
  opsec_post_bypass_user_id: Int
  opsec_post_bypassed: Boolean
  opsec_post_message: String
  opsec_pre_blocked: Boolean
  opsec_pre_bypass_role: String
  opsec_pre_bypass_user_id: Int
  opsec_pre_bypassed: Boolean
  opsec_pre_message: String
  original_params: String
  parameter_group_name: String
  params: String
  parent_task_id: Int
  response_count: Int
  status: String
  status_timestamp_preprocessing: timestamp
  status_timestamp_processed: timestamp
  status_timestamp_processing: timestamp
  status_timestamp_submitted: timestamp
  stderr: String
  stdout: String
  subtask_callback_function: String
  subtask_callback_function_completed: Boolean
  subtask_group_name: String
  tasking_location: String
  timestamp: timestamp
  token_id: Int
}

"""aggregate sum on columns"""
type task_sum_fields {
  apitokens_id: Int
  callback_id: Int
  command_id: Int
  comment_operator_id: Int
  display_id: Int
  eventstepinstance_id: Int
  id: Int
  interactive_task_type: Int
  operation_id: Int
  operator_id: Int
  opsec_post_bypass_user_id: Int
  opsec_pre_bypass_user_id: Int
  parent_task_id: Int
  response_count: Int
  token_id: Int
}

"""
order by sum() on columns of table "task"
"""
input task_sum_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

input task_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: task_set_input

  """filter the rows which have to be updated"""
  where: task_bool_exp!
}

"""aggregate var_pop on columns"""
type task_var_pop_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by var_pop() on columns of table "task"
"""
input task_var_pop_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""aggregate var_samp on columns"""
type task_var_samp_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by var_samp() on columns of table "task"
"""
input task_var_samp_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""aggregate variance on columns"""
type task_variance_fields {
  apitokens_id: Float
  callback_id: Float
  command_id: Float
  comment_operator_id: Float
  display_id: Float
  eventstepinstance_id: Float
  id: Float
  interactive_task_type: Float
  operation_id: Float
  operator_id: Float
  opsec_post_bypass_user_id: Float
  opsec_pre_bypass_user_id: Float
  parent_task_id: Float
  response_count: Float
  token_id: Float
}

"""
order by variance() on columns of table "task"
"""
input task_variance_order_by {
  apitokens_id: order_by
  callback_id: order_by
  command_id: order_by
  comment_operator_id: order_by
  display_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  interactive_task_type: order_by
  operation_id: order_by
  operator_id: order_by
  opsec_post_bypass_user_id: order_by
  opsec_pre_bypass_user_id: order_by
  parent_task_id: order_by
  response_count: order_by
  token_id: order_by
}

"""
columns and relationships of "taskartifact"
"""
type taskartifact {
  """An object relationship"""
  apitoken: apitokens
  apitokens_id: Int
  artifact_raw: bytea!

  """
  A computed field, executes function "taskartifact_artifact_instance"
  """
  artifact_text: String
  base_artifact: String!

  """An object relationship"""
  eventstepinstance: eventstepinstance
  eventstepinstance_id: Int
  host: String!
  id: Int!
  needs_cleanup: Boolean!

  """An object relationship"""
  operation: operation!
  operation_id: Int!
  resolved: Boolean!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): [tag!]!

  """An aggregate relationship"""
  tags_aggregate(
    """distinct select on columns"""
    distinct_on: [tag_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tag_order_by!]

    """filter the rows returned"""
    where: tag_bool_exp
  ): tag_aggregate!

  """An object relationship"""
  task: task!
  task_id: Int!
  timestamp: timestamp!
  updated_at: timestamp!
}

"""
aggregated selection of "taskartifact"
"""
type taskartifact_aggregate {
  aggregate: taskartifact_aggregate_fields
  nodes: [taskartifact!]!
}

input taskartifact_aggregate_bool_exp {
  bool_and: taskartifact_aggregate_bool_exp_bool_and
  bool_or: taskartifact_aggregate_bool_exp_bool_or
  count: taskartifact_aggregate_bool_exp_count
}

input taskartifact_aggregate_bool_exp_bool_and {
  arguments: taskartifact_select_column_taskartifact_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: taskartifact_bool_exp
  predicate: Boolean_comparison_exp!
}

input taskartifact_aggregate_bool_exp_bool_or {
  arguments: taskartifact_select_column_taskartifact_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: taskartifact_bool_exp
  predicate: Boolean_comparison_exp!
}

input taskartifact_aggregate_bool_exp_count {
  arguments: [taskartifact_select_column!]
  distinct: Boolean
  filter: taskartifact_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "taskartifact"
"""
type taskartifact_aggregate_fields {
  avg: taskartifact_avg_fields
  count(columns: [taskartifact_select_column!], distinct: Boolean): Int!
  max: taskartifact_max_fields
  min: taskartifact_min_fields
  stddev: taskartifact_stddev_fields
  stddev_pop: taskartifact_stddev_pop_fields
  stddev_samp: taskartifact_stddev_samp_fields
  sum: taskartifact_sum_fields
  var_pop: taskartifact_var_pop_fields
  var_samp: taskartifact_var_samp_fields
  variance: taskartifact_variance_fields
}

"""
order by aggregate values of table "taskartifact"
"""
input taskartifact_aggregate_order_by {
  avg: taskartifact_avg_order_by
  count: order_by
  max: taskartifact_max_order_by
  min: taskartifact_min_order_by
  stddev: taskartifact_stddev_order_by
  stddev_pop: taskartifact_stddev_pop_order_by
  stddev_samp: taskartifact_stddev_samp_order_by
  sum: taskartifact_sum_order_by
  var_pop: taskartifact_var_pop_order_by
  var_samp: taskartifact_var_samp_order_by
  variance: taskartifact_variance_order_by
}

"""aggregate avg on columns"""
type taskartifact_avg_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by avg() on columns of table "taskartifact"
"""
input taskartifact_avg_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
Boolean expression to filter rows from the table "taskartifact". All fields are combined with a logical 'AND'.
"""
input taskartifact_bool_exp {
  _and: [taskartifact_bool_exp!]
  _not: taskartifact_bool_exp
  _or: [taskartifact_bool_exp!]
  apitoken: apitokens_bool_exp
  apitokens_id: Int_comparison_exp
  artifact_raw: bytea_comparison_exp
  artifact_text: String_comparison_exp
  base_artifact: String_comparison_exp
  eventstepinstance: eventstepinstance_bool_exp
  eventstepinstance_id: Int_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  needs_cleanup: Boolean_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  resolved: Boolean_comparison_exp
  tags: tag_bool_exp
  tags_aggregate: tag_aggregate_bool_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  updated_at: timestamp_comparison_exp
}

"""
unique or primary key constraints on table "taskartifact"
"""
enum taskartifact_constraint {
  """
  unique or primary key constraint on columns "id"
  """
  taskartifact_pkey
}

"""
input type for inserting data into table "taskartifact"
"""
input taskartifact_insert_input {
  apitokens_id: Int
  artifact_raw: bytea
  base_artifact: String
  eventstepinstance_id: Int
  host: String
  needs_cleanup: Boolean
  resolved: Boolean
  tags: tag_arr_rel_insert_input
  task_id: Int
}

"""aggregate max on columns"""
type taskartifact_max_fields {
  apitokens_id: Int

  """
  A computed field, executes function "taskartifact_artifact_instance"
  """
  artifact_text: String
  base_artifact: String
  eventstepinstance_id: Int
  host: String
  id: Int
  operation_id: Int
  task_id: Int
  timestamp: timestamp
  updated_at: timestamp
}

"""
order by max() on columns of table "taskartifact"
"""
input taskartifact_max_order_by {
  apitokens_id: order_by
  base_artifact: order_by
  eventstepinstance_id: order_by
  host: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
  timestamp: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type taskartifact_min_fields {
  apitokens_id: Int

  """
  A computed field, executes function "taskartifact_artifact_instance"
  """
  artifact_text: String
  base_artifact: String
  eventstepinstance_id: Int
  host: String
  id: Int
  operation_id: Int
  task_id: Int
  timestamp: timestamp
  updated_at: timestamp
}

"""
order by min() on columns of table "taskartifact"
"""
input taskartifact_min_order_by {
  apitokens_id: order_by
  base_artifact: order_by
  eventstepinstance_id: order_by
  host: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
  timestamp: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "taskartifact"
"""
type taskartifact_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [taskartifact!]!
}

"""
input type for inserting object relation for remote table "taskartifact"
"""
input taskartifact_obj_rel_insert_input {
  data: taskartifact_insert_input!

  """upsert condition"""
  on_conflict: taskartifact_on_conflict
}

"""
on_conflict condition type for table "taskartifact"
"""
input taskartifact_on_conflict {
  constraint: taskartifact_constraint!
  update_columns: [taskartifact_update_column!]! = []
  where: taskartifact_bool_exp
}

"""Ordering options when selecting data from "taskartifact"."""
input taskartifact_order_by {
  apitoken: apitokens_order_by
  apitokens_id: order_by
  artifact_raw: order_by
  artifact_text: order_by
  base_artifact: order_by
  eventstepinstance: eventstepinstance_order_by
  eventstepinstance_id: order_by
  host: order_by
  id: order_by
  needs_cleanup: order_by
  operation: operation_order_by
  operation_id: order_by
  resolved: order_by
  tags_aggregate: tag_aggregate_order_by
  task: task_order_by
  task_id: order_by
  timestamp: order_by
  updated_at: order_by
}

"""primary key columns input for table: taskartifact"""
input taskartifact_pk_columns_input {
  id: Int!
}

"""
select columns of table "taskartifact"
"""
enum taskartifact_select_column {
  """column name"""
  apitokens_id

  """column name"""
  artifact_raw

  """column name"""
  base_artifact

  """column name"""
  eventstepinstance_id

  """column name"""
  host

  """column name"""
  id

  """column name"""
  needs_cleanup

  """column name"""
  operation_id

  """column name"""
  resolved

  """column name"""
  task_id

  """column name"""
  timestamp

  """column name"""
  updated_at
}

"""
select "taskartifact_aggregate_bool_exp_bool_and_arguments_columns" columns of table "taskartifact"
"""
enum taskartifact_select_column_taskartifact_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  needs_cleanup

  """column name"""
  resolved
}

"""
select "taskartifact_aggregate_bool_exp_bool_or_arguments_columns" columns of table "taskartifact"
"""
enum taskartifact_select_column_taskartifact_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  needs_cleanup

  """column name"""
  resolved
}

"""
input type for updating data in table "taskartifact"
"""
input taskartifact_set_input {
  artifact_raw: bytea
  base_artifact: String
  host: String
  needs_cleanup: Boolean
  resolved: Boolean
}

"""aggregate stddev on columns"""
type taskartifact_stddev_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev() on columns of table "taskartifact"
"""
input taskartifact_stddev_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate stddev_pop on columns"""
type taskartifact_stddev_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev_pop() on columns of table "taskartifact"
"""
input taskartifact_stddev_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate stddev_samp on columns"""
type taskartifact_stddev_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by stddev_samp() on columns of table "taskartifact"
"""
input taskartifact_stddev_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
Streaming cursor of the table "taskartifact"
"""
input taskartifact_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: taskartifact_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input taskartifact_stream_cursor_value_input {
  apitokens_id: Int
  artifact_raw: bytea
  base_artifact: String
  eventstepinstance_id: Int
  host: String
  id: Int
  needs_cleanup: Boolean
  operation_id: Int
  resolved: Boolean
  task_id: Int
  timestamp: timestamp
  updated_at: timestamp
}

"""aggregate sum on columns"""
type taskartifact_sum_fields {
  apitokens_id: Int
  eventstepinstance_id: Int
  id: Int
  operation_id: Int
  task_id: Int
}

"""
order by sum() on columns of table "taskartifact"
"""
input taskartifact_sum_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""
update columns of table "taskartifact"
"""
enum taskartifact_update_column {
  """column name"""
  artifact_raw

  """column name"""
  base_artifact

  """column name"""
  host

  """column name"""
  needs_cleanup

  """column name"""
  resolved
}

input taskartifact_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: taskartifact_set_input

  """filter the rows which have to be updated"""
  where: taskartifact_bool_exp!
}

"""aggregate var_pop on columns"""
type taskartifact_var_pop_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by var_pop() on columns of table "taskartifact"
"""
input taskartifact_var_pop_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate var_samp on columns"""
type taskartifact_var_samp_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by var_samp() on columns of table "taskartifact"
"""
input taskartifact_var_samp_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

"""aggregate variance on columns"""
type taskartifact_variance_fields {
  apitokens_id: Float
  eventstepinstance_id: Float
  id: Float
  operation_id: Float
  task_id: Float
}

"""
order by variance() on columns of table "taskartifact"
"""
input taskartifact_variance_order_by {
  apitokens_id: order_by
  eventstepinstance_id: order_by
  id: order_by
  operation_id: order_by
  task_id: order_by
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

type toggleProxyOutput {
  error: String
  status: String!
}

"""
columns and relationships of "token"
"""
type token {
  app_container_number: Int!
  app_container_sid: String!

  """An array relationship"""
  callbacktokens(
    """distinct select on columns"""
    distinct_on: [callbacktoken_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [callbacktoken_order_by!]

    """filter the rows returned"""
    where: callbacktoken_bool_exp
  ): [callbacktoken!]!
  capabilities: String!
  default_dacl: String!
  deleted: Boolean!
  description: String
  groups: String!
  handle: Int!
  host: String!
  id: Int!
  integrity_level_sid: String!
  logon_sid: String!

  """An object relationship"""
  operation: operation
  operation_id: Int!
  privileges: String!
  process_id: Int!
  restricted: Boolean!
  session_id: Int!

  """An object relationship"""
  task: task!
  task_id: Int!

  """An array relationship"""
  tasks(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """An aggregate relationship"""
  tasks_aggregate(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): task_aggregate!
  thread_id: Int!
  timestamp: timestamp!
  token_id: Int!
  user: String!
}

"""
aggregated selection of "token"
"""
type token_aggregate {
  aggregate: token_aggregate_fields
  nodes: [token!]!
}

input token_aggregate_bool_exp {
  bool_and: token_aggregate_bool_exp_bool_and
  bool_or: token_aggregate_bool_exp_bool_or
  count: token_aggregate_bool_exp_count
}

input token_aggregate_bool_exp_bool_and {
  arguments: token_select_column_token_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: token_bool_exp
  predicate: Boolean_comparison_exp!
}

input token_aggregate_bool_exp_bool_or {
  arguments: token_select_column_token_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: token_bool_exp
  predicate: Boolean_comparison_exp!
}

input token_aggregate_bool_exp_count {
  arguments: [token_select_column!]
  distinct: Boolean
  filter: token_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "token"
"""
type token_aggregate_fields {
  avg: token_avg_fields
  count(columns: [token_select_column!], distinct: Boolean): Int!
  max: token_max_fields
  min: token_min_fields
  stddev: token_stddev_fields
  stddev_pop: token_stddev_pop_fields
  stddev_samp: token_stddev_samp_fields
  sum: token_sum_fields
  var_pop: token_var_pop_fields
  var_samp: token_var_samp_fields
  variance: token_variance_fields
}

"""
order by aggregate values of table "token"
"""
input token_aggregate_order_by {
  avg: token_avg_order_by
  count: order_by
  max: token_max_order_by
  min: token_min_order_by
  stddev: token_stddev_order_by
  stddev_pop: token_stddev_pop_order_by
  stddev_samp: token_stddev_samp_order_by
  sum: token_sum_order_by
  var_pop: token_var_pop_order_by
  var_samp: token_var_samp_order_by
  variance: token_variance_order_by
}

"""aggregate avg on columns"""
type token_avg_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by avg() on columns of table "token"
"""
input token_avg_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""
Boolean expression to filter rows from the table "token". All fields are combined with a logical 'AND'.
"""
input token_bool_exp {
  _and: [token_bool_exp!]
  _not: token_bool_exp
  _or: [token_bool_exp!]
  app_container_number: Int_comparison_exp
  app_container_sid: String_comparison_exp
  callbacktokens: callbacktoken_bool_exp
  capabilities: String_comparison_exp
  default_dacl: String_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  groups: String_comparison_exp
  handle: Int_comparison_exp
  host: String_comparison_exp
  id: Int_comparison_exp
  integrity_level_sid: String_comparison_exp
  logon_sid: String_comparison_exp
  operation: operation_bool_exp
  operation_id: Int_comparison_exp
  privileges: String_comparison_exp
  process_id: Int_comparison_exp
  restricted: Boolean_comparison_exp
  session_id: Int_comparison_exp
  task: task_bool_exp
  task_id: Int_comparison_exp
  tasks: task_bool_exp
  tasks_aggregate: task_aggregate_bool_exp
  thread_id: Int_comparison_exp
  timestamp: timestamp_comparison_exp
  token_id: Int_comparison_exp
  user: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "token"
"""
input token_inc_input {
  app_container_number: Int
  handle: Int
  process_id: Int
  session_id: Int
  thread_id: Int
  token_id: Int
}

"""aggregate max on columns"""
type token_max_fields {
  app_container_number: Int
  app_container_sid: String
  capabilities: String
  default_dacl: String
  description: String
  groups: String
  handle: Int
  host: String
  id: Int
  integrity_level_sid: String
  logon_sid: String
  operation_id: Int
  privileges: String
  process_id: Int
  session_id: Int
  task_id: Int
  thread_id: Int
  timestamp: timestamp
  token_id: Int
  user: String
}

"""
order by max() on columns of table "token"
"""
input token_max_order_by {
  app_container_number: order_by
  app_container_sid: order_by
  capabilities: order_by
  default_dacl: order_by
  description: order_by
  groups: order_by
  handle: order_by
  host: order_by
  id: order_by
  integrity_level_sid: order_by
  logon_sid: order_by
  operation_id: order_by
  privileges: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  timestamp: order_by
  token_id: order_by
  user: order_by
}

"""aggregate min on columns"""
type token_min_fields {
  app_container_number: Int
  app_container_sid: String
  capabilities: String
  default_dacl: String
  description: String
  groups: String
  handle: Int
  host: String
  id: Int
  integrity_level_sid: String
  logon_sid: String
  operation_id: Int
  privileges: String
  process_id: Int
  session_id: Int
  task_id: Int
  thread_id: Int
  timestamp: timestamp
  token_id: Int
  user: String
}

"""
order by min() on columns of table "token"
"""
input token_min_order_by {
  app_container_number: order_by
  app_container_sid: order_by
  capabilities: order_by
  default_dacl: order_by
  description: order_by
  groups: order_by
  handle: order_by
  host: order_by
  id: order_by
  integrity_level_sid: order_by
  logon_sid: order_by
  operation_id: order_by
  privileges: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  timestamp: order_by
  token_id: order_by
  user: order_by
}

"""
response of any mutation on the table "token"
"""
type token_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [token!]!
}

"""Ordering options when selecting data from "token"."""
input token_order_by {
  app_container_number: order_by
  app_container_sid: order_by
  callbacktokens_aggregate: callbacktoken_aggregate_order_by
  capabilities: order_by
  default_dacl: order_by
  deleted: order_by
  description: order_by
  groups: order_by
  handle: order_by
  host: order_by
  id: order_by
  integrity_level_sid: order_by
  logon_sid: order_by
  operation: operation_order_by
  operation_id: order_by
  privileges: order_by
  process_id: order_by
  restricted: order_by
  session_id: order_by
  task: task_order_by
  task_id: order_by
  tasks_aggregate: task_aggregate_order_by
  thread_id: order_by
  timestamp: order_by
  token_id: order_by
  user: order_by
}

"""primary key columns input for table: token"""
input token_pk_columns_input {
  id: Int!
}

"""
select columns of table "token"
"""
enum token_select_column {
  """column name"""
  app_container_number

  """column name"""
  app_container_sid

  """column name"""
  capabilities

  """column name"""
  default_dacl

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  groups

  """column name"""
  handle

  """column name"""
  host

  """column name"""
  id

  """column name"""
  integrity_level_sid

  """column name"""
  logon_sid

  """column name"""
  operation_id

  """column name"""
  privileges

  """column name"""
  process_id

  """column name"""
  restricted

  """column name"""
  session_id

  """column name"""
  task_id

  """column name"""
  thread_id

  """column name"""
  timestamp

  """column name"""
  token_id

  """column name"""
  user
}

"""
select "token_aggregate_bool_exp_bool_and_arguments_columns" columns of table "token"
"""
enum token_select_column_token_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  deleted

  """column name"""
  restricted
}

"""
select "token_aggregate_bool_exp_bool_or_arguments_columns" columns of table "token"
"""
enum token_select_column_token_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  deleted

  """column name"""
  restricted
}

"""
input type for updating data in table "token"
"""
input token_set_input {
  app_container_number: Int
  app_container_sid: String
  capabilities: String
  default_dacl: String
  deleted: Boolean
  description: String
  groups: String
  handle: Int
  host: String
  integrity_level_sid: String
  logon_sid: String
  privileges: String
  process_id: Int
  restricted: Boolean
  session_id: Int
  thread_id: Int
  token_id: Int
  user: String
}

"""aggregate stddev on columns"""
type token_stddev_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by stddev() on columns of table "token"
"""
input token_stddev_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""aggregate stddev_pop on columns"""
type token_stddev_pop_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by stddev_pop() on columns of table "token"
"""
input token_stddev_pop_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""aggregate stddev_samp on columns"""
type token_stddev_samp_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by stddev_samp() on columns of table "token"
"""
input token_stddev_samp_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""
Streaming cursor of the table "token"
"""
input token_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: token_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input token_stream_cursor_value_input {
  app_container_number: Int
  app_container_sid: String
  capabilities: String
  default_dacl: String
  deleted: Boolean
  description: String
  groups: String
  handle: Int
  host: String
  id: Int
  integrity_level_sid: String
  logon_sid: String
  operation_id: Int
  privileges: String
  process_id: Int
  restricted: Boolean
  session_id: Int
  task_id: Int
  thread_id: Int
  timestamp: timestamp
  token_id: Int
  user: String
}

"""aggregate sum on columns"""
type token_sum_fields {
  app_container_number: Int
  handle: Int
  id: Int
  operation_id: Int
  process_id: Int
  session_id: Int
  task_id: Int
  thread_id: Int
  token_id: Int
}

"""
order by sum() on columns of table "token"
"""
input token_sum_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

input token_updates {
  """increments the numeric columns with given value of the filtered values"""
  _inc: token_inc_input

  """sets the columns of the filtered rows to the given values"""
  _set: token_set_input

  """filter the rows which have to be updated"""
  where: token_bool_exp!
}

"""aggregate var_pop on columns"""
type token_var_pop_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by var_pop() on columns of table "token"
"""
input token_var_pop_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""aggregate var_samp on columns"""
type token_var_samp_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by var_samp() on columns of table "token"
"""
input token_var_samp_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""aggregate variance on columns"""
type token_variance_fields {
  app_container_number: Float
  handle: Float
  id: Float
  operation_id: Float
  process_id: Float
  session_id: Float
  task_id: Float
  thread_id: Float
  token_id: Float
}

"""
order by variance() on columns of table "token"
"""
input token_variance_order_by {
  app_container_number: order_by
  handle: order_by
  id: order_by
  operation_id: order_by
  process_id: order_by
  session_id: order_by
  task_id: order_by
  thread_id: order_by
  token_id: order_by
}

"""
columns and relationships of "translationcontainer"
"""
type translationcontainer {
  author: String!
  container_running: Boolean!
  deleted: Boolean!
  description: String!
  id: Int!
  name: String!

  """An array relationship"""
  payloadtypes(
    """distinct select on columns"""
    distinct_on: [payloadtype_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [payloadtype_order_by!]

    """filter the rows returned"""
    where: payloadtype_bool_exp
  ): [payloadtype!]!
}

"""
Boolean expression to filter rows from the table "translationcontainer". All fields are combined with a logical 'AND'.
"""
input translationcontainer_bool_exp {
  _and: [translationcontainer_bool_exp!]
  _not: translationcontainer_bool_exp
  _or: [translationcontainer_bool_exp!]
  author: String_comparison_exp
  container_running: Boolean_comparison_exp
  deleted: Boolean_comparison_exp
  description: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  payloadtypes: payloadtype_bool_exp
}

"""
response of any mutation on the table "translationcontainer"
"""
type translationcontainer_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [translationcontainer!]!
}

"""Ordering options when selecting data from "translationcontainer"."""
input translationcontainer_order_by {
  author: order_by
  container_running: order_by
  deleted: order_by
  description: order_by
  id: order_by
  name: order_by
  payloadtypes_aggregate: payloadtype_aggregate_order_by
}

"""primary key columns input for table: translationcontainer"""
input translationcontainer_pk_columns_input {
  id: Int!
}

"""
select columns of table "translationcontainer"
"""
enum translationcontainer_select_column {
  """column name"""
  author

  """column name"""
  container_running

  """column name"""
  deleted

  """column name"""
  description

  """column name"""
  id

  """column name"""
  name
}

"""
input type for updating data in table "translationcontainer"
"""
input translationcontainer_set_input {
  deleted: Boolean
}

"""
Streaming cursor of the table "translationcontainer"
"""
input translationcontainer_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: translationcontainer_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input translationcontainer_stream_cursor_value_input {
  author: String
  container_running: Boolean
  deleted: Boolean
  description: String
  id: Int
  name: String
}

input translationcontainer_updates {
  """sets the columns of the filtered rows to the given values"""
  _set: translationcontainer_set_input

  """filter the rows which have to be updated"""
  where: translationcontainer_bool_exp!
}

type typedarrayParseOutput {
  error: String
  status: String!
  typed_array: jsonb
}

input updateCallbackInput {
  active: Boolean
  architecture: String
  callback_display_id: Int
  callback_display_ids: [Int]
  dead: Boolean
  description: String
  domain: String
  extra_info: String
  host: String
  integrity_level: Int
  ips: [String]
  locked: Boolean
  os: String
  pid: Int
  process_name: String
  sleep_info: String
  user: String
}

type updateCallbackOutput {
  error: String
  status: String!
}

type updateCurrentOperationOutput {
  error: String
  operation_id: Int
  status: String!
}

type updateEventGroupApprovalOutput {
  error: String
  status: String!
}

type updateGlobalSettingsOutput {
  error: String
  status: String!
}

type updateOperationOutput {
  admin_id: Int
  channel: String
  complete: Boolean
  deleted: Boolean
  error: String
  id: Int
  name: String
  status: String!
  webhook: String
}

type updateOperatorOperationOutput {
  error: String
  status: String!
}

type updateOperatorSecretsOutput {
  error: String
  status: String!
}

type updateOperatorStatusOutput {
  active: Boolean
  admin: Boolean
  deleted: Boolean
  error: String
  id: Int
  status: String!
}

type uploadContainerOutput {
  error: String
  filename: String
  status: String!
  version: String
}

"""
columns and relationships of "wrappedpayloadtypes"
"""
type wrappedpayloadtypes {
  id: Int!

  """An object relationship"""
  wrapped: payloadtype!

  """An object relationship"""
  wrapped_by: payloadtype!
  wrapped_id: Int!
  wrapper_id: Int!
}

"""
order by aggregate values of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_aggregate_order_by {
  avg: wrappedpayloadtypes_avg_order_by
  count: order_by
  max: wrappedpayloadtypes_max_order_by
  min: wrappedpayloadtypes_min_order_by
  stddev: wrappedpayloadtypes_stddev_order_by
  stddev_pop: wrappedpayloadtypes_stddev_pop_order_by
  stddev_samp: wrappedpayloadtypes_stddev_samp_order_by
  sum: wrappedpayloadtypes_sum_order_by
  var_pop: wrappedpayloadtypes_var_pop_order_by
  var_samp: wrappedpayloadtypes_var_samp_order_by
  variance: wrappedpayloadtypes_variance_order_by
}

"""
order by avg() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_avg_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
Boolean expression to filter rows from the table "wrappedpayloadtypes". All fields are combined with a logical 'AND'.
"""
input wrappedpayloadtypes_bool_exp {
  _and: [wrappedpayloadtypes_bool_exp!]
  _not: wrappedpayloadtypes_bool_exp
  _or: [wrappedpayloadtypes_bool_exp!]
  id: Int_comparison_exp
  wrapped: payloadtype_bool_exp
  wrapped_by: payloadtype_bool_exp
  wrapped_id: Int_comparison_exp
  wrapper_id: Int_comparison_exp
}

"""
order by max() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_max_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
order by min() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_min_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""Ordering options when selecting data from "wrappedpayloadtypes"."""
input wrappedpayloadtypes_order_by {
  id: order_by
  wrapped: payloadtype_order_by
  wrapped_by: payloadtype_order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
select columns of table "wrappedpayloadtypes"
"""
enum wrappedpayloadtypes_select_column {
  """column name"""
  id

  """column name"""
  wrapped_id

  """column name"""
  wrapper_id
}

"""
order by stddev() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_stddev_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
order by stddev_pop() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_stddev_pop_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
order by stddev_samp() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_stddev_samp_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
Streaming cursor of the table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: wrappedpayloadtypes_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input wrappedpayloadtypes_stream_cursor_value_input {
  id: Int
  wrapped_id: Int
  wrapper_id: Int
}

"""
order by sum() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_sum_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
order by var_pop() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_var_pop_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
order by var_samp() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_var_samp_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}

"""
order by variance() on columns of table "wrappedpayloadtypes"
"""
input wrappedpayloadtypes_variance_order_by {
  id: order_by
  wrapped_id: order_by
  wrapper_id: order_by
}